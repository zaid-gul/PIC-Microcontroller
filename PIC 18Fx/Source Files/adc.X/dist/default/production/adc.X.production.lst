

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Nov 12 17:10:42 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58  0000                     
    59                           ; Version 2.10
    60                           ; Generated 31/07/2019 GMT
    61                           ; 
    62                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F46K22 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     _ANSELA	set	3896
    94  0000                     _ANSELE	set	3900
    95  0000                     _ANSELB	set	3897
    96  0000                     _ANSELC	set	3898
    97  0000                     _ANSELD	set	3899
    98  0000                     _INTCONbits	set	4082
    99  0000                     _INTCON2bits	set	4081
   100  0000                     _WPUB	set	3937
   101  0000                     _TRISD	set	3989
   102  0000                     _TRISC	set	3988
   103  0000                     _TRISA	set	3986
   104  0000                     _TRISE	set	3990
   105  0000                     _LATC	set	3979
   106  0000                     _LATB	set	3978
   107  0000                     _LATA	set	3977
   108  0000                     _LATD	set	3980
   109  0000                     _LATE	set	3981
   110  0000                     _OSCTUNE	set	3995
   111  0000                     _OSCCON2	set	4050
   112  0000                     _OSCCON	set	4051
   113  0000                     _ADCON0bits	set	4034
   114  0000                     _ADRESH	set	4036
   115  0000                     _ADRESL	set	4035
   116  0000                     _ADCON2	set	4032
   117  0000                     _ADCON1	set	4033
   118  0000                     _ADCON0	set	4034
   119  0000                     _PORTBbits	set	3969
   120  0000                     _TRISB	set	3987
   121  0000                     _PORTB	set	3969
   122                           
   123                           	psect	smallconst
   124  001000                     __psmallconst:
   125                           	opt callstack 0
   126  001000  00                 	db	0
   127  001001                     STR_2:
   128  001001  54                 	db	84	;'T'
   129  001002  75                 	db	117	;'u'
   130  001003  72                 	db	114	;'r'
   131  001004  6E                 	db	110	;'n'
   132  001005  20                 	db	32
   133  001006  50                 	db	80	;'P'
   134  001007  4F                 	db	79	;'O'
   135  001008  54                 	db	84	;'T'
   136  001009  20                 	db	32
   137  00100A  6F                 	db	111	;'o'
   138  00100B  6E                 	db	110	;'n'
   139  00100C  20                 	db	32
   140  00100D  41                 	db	65	;'A'
   141  00100E  4E                 	db	78	;'N'
   142  00100F  30                 	db	48	;'0'
   143  001010  00                 	db	0
   144  001011                     STR_1:
   145  001011  41                 	db	65	;'A'
   146  001012  44                 	db	68	;'D'
   147  001013  43                 	db	67	;'C'
   148  001014  20                 	db	32
   149  001015  43                 	db	67	;'C'
   150  001016  6F                 	db	111	;'o'
   151  001017  6E                 	db	110	;'n'
   152  001018  76                 	db	118	;'v'
   153  001019  65                 	db	101	;'e'
   154  00101A  72                 	db	114	;'r'
   155  00101B  73                 	db	115	;'s'
   156  00101C  69                 	db	105	;'i'
   157  00101D  6F                 	db	111	;'o'
   158  00101E  6E                 	db	110	;'n'
   159  00101F  00                 	db	0
   160  001020                     STR_3:
   161  001020  56                 	db	86	;'V'
   162  001021  6F                 	db	111	;'o'
   163  001022  6C                 	db	108	;'l'
   164  001023  74                 	db	116	;'t'
   165  001024  61                 	db	97	;'a'
   166  001025  67                 	db	103	;'g'
   167  001026  65                 	db	101	;'e'
   168  001027  3D                 	db	61	;'='
   169  001028  20                 	db	32
   170  001029  00                 	db	0
   171  00102A                     STR_4:
   172  00102A  20                 	db	32
   173  00102B  25                 	db	37
   174  00102C  2E                 	db	46
   175  00102D  33                 	db	51	;'3'
   176  00102E  67                 	db	103	;'g'
   177  00102F  00                 	db	0
   178  001030                     STR_6:
   179  001030  49                 	db	73	;'I'
   180  001031  4E                 	db	78	;'N'
   181  001032  46                 	db	70	;'F'
   182  001033  00                 	db	0
   183  001034                     STR_10:
   184  001034  4E                 	db	78	;'N'
   185  001035  41                 	db	65	;'A'
   186  001036  4E                 	db	78	;'N'
   187  001037  00                 	db	0
   188  001038                     STR_7:
   189  001038  69                 	db	105	;'i'
   190  001039  6E                 	db	110	;'n'
   191  00103A  66                 	db	102	;'f'
   192  00103B  00                 	db	0
   193  00103C                     STR_11:
   194  00103C  6E                 	db	110	;'n'
   195  00103D  61                 	db	97	;'a'
   196  00103E  6E                 	db	110	;'n'
   197  00103F  00                 	db	0
   198  001040                     STR_14:
   199  001040  6C                 	db	108	;'l'
   200  001041  67                 	db	103	;'g'
   201  001042  00                 	db	0
   202  001043                     STR_5:
   203  001043  20                 	db	32
   204  001044  20                 	db	32
   205  001045  00                 	db	0
   206  0000                     
   207                           ; #config settings
   208  001046  00                 	db	0	; dummy byte at the end
   209  0000                     
   210                           	psect	cinit
   211  00405E                     __pcinit:
   212                           	opt callstack 0
   213  00405E                     start_initialization:
   214                           	opt callstack 0
   215  00405E                     __initialization:
   216                           	opt callstack 0
   217                           
   218                           ; Clear objects allocated to BANK1 (80 bytes)
   219  00405E  EE01  F000         	lfsr	0,__pbssBANK1
   220  004062  0E50               	movlw	80
   221  004064                     clear_0:
   222  004064  6AEE               	clrf	postinc0,c
   223  004066  06E8               	decf	wreg,f,c
   224  004068  E1FD               	bnz	clear_0
   225                           
   226                           ; Clear objects allocated to BANK0 (42 bytes)
   227  00406A  EE00  F0CB         	lfsr	0,__pbssBANK0
   228  00406E  0E2A               	movlw	42
   229  004070                     clear_1:
   230  004070  6AEE               	clrf	postinc0,c
   231  004072  06E8               	decf	wreg,f,c
   232  004074  E1FD               	bnz	clear_1
   233  004076                     end_of_initialization:
   234                           	opt callstack 0
   235  004076                     __end_of__initialization:
   236                           	opt callstack 0
   237  004076  0E00               	movlw	low (__Lmediumconst shr (0+16))
   238  004078  6EF8               	movwf	tblptru,c
   239  00407A  0100               	movlb	0
   240  00407C  EF20  F019         	goto	_main	;jump to C main() function
   241                           
   242                           	psect	bssBANK0
   243  0000CB                     __pbssBANK0:
   244                           	opt callstack 0
   245  0000CB                     floorf@F524:
   246                           	opt callstack 0
   247  0000CB                     	ds	4
   248  0000CF                     ___fpclassifyf@F463:
   249                           	opt callstack 0
   250  0000CF                     	ds	4
   251  0000D3                     _Voltage:
   252                           	opt callstack 0
   253  0000D3                     	ds	4
   254  0000D7                     _nout:
   255                           	opt callstack 0
   256  0000D7                     	ds	2
   257  0000D9                     _width:
   258                           	opt callstack 0
   259  0000D9                     	ds	2
   260  0000DB                     _prec:
   261                           	opt callstack 0
   262  0000DB                     	ds	2
   263  0000DD                     _flags:
   264                           	opt callstack 0
   265  0000DD                     	ds	2
   266  0000DF                     _converted_Value:
   267                           	opt callstack 0
   268  0000DF                     	ds	2
   269  0000E1                     _Buffer:
   270                           	opt callstack 0
   271  0000E1                     	ds	20
   272                           
   273                           	psect	bssBANK1
   274  000100                     __pbssBANK1:
   275                           	opt callstack 0
   276  000100                     _dbuf:
   277                           	opt callstack 0
   278  000100                     	ds	80
   279                           
   280                           	psect	cstackBANK0
   281  000060                     __pcstackBANK0:
   282                           	opt callstack 0
   283  000060                     ??_efgtoa:
   284                           
   285                           ; 1 bytes @ 0x0
   286  000060                     	ds	5
   287  000065                     efgtoa@ou:
   288                           	opt callstack 0
   289                           
   290                           ; 4 bytes @ 0x5
   291  000065                     	ds	4
   292  000069                     _efgtoa$553:
   293                           	opt callstack 0
   294                           
   295                           ; 2 bytes @ 0x9
   296  000069                     	ds	2
   297  00006B                     _efgtoa$554:
   298                           	opt callstack 0
   299                           
   300                           ; 2 bytes @ 0xB
   301  00006B                     	ds	2
   302  00006D                     _efgtoa$559:
   303                           	opt callstack 0
   304                           
   305                           ; 2 bytes @ 0xD
   306  00006D                     	ds	2
   307  00006F                     _efgtoa$563:
   308                           	opt callstack 0
   309                           
   310                           ; 2 bytes @ 0xF
   311  00006F                     	ds	2
   312  000071                     _efgtoa$564:
   313                           	opt callstack 0
   314                           
   315                           ; 2 bytes @ 0x11
   316  000071                     	ds	2
   317  000073                     _efgtoa$565:
   318                           	opt callstack 0
   319                           
   320                           ; 2 bytes @ 0x13
   321  000073                     	ds	2
   322  000075                     efgtoa@t:
   323                           	opt callstack 0
   324                           
   325                           ; 2 bytes @ 0x15
   326  000075                     	ds	2
   327  000077                     efgtoa@pp:
   328                           	opt callstack 0
   329                           
   330                           ; 2 bytes @ 0x17
   331  000077                     	ds	2
   332  000079                     efgtoa@m:
   333                           	opt callstack 0
   334                           
   335                           ; 2 bytes @ 0x19
   336  000079                     	ds	2
   337  00007B                     efgtoa@ne:
   338                           	opt callstack 0
   339                           
   340                           ; 2 bytes @ 0x1B
   341  00007B                     	ds	2
   342  00007D                     efgtoa@d:
   343                           	opt callstack 0
   344                           
   345                           ; 2 bytes @ 0x1D
   346  00007D                     	ds	2
   347  00007F                     efgtoa@sign:
   348                           	opt callstack 0
   349                           
   350                           ; 2 bytes @ 0x1F
   351  00007F                     	ds	2
   352  000081                     efgtoa@p:
   353                           	opt callstack 0
   354                           
   355                           ; 2 bytes @ 0x21
   356  000081                     	ds	2
   357  000083                     efgtoa@nmode:
   358                           	opt callstack 0
   359                           
   360                           ; 1 bytes @ 0x23
   361  000083                     	ds	1
   362  000084                     efgtoa@w:
   363                           	opt callstack 0
   364                           
   365                           ; 2 bytes @ 0x24
   366  000084                     	ds	2
   367  000086                     efgtoa@mode:
   368                           	opt callstack 0
   369                           
   370                           ; 1 bytes @ 0x26
   371  000086                     	ds	1
   372  000087                     efgtoa@h:
   373                           	opt callstack 0
   374                           
   375                           ; 4 bytes @ 0x27
   376  000087                     	ds	4
   377  00008B                     efgtoa@l:
   378                           	opt callstack 0
   379                           
   380                           ; 4 bytes @ 0x2B
   381  00008B                     	ds	4
   382  00008F                     efgtoa@i:
   383                           	opt callstack 0
   384                           
   385                           ; 2 bytes @ 0x2F
   386  00008F                     	ds	2
   387  000091                     efgtoa@g:
   388                           	opt callstack 0
   389                           
   390                           ; 4 bytes @ 0x31
   391  000091                     	ds	4
   392  000095                     efgtoa@e:
   393                           	opt callstack 0
   394                           
   395                           ; 2 bytes @ 0x35
   396  000095                     	ds	2
   397  000097                     efgtoa@n:
   398                           	opt callstack 0
   399                           
   400                           ; 2 bytes @ 0x37
   401  000097                     	ds	2
   402  000099                     efgtoa@u:
   403                           	opt callstack 0
   404                           
   405                           ; 4 bytes @ 0x39
   406  000099                     	ds	4
   407  00009D                     ?_vfpfcnvrt:
   408                           	opt callstack 0
   409  00009D                     vfpfcnvrt@fp:
   410                           	opt callstack 0
   411                           
   412                           ; 2 bytes @ 0x3D
   413  00009D                     	ds	2
   414  00009F                     vfpfcnvrt@fmt:
   415                           	opt callstack 0
   416                           
   417                           ; 2 bytes @ 0x3F
   418  00009F                     	ds	2
   419  0000A1                     vfpfcnvrt@ap:
   420                           	opt callstack 0
   421                           
   422                           ; 2 bytes @ 0x41
   423  0000A1                     	ds	2
   424  0000A3                     _vfpfcnvrt$579:
   425                           	opt callstack 0
   426                           
   427                           ; 2 bytes @ 0x43
   428  0000A3                     	ds	2
   429  0000A5                     _vfpfcnvrt$583:
   430                           	opt callstack 0
   431                           
   432                           ; 2 bytes @ 0x45
   433  0000A5                     	ds	2
   434  0000A7                     vfpfcnvrt@f:
   435                           	opt callstack 0
   436                           
   437                           ; 4 bytes @ 0x47
   438  0000A7                     	ds	4
   439  0000AB                     vfpfcnvrt@ct:
   440                           	opt callstack 0
   441                           
   442                           ; 3 bytes @ 0x4B
   443  0000AB                     	ds	3
   444  0000AE                     vfpfcnvrt@c:
   445                           	opt callstack 0
   446                           
   447                           ; 1 bytes @ 0x4E
   448  0000AE                     	ds	1
   449  0000AF                     ?_vfprintf:
   450                           	opt callstack 0
   451  0000AF                     vfprintf@fp:
   452                           	opt callstack 0
   453                           
   454                           ; 2 bytes @ 0x4F
   455  0000AF                     	ds	2
   456  0000B1                     vfprintf@fmt:
   457                           	opt callstack 0
   458                           
   459                           ; 2 bytes @ 0x51
   460  0000B1                     	ds	2
   461  0000B3                     vfprintf@ap:
   462                           	opt callstack 0
   463                           
   464                           ; 2 bytes @ 0x53
   465  0000B3                     	ds	2
   466  0000B5                     vfprintf@cfmt:
   467                           	opt callstack 0
   468                           
   469                           ; 2 bytes @ 0x55
   470  0000B5                     	ds	2
   471  0000B7                     ?_sprintf:
   472                           	opt callstack 0
   473  0000B7                     sprintf@s:
   474                           	opt callstack 0
   475                           
   476                           ; 2 bytes @ 0x57
   477  0000B7                     	ds	2
   478  0000B9                     sprintf@fmt:
   479                           	opt callstack 0
   480                           
   481                           ; 2 bytes @ 0x59
   482  0000B9                     	ds	8
   483  0000C1                     sprintf@ap:
   484                           	opt callstack 0
   485                           
   486                           ; 2 bytes @ 0x61
   487  0000C1                     	ds	2
   488  0000C3                     sprintf@f:
   489                           	opt callstack 0
   490                           
   491                           ; 6 bytes @ 0x63
   492  0000C3                     	ds	6
   493  0000C9                     ??_main:
   494                           
   495                           ; 1 bytes @ 0x69
   496  0000C9                     	ds	2
   497                           
   498                           	psect	cstackCOMRAM
   499  000001                     __pcstackCOMRAM:
   500                           	opt callstack 0
   501  000001                     ??_ADC_SelectChannel:
   502  000001                     ?_strlen:
   503                           	opt callstack 0
   504  000001                     ?___fpclassifyf:
   505                           	opt callstack 0
   506  000001                     ?_isupper:
   507                           	opt callstack 0
   508  000001                     ?_isdigit:
   509                           	opt callstack 0
   510  000001                     ?_strncmp:
   511                           	opt callstack 0
   512  000001                     ?_isspace:
   513                           	opt callstack 0
   514  000001                     ?_ADC_GetConversionResult:
   515                           	opt callstack 0
   516  000001                     ?___wmul:
   517                           	opt callstack 0
   518  000001                     ?___awdiv:
   519                           	opt callstack 0
   520  000001                     ?___awmod:
   521                           	opt callstack 0
   522  000001                     ?___fladd:
   523                           	opt callstack 0
   524  000001                     ?___flneg:
   525                           	opt callstack 0
   526  000001                     ?___fltol:
   527                           	opt callstack 0
   528  000001                     ?___xxtofl:
   529                           	opt callstack 0
   530  000001                     LCDWriteNibble@rs:
   531                           	opt callstack 0
   532  000001                     ___wmul@multiplier:
   533                           	opt callstack 0
   534  000001                     ___awdiv@dividend:
   535                           	opt callstack 0
   536  000001                     ___awmod@dividend:
   537                           	opt callstack 0
   538  000001                     isdigit@c:
   539                           	opt callstack 0
   540  000001                     isspace@c:
   541                           	opt callstack 0
   542  000001                     isupper@c:
   543                           	opt callstack 0
   544  000001                     fputc@c:
   545                           	opt callstack 0
   546  000001                     strcpy@dest:
   547                           	opt callstack 0
   548  000001                     strlen@s:
   549                           	opt callstack 0
   550  000001                     strncmp@_l:
   551                           	opt callstack 0
   552  000001                     ___fleq@ff1:
   553                           	opt callstack 0
   554  000001                     ___flneg@f1:
   555                           	opt callstack 0
   556  000001                     ___fltol@f1:
   557                           	opt callstack 0
   558  000001                     ___fladd@b:
   559                           	opt callstack 0
   560  000001                     ___xxtofl@val:
   561                           	opt callstack 0
   562  000001                     ___fpclassifyf@x:
   563                           	opt callstack 0
   564                           
   565                           ; 4 bytes @ 0x0
   566  000001                     	ds	1
   567  000002                     LCDWriteNibble@ch:
   568                           	opt callstack 0
   569  000002                     ADC_SelectChannel@channel:
   570                           	opt callstack 0
   571                           
   572                           ; 1 bytes @ 0x1
   573  000002                     	ds	1
   574  000003                     ??_LCDPutCmd:
   575  000003                     ??_isupper:
   576  000003                     ??_isdigit:
   577  000003                     ??_isspace:
   578  000003                     ??_LCDPutChar:
   579  000003                     ??_ADC_GetConversionResult:
   580  000003                     ___wmul@multiplicand:
   581                           	opt callstack 0
   582  000003                     ___awdiv@divisor:
   583                           	opt callstack 0
   584  000003                     ___awmod@divisor:
   585                           	opt callstack 0
   586  000003                     fputc@fp:
   587                           	opt callstack 0
   588  000003                     strcpy@src:
   589                           	opt callstack 0
   590  000003                     strlen@a:
   591                           	opt callstack 0
   592  000003                     strncmp@_r:
   593                           	opt callstack 0
   594                           
   595                           ; 2 bytes @ 0x2
   596  000003                     	ds	1
   597  000004                     LCDPutChar@ch:
   598                           	opt callstack 0
   599  000004                     LCDPutCmd@ch:
   600                           	opt callstack 0
   601                           
   602                           ; 1 bytes @ 0x3
   603  000004                     	ds	1
   604  000005                     ??_fputc:
   605  000005                     ??___fpclassifyf:
   606  000005                     ??_strcpy:
   607  000005                     ??_LCD_Initialize:
   608  000005                     ??___fltol:
   609  000005                     ??___xxtofl:
   610  000005                     LCDGoto@ln:
   611                           	opt callstack 0
   612  000005                     ___awdiv@counter:
   613                           	opt callstack 0
   614  000005                     ___awmod@counter:
   615                           	opt callstack 0
   616  000005                     LCDPutStr@str:
   617                           	opt callstack 0
   618  000005                     ___wmul@product:
   619                           	opt callstack 0
   620  000005                     strncmp@n:
   621                           	opt callstack 0
   622  000005                     ___fleq@ff2:
   623                           	opt callstack 0
   624  000005                     ___fladd@a:
   625                           	opt callstack 0
   626                           
   627                           ; 4 bytes @ 0x4
   628  000005                     	ds	1
   629  000006                     ??_LCDGoto:
   630  000006                     ___awdiv@sign:
   631                           	opt callstack 0
   632  000006                     ___awmod@sign:
   633                           	opt callstack 0
   634                           
   635                           ; 1 bytes @ 0x5
   636  000006                     	ds	1
   637  000007                     ??_strncmp:
   638  000007                     ??_LCDPutStr:
   639  000007                     ?_tolower:
   640                           	opt callstack 0
   641  000007                     _isspace$1085:
   642                           	opt callstack 0
   643  000007                     ___awdiv@quotient:
   644                           	opt callstack 0
   645  000007                     strcpy@s:
   646                           	opt callstack 0
   647  000007                     tolower@c:
   648                           	opt callstack 0
   649                           
   650                           ; 2 bytes @ 0x6
   651  000007                     	ds	1
   652  000008                     ?_atoi:
   653                           	opt callstack 0
   654  000008                     _LCDGoto$181:
   655                           	opt callstack 0
   656  000008                     atoi@s:
   657                           	opt callstack 0
   658  000008                     strncmp@l:
   659                           	opt callstack 0
   660                           
   661                           ; 2 bytes @ 0x7
   662  000008                     	ds	1
   663  000009                     ??_tolower:
   664  000009                     ??___fladd:
   665  000009                     ??___fleq:
   666  000009                     LCDPutStr@i:
   667                           	opt callstack 0
   668  000009                     ___fltol@sign1:
   669                           	opt callstack 0
   670  000009                     ___xxtofl@sign:
   671                           	opt callstack 0
   672  000009                     ___fpclassifyf@e:
   673                           	opt callstack 0
   674  000009                     strcpy@d:
   675                           	opt callstack 0
   676                           
   677                           ; 2 bytes @ 0x8
   678  000009                     	ds	1
   679  00000A                     ??_atoi:
   680  00000A                     LCDGoto@pos:
   681                           	opt callstack 0
   682  00000A                     ___fltol@exp1:
   683                           	opt callstack 0
   684  00000A                     ___xxtofl@exp:
   685                           	opt callstack 0
   686  00000A                     fputs@s:
   687                           	opt callstack 0
   688  00000A                     strncmp@r:
   689                           	opt callstack 0
   690                           
   691                           ; 2 bytes @ 0x9
   692  00000A                     	ds	1
   693  00000B                     ___xxtofl@arg:
   694                           	opt callstack 0
   695  00000B                     ___fpclassifyf@u:
   696                           	opt callstack 0
   697                           
   698                           ; 4 bytes @ 0xA
   699  00000B                     	ds	1
   700  00000C                     fputs@fp:
   701                           	opt callstack 0
   702                           
   703                           ; 2 bytes @ 0xB
   704  00000C                     	ds	1
   705  00000D                     ___fladd@signs:
   706                           	opt callstack 0
   707  00000D                     _tolower$1170:
   708                           	opt callstack 0
   709                           
   710                           ; 2 bytes @ 0xC
   711  00000D                     	ds	1
   712  00000E                     ___fladd@aexp:
   713                           	opt callstack 0
   714  00000E                     fputs@c:
   715                           	opt callstack 0
   716  00000E                     atoi@neg:
   717                           	opt callstack 0
   718                           
   719                           ; 2 bytes @ 0xD
   720  00000E                     	ds	1
   721  00000F                     ?___flmul:
   722                           	opt callstack 0
   723  00000F                     ___fladd@bexp:
   724                           	opt callstack 0
   725  00000F                     fputs@i:
   726                           	opt callstack 0
   727  00000F                     ___flmul@b:
   728                           	opt callstack 0
   729                           
   730                           ; 4 bytes @ 0xE
   731  00000F                     	ds	1
   732  000010                     ___fladd@grs:
   733                           	opt callstack 0
   734  000010                     _atoi$1054:
   735                           	opt callstack 0
   736                           
   737                           ; 2 bytes @ 0xF
   738  000010                     	ds	1
   739  000011                     ?_pad:
   740                           	opt callstack 0
   741  000011                     pad@fp:
   742                           	opt callstack 0
   743                           
   744                           ; 2 bytes @ 0x10
   745  000011                     	ds	1
   746  000012                     _atoi$1056:
   747                           	opt callstack 0
   748                           
   749                           ; 2 bytes @ 0x11
   750  000012                     	ds	1
   751  000013                     pad@buf:
   752                           	opt callstack 0
   753  000013                     ___flmul@a:
   754                           	opt callstack 0
   755                           
   756                           ; 4 bytes @ 0x12
   757  000013                     	ds	1
   758  000014                     _atoi$1055:
   759                           	opt callstack 0
   760                           
   761                           ; 1 bytes @ 0x13
   762  000014                     	ds	1
   763  000015                     pad@p:
   764                           	opt callstack 0
   765  000015                     atoi@n:
   766                           	opt callstack 0
   767                           
   768                           ; 2 bytes @ 0x14
   769  000015                     	ds	2
   770  000017                     ??___flmul:
   771  000017                     ??_pad:
   772                           
   773                           ; 1 bytes @ 0x16
   774  000017                     	ds	1
   775  000018                     pad@i:
   776                           	opt callstack 0
   777                           
   778                           ; 2 bytes @ 0x17
   779  000018                     	ds	2
   780  00001A                     pad@w:
   781                           	opt callstack 0
   782                           
   783                           ; 2 bytes @ 0x19
   784  00001A                     	ds	1
   785  00001B                     ___flmul@sign:
   786                           	opt callstack 0
   787                           
   788                           ; 1 bytes @ 0x1A
   789  00001B                     	ds	1
   790  00001C                     ___flmul@grs:
   791                           	opt callstack 0
   792                           
   793                           ; 4 bytes @ 0x1B
   794  00001C                     	ds	4
   795  000020                     ___flmul@aexp:
   796                           	opt callstack 0
   797                           
   798                           ; 1 bytes @ 0x1F
   799  000020                     	ds	1
   800  000021                     ___flmul@bexp:
   801                           	opt callstack 0
   802                           
   803                           ; 1 bytes @ 0x20
   804  000021                     	ds	1
   805  000022                     ___flmul@prod:
   806                           	opt callstack 0
   807                           
   808                           ; 4 bytes @ 0x21
   809  000022                     	ds	4
   810  000026                     ___flmul@temp:
   811                           	opt callstack 0
   812                           
   813                           ; 2 bytes @ 0x25
   814  000026                     	ds	2
   815  000028                     ?___fldiv:
   816                           	opt callstack 0
   817  000028                     ?___flsub:
   818                           	opt callstack 0
   819  000028                     ___flge@ff1:
   820                           	opt callstack 0
   821  000028                     ___flsub@b:
   822                           	opt callstack 0
   823  000028                     ___fldiv@b:
   824                           	opt callstack 0
   825                           
   826                           ; 4 bytes @ 0x27
   827  000028                     	ds	4
   828  00002C                     ___flge@ff2:
   829                           	opt callstack 0
   830  00002C                     ___flsub@a:
   831                           	opt callstack 0
   832  00002C                     ___fldiv@a:
   833                           	opt callstack 0
   834                           
   835                           ; 4 bytes @ 0x2B
   836  00002C                     	ds	4
   837  000030                     ??___fldiv:
   838  000030                     ??___flge:
   839                           
   840                           ; 1 bytes @ 0x2F
   841  000030                     	ds	4
   842  000034                     ___fldiv@rem:
   843                           	opt callstack 0
   844                           
   845                           ; 4 bytes @ 0x33
   846  000034                     	ds	4
   847  000038                     ___fldiv@sign:
   848                           	opt callstack 0
   849                           
   850                           ; 1 bytes @ 0x37
   851  000038                     	ds	1
   852  000039                     ___fldiv@new_exp:
   853                           	opt callstack 0
   854                           
   855                           ; 2 bytes @ 0x38
   856  000039                     	ds	2
   857  00003B                     ___fldiv@grs:
   858                           	opt callstack 0
   859                           
   860                           ; 4 bytes @ 0x3A
   861  00003B                     	ds	4
   862  00003F                     ___fldiv@bexp:
   863                           	opt callstack 0
   864                           
   865                           ; 1 bytes @ 0x3E
   866  00003F                     	ds	1
   867  000040                     ___fldiv@aexp:
   868                           	opt callstack 0
   869                           
   870                           ; 1 bytes @ 0x3F
   871  000040                     	ds	1
   872  000041                     ?_floorf:
   873                           	opt callstack 0
   874  000041                     floorf@x:
   875                           	opt callstack 0
   876                           
   877                           ; 4 bytes @ 0x40
   878  000041                     	ds	4
   879  000045                     ??_floorf:
   880                           
   881                           ; 1 bytes @ 0x44
   882  000045                     	ds	6
   883  00004B                     floorf@m:
   884                           	opt callstack 0
   885                           
   886                           ; 4 bytes @ 0x4A
   887  00004B                     	ds	4
   888  00004F                     floorf@e:
   889                           	opt callstack 0
   890                           
   891                           ; 2 bytes @ 0x4E
   892  00004F                     	ds	2
   893  000051                     floorf@u:
   894                           	opt callstack 0
   895                           
   896                           ; 4 bytes @ 0x50
   897  000051                     	ds	4
   898  000055                     ?_efgtoa:
   899                           	opt callstack 0
   900  000055                     efgtoa@fp:
   901                           	opt callstack 0
   902                           
   903                           ; 2 bytes @ 0x54
   904  000055                     	ds	2
   905  000057                     efgtoa@f:
   906                           	opt callstack 0
   907                           
   908                           ; 4 bytes @ 0x56
   909  000057                     	ds	4
   910  00005B                     efgtoa@c:
   911                           	opt callstack 0
   912                           
   913                           ; 1 bytes @ 0x5A
   914  00005B                     	ds	1
   915  00005C                     ??_vfpfcnvrt:
   916                           
   917                           ; 1 bytes @ 0x5B
   918  00005C                     	ds	4
   919  000060                     
   920                           ; 1 bytes @ 0x5F
   921 ;;
   922 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   923 ;;
   924 ;; *************** function _main *****************
   925 ;; Defined at:
   926 ;;		line 55 in file "main.c"
   927 ;; Parameters:    Size  Location     Type
   928 ;;		None
   929 ;; Auto vars:     Size  Location     Type
   930 ;;		None
   931 ;; Return value:  Size  Location     Type
   932 ;;                  1    wreg      void 
   933 ;; Registers used:
   934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   935 ;; Tracked objects:
   936 ;;		On entry : 0/0
   937 ;;		On exit  : 0/0
   938 ;;		Unchanged: 0/0
   939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   942 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   943 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   944 ;;Total ram usage:        2 bytes
   945 ;; Hardware stack levels required when called:    8
   946 ;; This function calls:
   947 ;;		_ADC_GetConversionResult
   948 ;;		_ADC_IsConversionDone
   949 ;;		_ADC_SelectChannel
   950 ;;		_ADC_StartConversion
   951 ;;		_LCDGoto
   952 ;;		_LCDPutCmd
   953 ;;		_LCDPutStr
   954 ;;		_LCD_Initialize
   955 ;;		_SYSTEM_Initialize
   956 ;;		___fldiv
   957 ;;		___flmul
   958 ;;		___xxtofl
   959 ;;		_sprintf
   960 ;; This function is called by:
   961 ;;		Startup code after reset
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           	psect	text0
   966  003240                     __ptext0:
   967                           	opt callstack 0
   968  003240                     _main:
   969                           	opt callstack 23
   970  003240                     
   971                           ;main.c: 58:     SYSTEM_Initialize();
   972  003240  EC6B  F020         	call	_SYSTEM_Initialize	;wreg free
   973  003244                     
   974                           ;main.c: 60:     LCD_Initialize();
   975  003244  EC47  F01F         	call	_LCD_Initialize	;wreg free
   976  003248                     
   977                           ;main.c: 77: LCDPutCmd(0x0C);
   978  003248  0E0C               	movlw	12
   979  00324A  EC64  F01F         	call	_LCDPutCmd
   980  00324E                     
   981                           ;main.c: 78: LCDPutStr("ADC Conversion");
   982  00324E  0E11               	movlw	low STR_1
   983  003250  6E05               	movwf	LCDPutStr@str^0,c
   984  003252  0E10               	movlw	high STR_1
   985  003254  6E06               	movwf	(LCDPutStr@str+1)^0,c
   986  003256  EC8B  F01D         	call	_LCDPutStr	;wreg free
   987  00325A                     
   988                           ;main.c: 79: LCDGoto(0,1);
   989  00325A  0E01               	movlw	1
   990  00325C  6E05               	movwf	LCDGoto@ln^0,c
   991  00325E  0E00               	movlw	0
   992  003260  ECC9  F01D         	call	_LCDGoto
   993  003264                     
   994                           ;main.c: 80: LCDPutStr("Turn POT on AN0");
   995  003264  0E01               	movlw	low STR_2
   996  003266  6E05               	movwf	LCDPutStr@str^0,c
   997  003268  0E10               	movlw	high STR_2
   998  00326A  6E06               	movwf	(LCDPutStr@str+1)^0,c
   999  00326C  EC8B  F01D         	call	_LCDPutStr	;wreg free
  1000  003270                     
  1001                           ;main.c: 81: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1002  003270  0E0B               	movlw	11
  1003  003272  0100               	movlb	0	; () banked
  1004  003274  6FCA               	movwf	(??_main+1)& (0+255),b
  1005  003276  0E26               	movlw	38
  1006  003278  6FC9               	movwf	??_main& (0+255),b
  1007  00327A  0E5D               	movlw	93
  1008  00327C                     u4947:
  1009  00327C  2EE8               	decfsz	wreg,f,c
  1010  00327E  D7FE               	bra	u4947
  1011  003280  2FC9               	decfsz	??_main& (0+255),f,b
  1012  003282  D7FC               	bra	u4947
  1013  003284  2FCA               	decfsz	(??_main+1)& (0+255),f,b
  1014  003286  D7FA               	bra	u4947
  1015  003288  D000               	nop2	
  1016  00328A                     
  1017                           ;main.c: 82: LCDPutCmd(0x01);
  1018  00328A  0E01               	movlw	1
  1019  00328C  EC64  F01F         	call	_LCDPutCmd
  1020  003290                     l4054:
  1021                           
  1022                           ;main.c: 86:     {;main.c: 87:         converted_Value=0;
  1023  003290  0E00               	movlw	0
  1024  003292  0100               	movlb	0	; () banked
  1025  003294  6FE0               	movwf	(_converted_Value+1)& (0+255),b
  1026  003296  0E00               	movlw	0
  1027  003298  6FDF               	movwf	_converted_Value& (0+255),b
  1028  00329A                     
  1029                           ; BSR set to: 0
  1030                           ;main.c: 88:         ADC_SelectChannel(channel_AN0);
  1031  00329A  0E00               	movlw	0
  1032  00329C  EC40  F020         	call	_ADC_SelectChannel
  1033  0032A0                     
  1034                           ;main.c: 89:         ADC_StartConversion();
  1035  0032A0  EC79  F020         	call	_ADC_StartConversion	;wreg free
  1036  0032A4                     l4060:
  1037  0032A4  EC57  F020         	call	_ADC_IsConversionDone	;wreg free
  1038  0032A8  0900               	iorlw	0
  1039  0032AA  B4D8               	btfsc	status,2,c
  1040  0032AC  EF5A  F019         	goto	u4931
  1041  0032B0  EF5C  F019         	goto	u4930
  1042  0032B4                     u4931:
  1043  0032B4  EF52  F019         	goto	l4060
  1044  0032B8                     u4930:
  1045  0032B8                     
  1046                           ;main.c: 91:         converted_Value=ADC_GetConversionResult();
  1047  0032B8  EC61  F020         	call	_ADC_GetConversionResult	;wreg free
  1048  0032BC  C001  F0DF         	movff	?_ADC_GetConversionResult,_converted_Value
  1049  0032C0  C002  F0E0         	movff	?_ADC_GetConversionResult+1,_converted_Value+1
  1050  0032C4                     
  1051                           ;main.c: 92:         Voltage=(converted_Value*5.0)/1023;
  1052  0032C4  0E00               	movlw	0
  1053  0032C6  6E13               	movwf	___flmul@a^0,c
  1054  0032C8  0E00               	movlw	0
  1055  0032CA  6E14               	movwf	(___flmul@a+1)^0,c
  1056  0032CC  0EA0               	movlw	160
  1057  0032CE  6E15               	movwf	(___flmul@a+2)^0,c
  1058  0032D0  0E40               	movlw	64
  1059  0032D2  6E16               	movwf	(___flmul@a+3)^0,c
  1060  0032D4  C0DF  F001         	movff	_converted_Value,___xxtofl@val
  1061  0032D8  C0E0  F002         	movff	_converted_Value+1,___xxtofl@val+1
  1062  0032DC  6A03               	clrf	(___xxtofl@val+2)^0,c
  1063  0032DE  6A04               	clrf	(___xxtofl@val+3)^0,c
  1064  0032E0  0E00               	movlw	0
  1065  0032E2  EC7E  F017         	call	___xxtofl
  1066  0032E6  C001  F00F         	movff	?___xxtofl,___flmul@b
  1067  0032EA  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1068  0032EE  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1069  0032F2  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1070  0032F6  EC93  F012         	call	___flmul	;wreg free
  1071  0032FA  C00F  F028         	movff	?___flmul,___fldiv@b
  1072  0032FE  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  1073  003302  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  1074  003306  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  1075  00330A  0E00               	movlw	0
  1076  00330C  6E2C               	movwf	___fldiv@a^0,c
  1077  00330E  0EC0               	movlw	192
  1078  003310  6E2D               	movwf	(___fldiv@a+1)^0,c
  1079  003312  0E7F               	movlw	127
  1080  003314  6E2E               	movwf	(___fldiv@a+2)^0,c
  1081  003316  0E44               	movlw	68
  1082  003318  6E2F               	movwf	(___fldiv@a+3)^0,c
  1083  00331A  ECA8  F014         	call	___fldiv	;wreg free
  1084  00331E  C028  F0D3         	movff	?___fldiv,_Voltage
  1085  003322  C029  F0D4         	movff	?___fldiv+1,_Voltage+1
  1086  003326  C02A  F0D5         	movff	?___fldiv+2,_Voltage+2
  1087  00332A  C02B  F0D6         	movff	?___fldiv+3,_Voltage+3
  1088  00332E                     
  1089                           ;main.c: 93:         LCDPutStr("Voltage= ");
  1090  00332E  0E20               	movlw	low STR_3
  1091  003330  6E05               	movwf	LCDPutStr@str^0,c
  1092  003332  0E10               	movlw	high STR_3
  1093  003334  6E06               	movwf	(LCDPutStr@str+1)^0,c
  1094  003336  EC8B  F01D         	call	_LCDPutStr	;wreg free
  1095  00333A                     
  1096                           ;main.c: 94:         sprintf(Buffer, " %.3g", Voltage);
  1097  00333A  0EE1               	movlw	low _Buffer
  1098  00333C  0100               	movlb	0	; () banked
  1099  00333E  6FB7               	movwf	sprintf@s& (0+255),b
  1100  003340  0E00               	movlw	high _Buffer
  1101  003342  6FB8               	movwf	(sprintf@s+1)& (0+255),b
  1102  003344  0E2A               	movlw	low STR_4
  1103  003346  6FB9               	movwf	sprintf@fmt& (0+255),b
  1104  003348  0E10               	movlw	high STR_4
  1105  00334A  6FBA               	movwf	(sprintf@fmt+1)& (0+255),b
  1106  00334C  C0D3  F0BB         	movff	_Voltage,?_sprintf+4
  1107  003350  C0D4  F0BC         	movff	_Voltage+1,?_sprintf+5
  1108  003354  C0D5  F0BD         	movff	_Voltage+2,?_sprintf+6
  1109  003358  C0D6  F0BE         	movff	_Voltage+3,?_sprintf+7
  1110  00335C  EC91  F01E         	call	_sprintf	;wreg free
  1111  003360                     
  1112                           ;main.c: 95:         LCDPutStr(Buffer);
  1113  003360  0EE1               	movlw	low _Buffer
  1114  003362  6E05               	movwf	LCDPutStr@str^0,c
  1115  003364  0E00               	movlw	high _Buffer
  1116  003366  6E06               	movwf	(LCDPutStr@str+1)^0,c
  1117  003368  EC8B  F01D         	call	_LCDPutStr	;wreg free
  1118  00336C                     
  1119                           ;main.c: 96:         LCDPutStr("  ");
  1120  00336C  0E43               	movlw	low STR_5
  1121  00336E  6E05               	movwf	LCDPutStr@str^0,c
  1122  003370  0E10               	movlw	high STR_5
  1123  003372  6E06               	movwf	(LCDPutStr@str+1)^0,c
  1124  003374  EC8B  F01D         	call	_LCDPutStr	;wreg free
  1125  003378                     
  1126                           ;main.c: 97:         LCDGoto(0,0);
  1127  003378  0E00               	movlw	0
  1128  00337A  6E05               	movwf	LCDGoto@ln^0,c
  1129  00337C  0E00               	movlw	0
  1130  00337E  ECC9  F01D         	call	_LCDGoto
  1131  003382  EF48  F019         	goto	l4054
  1132  003386  EF00  F000         	goto	start
  1133  00338A                     __end_of_main:
  1134                           	opt callstack 0
  1135                           
  1136 ;; *************** function _sprintf *****************
  1137 ;; Defined at:
  1138 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;  s               2   87[BANK0 ] PTR unsigned char 
  1141 ;;		 -> Buffer(20), 
  1142 ;;  fmt             2   89[BANK0 ] PTR const unsigned char 
  1143 ;;		 -> STR_4(6), 
  1144 ;; Auto vars:     Size  Location     Type
  1145 ;;  f               6   99[BANK0 ] struct _IO_FILE
  1146 ;;  ap              2   97[BANK0 ] PTR void [1]
  1147 ;;		 -> ?_sprintf(2), 
  1148 ;;  ret             2    0        int 
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  2   87[BANK0 ] int 
  1151 ;; Registers used:
  1152 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1158 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1159 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1161 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1162 ;;Total ram usage:       18 bytes
  1163 ;; Hardware stack levels used:    1
  1164 ;; Hardware stack levels required when called:    7
  1165 ;; This function calls:
  1166 ;;		_vfprintf
  1167 ;; This function is called by:
  1168 ;;		_main
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171                           
  1172                           	psect	text1
  1173  003D22                     __ptext1:
  1174                           	opt callstack 0
  1175  003D22                     _sprintf:
  1176                           	opt callstack 23
  1177  003D22  0EBB               	movlw	low (?_sprintf+4)
  1178  003D24  0100               	movlb	0	; () banked
  1179  003D26  6FC1               	movwf	sprintf@ap& (0+255),b
  1180  003D28  0E00               	movlw	high (?_sprintf+4)
  1181  003D2A  6FC2               	movwf	(sprintf@ap+1)& (0+255),b
  1182  003D2C  C0B7  F0C3         	movff	sprintf@s,sprintf@f
  1183  003D30  C0B8  F0C4         	movff	sprintf@s+1,sprintf@f+1
  1184  003D34                     
  1185                           ; BSR set to: 0
  1186  003D34  0E00               	movlw	0
  1187  003D36  6FC6               	movwf	(sprintf@f+3)& (0+255),b
  1188  003D38  0E00               	movlw	0
  1189  003D3A  6FC5               	movwf	(sprintf@f+2)& (0+255),b
  1190  003D3C                     
  1191                           ; BSR set to: 0
  1192  003D3C  0E00               	movlw	0
  1193  003D3E  6FC8               	movwf	(sprintf@f+5)& (0+255),b
  1194  003D40  0E00               	movlw	0
  1195  003D42  6FC7               	movwf	(sprintf@f+4)& (0+255),b
  1196  003D44                     
  1197                           ; BSR set to: 0
  1198  003D44  0EC3               	movlw	low sprintf@f
  1199  003D46  6FAF               	movwf	vfprintf@fp& (0+255),b
  1200  003D48  0E00               	movlw	high sprintf@f
  1201  003D4A  6FB0               	movwf	(vfprintf@fp+1)& (0+255),b
  1202  003D4C  C0B9  F0B1         	movff	sprintf@fmt,vfprintf@fmt
  1203  003D50  C0BA  F0B2         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1204  003D54  0EC1               	movlw	low sprintf@ap
  1205  003D56  6FB3               	movwf	vfprintf@ap& (0+255),b
  1206  003D58  0E00               	movlw	high sprintf@ap
  1207  003D5A  6FB4               	movwf	(vfprintf@ap+1)& (0+255),b
  1208  003D5C  EC01  F01E         	call	_vfprintf	;wreg free
  1209  003D60  0100               	movlb	0	; () banked
  1210  003D62  51C5               	movf	(sprintf@f+2)& (0+255),w,b
  1211  003D64  25B7               	addwf	sprintf@s& (0+255),w,b
  1212  003D66  6ED9               	movwf	fsr2l,c
  1213  003D68  51C6               	movf	(sprintf@f+3)& (0+255),w,b
  1214  003D6A  21B8               	addwfc	(sprintf@s+1)& (0+255),w,b
  1215  003D6C  6EDA               	movwf	fsr2h,c
  1216  003D6E  0E00               	movlw	0
  1217  003D70  6EDF               	movwf	indf2,c
  1218  003D72                     
  1219                           ; BSR set to: 0
  1220  003D72  0012               	return		;funcret
  1221  003D74                     __end_of_sprintf:
  1222                           	opt callstack 0
  1223                           
  1224 ;; *************** function _vfprintf *****************
  1225 ;; Defined at:
  1226 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1227 ;; Parameters:    Size  Location     Type
  1228 ;;  fp              2   79[BANK0 ] PTR struct _IO_FILE
  1229 ;;		 -> sprintf@f(6), 
  1230 ;;  fmt             2   81[BANK0 ] PTR const unsigned char 
  1231 ;;		 -> STR_4(6), 
  1232 ;;  ap              2   83[BANK0 ] PTR PTR void 
  1233 ;;		 -> sprintf@ap(2), 
  1234 ;; Auto vars:     Size  Location     Type
  1235 ;;  cfmt            2   85[BANK0 ] PTR unsigned char 
  1236 ;;		 -> STR_4(6), 
  1237 ;; Return value:  Size  Location     Type
  1238 ;;                  2   79[BANK0 ] int 
  1239 ;; Registers used:
  1240 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1241 ;; Tracked objects:
  1242 ;;		On entry : 0/0
  1243 ;;		On exit  : 0/0
  1244 ;;		Unchanged: 0/0
  1245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1246 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1247 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1249 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1250 ;;Total ram usage:        8 bytes
  1251 ;; Hardware stack levels used:    1
  1252 ;; Hardware stack levels required when called:    6
  1253 ;; This function calls:
  1254 ;;		_vfpfcnvrt
  1255 ;; This function is called by:
  1256 ;;		_sprintf
  1257 ;; This function uses a non-reentrant model
  1258 ;;
  1259                           
  1260                           	psect	text2
  1261  003C02                     __ptext2:
  1262                           	opt callstack 0
  1263  003C02                     _vfprintf:
  1264                           	opt callstack 23
  1265  003C02                     
  1266                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1267  003C02  C0B1  F0B5         	movff	vfprintf@fmt,vfprintf@cfmt
  1268  003C06  C0B2  F0B6         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1269  003C0A                     
  1270                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1271  003C0A  0E00               	movlw	0
  1272  003C0C  0100               	movlb	0	; () banked
  1273  003C0E  6FD8               	movwf	(_nout+1)& (0+255),b
  1274  003C10  0E00               	movlw	0
  1275  003C12  6FD7               	movwf	_nout& (0+255),b
  1276                           
  1277                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1278  003C14  EF1F  F01E         	goto	l3924
  1279  003C18                     l3922:
  1280                           
  1281                           ; BSR set to: 0
  1282                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1283  003C18  C0AF  F09D         	movff	vfprintf@fp,vfpfcnvrt@fp
  1284  003C1C  C0B0  F09E         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1285  003C20  0EB5               	movlw	low vfprintf@cfmt
  1286  003C22  6F9F               	movwf	vfpfcnvrt@fmt& (0+255),b
  1287  003C24  0E00               	movlw	high vfprintf@cfmt
  1288  003C26  6FA0               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1289  003C28  C0B3  F0A1         	movff	vfprintf@ap,vfpfcnvrt@ap
  1290  003C2C  C0B4  F0A2         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1291  003C30  EC5C  F010         	call	_vfpfcnvrt	;wreg free
  1292  003C34  0100               	movlb	0	; () banked
  1293  003C36  519D               	movf	?_vfpfcnvrt& (0+255),w,b
  1294  003C38  27D7               	addwf	_nout& (0+255),f,b
  1295  003C3A  519E               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1296  003C3C  23D8               	addwfc	(_nout+1)& (0+255),f,b
  1297  003C3E                     l3924:
  1298                           
  1299                           ; BSR set to: 0
  1300                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1301  003C3E  C0B5  FFF6         	movff	vfprintf@cfmt,tblptrl
  1302  003C42  C0B6  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1303  003C46                     	if	0	;tblptru may be non-zero
  1304  003C46                     	endif
  1305  003C46                     	if	0	;tblptru may be non-zero
  1306  003C46                     	endif
  1307  003C46  0008               	tblrd		*
  1308  003C48  50F5               	movf	tablat,w,c
  1309  003C4A  0900               	iorlw	0
  1310  003C4C  A4D8               	btfss	status,2,c
  1311  003C4E  EF2B  F01E         	goto	u4741
  1312  003C52  EF2D  F01E         	goto	u4740
  1313  003C56                     u4741:
  1314  003C56  EF0C  F01E         	goto	l3922
  1315  003C5A                     u4740:
  1316  003C5A                     
  1317                           ; BSR set to: 0
  1318                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1319  003C5A  C0D7  F0AF         	movff	_nout,?_vfprintf
  1320  003C5E  C0D8  F0B0         	movff	_nout+1,?_vfprintf+1
  1321  003C62                     
  1322                           ; BSR set to: 0
  1323  003C62  0012               	return		;funcret
  1324  003C64                     __end_of_vfprintf:
  1325                           	opt callstack 0
  1326                           
  1327 ;; *************** function _vfpfcnvrt *****************
  1328 ;; Defined at:
  1329 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1330 ;; Parameters:    Size  Location     Type
  1331 ;;  fp              2   61[BANK0 ] PTR struct _IO_FILE
  1332 ;;		 -> sprintf@f(6), 
  1333 ;;  fmt             2   63[BANK0 ] PTR PTR unsigned char 
  1334 ;;		 -> vfprintf@cfmt(2), 
  1335 ;;  ap              2   65[BANK0 ] PTR PTR void 
  1336 ;;		 -> sprintf@ap(2), 
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;  llu             8    0        unsigned long long 
  1339 ;;  ll              8    0        long long 
  1340 ;;  f               4   71[BANK0 ] long long 
  1341 ;;  ct              3   75[BANK0 ] unsigned char [3]
  1342 ;;  vp              3    0        PTR void 
  1343 ;;  cp              3    0        PTR unsigned char 
  1344 ;;  i               2    0        int 
  1345 ;;  done            2    0        int 
  1346 ;;  c               1   78[BANK0 ] unsigned char 
  1347 ;; Return value:  Size  Location     Type
  1348 ;;                  2   61[BANK0 ] int 
  1349 ;; Registers used:
  1350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1356 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1357 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1358 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1359 ;;      Totals:         4      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1360 ;;Total ram usage:       22 bytes
  1361 ;; Hardware stack levels used:    1
  1362 ;; Hardware stack levels required when called:    5
  1363 ;; This function calls:
  1364 ;;		_atoi
  1365 ;;		_efgtoa
  1366 ;;		_fputc
  1367 ;;		_isdigit
  1368 ;;		_isupper
  1369 ;;		_strncmp
  1370 ;;		_tolower
  1371 ;; This function is called by:
  1372 ;;		_vfprintf
  1373 ;; This function uses a non-reentrant model
  1374 ;;
  1375                           
  1376                           	psect	text3
  1377  0020B8                     __ptext3:
  1378                           	opt callstack 0
  1379  0020B8                     _vfpfcnvrt:
  1380                           	opt callstack 23
  1381  0020B8                     
  1382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1383  0020B8  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1384  0020BC  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1385  0020C0  CFDE FFF6          	movff	postinc2,tblptrl
  1386  0020C4  CFDD FFF7          	movff	postdec2,tblptrh
  1387  0020C8                     	if	0	;tblptru may be non-zero
  1388  0020C8                     	endif
  1389  0020C8                     	if	0	;tblptru may be non-zero
  1390  0020C8                     	endif
  1391  0020C8  0008               	tblrd		*
  1392  0020CA  50F5               	movf	tablat,w,c
  1393  0020CC  0A25               	xorlw	37
  1394  0020CE  A4D8               	btfss	status,2,c
  1395  0020D0  EF6C  F010         	goto	u4601
  1396  0020D4  EF6E  F010         	goto	u4600
  1397  0020D8                     u4601:
  1398  0020D8  EF77  F012         	goto	l3876
  1399  0020DC                     u4600:
  1400  0020DC                     
  1401                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1402  0020DC  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1403  0020E0  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1404  0020E4  2ADE               	incf	postinc2,f,c
  1405  0020E6  0E00               	movlw	0
  1406  0020E8  22DD               	addwfc	postdec2,f,c
  1407  0020EA                     
  1408                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1409  0020EA  0E00               	movlw	0
  1410  0020EC  0100               	movlb	0	; () banked
  1411  0020EE  6FDA               	movwf	(_width+1)& (0+255),b
  1412  0020F0  0E00               	movlw	0
  1413  0020F2  6FD9               	movwf	_width& (0+255),b
  1414  0020F4  C0D9  F0DD         	movff	_width,_flags
  1415  0020F8  C0DA  F0DE         	movff	_width+1,_flags+1
  1416  0020FC                     
  1417                           ; BSR set to: 0
  1418                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1419  0020FC  69DB               	setf	_prec& (0+255),b
  1420  0020FE  69DC               	setf	(_prec+1)& (0+255),b
  1421  002100                     
  1422                           ; BSR set to: 0
  1423                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  1424  002100  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1425  002104  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1426  002108  CFDE FFF6          	movff	postinc2,tblptrl
  1427  00210C  CFDD FFF7          	movff	postdec2,tblptrh
  1428  002110                     	if	0	;tblptru may be non-zero
  1429  002110                     	endif
  1430  002110                     	if	0	;tblptru may be non-zero
  1431  002110                     	endif
  1432  002110  0008               	tblrd		*
  1433  002112  50F5               	movf	tablat,w,c
  1434  002114  0A2E               	xorlw	46
  1435  002116  A4D8               	btfss	status,2,c
  1436  002118  EF90  F010         	goto	u4611
  1437  00211C  EF92  F010         	goto	u4610
  1438  002120                     u4611:
  1439  002120  EF10  F011         	goto	l3822
  1440  002124                     u4610:
  1441  002124                     
  1442                           ; BSR set to: 0
  1443                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  1444  002124  0E00               	movlw	0
  1445  002126  6FDC               	movwf	(_prec+1)& (0+255),b
  1446  002128  0E00               	movlw	0
  1447  00212A  6FDB               	movwf	_prec& (0+255),b
  1448  00212C                     
  1449                           ; BSR set to: 0
  1450                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  1451  00212C  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1452  002130  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1453  002134  2ADE               	incf	postinc2,f,c
  1454  002136  0E00               	movlw	0
  1455  002138  22DD               	addwfc	postdec2,f,c
  1456  00213A                     
  1457                           ; BSR set to: 0
  1458                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  1459  00213A  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1460  00213E  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1461  002142  CFDE FFF6          	movff	postinc2,tblptrl
  1462  002146  CFDD FFF7          	movff	postdec2,tblptrh
  1463  00214A                     	if	0	;tblptru may be non-zero
  1464  00214A                     	endif
  1465  00214A                     	if	0	;tblptru may be non-zero
  1466  00214A                     	endif
  1467  00214A  0008               	tblrd		*
  1468  00214C  50F5               	movf	tablat,w,c
  1469  00214E  0A2A               	xorlw	42
  1470  002150  A4D8               	btfss	status,2,c
  1471  002152  EFAD  F010         	goto	u4621
  1472  002156  EFAF  F010         	goto	u4620
  1473  00215A                     u4621:
  1474  00215A  EFCC  F010         	goto	l3812
  1475  00215E                     u4620:
  1476  00215E                     
  1477                           ; BSR set to: 0
  1478                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  1479  00215E  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1480  002162  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1481  002166  2ADE               	incf	postinc2,f,c
  1482  002168  0E00               	movlw	0
  1483  00216A  22DD               	addwfc	postdec2,f,c
  1484                           
  1485                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1486  00216C  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1487  002170  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1488  002174  CFDF F05C          	movff	indf2,??_vfpfcnvrt
  1489  002178  0E02               	movlw	2
  1490  00217A  26DE               	addwf	postinc2,f,c
  1491  00217C  CFDF F05D          	movff	indf2,??_vfpfcnvrt+1
  1492  002180  0E00               	movlw	0
  1493  002182  22DD               	addwfc	postdec2,f,c
  1494  002184  C05C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1495  002188  C05D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1496  00218C  CFDE F0DB          	movff	postinc2,_prec
  1497  002190  CFDD F0DC          	movff	postdec2,_prec+1
  1498                           
  1499                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  1500  002194  EF10  F011         	goto	l3822
  1501  002198                     l3812:
  1502                           
  1503                           ; BSR set to: 0
  1504                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  1505  002198  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1506  00219C  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1507  0021A0  CFDE F008          	movff	postinc2,atoi@s
  1508  0021A4  CFDD F009          	movff	postdec2,atoi@s+1
  1509  0021A8  EC58  F018         	call	_atoi	;wreg free
  1510  0021AC  C008  F0DB         	movff	?_atoi,_prec
  1511  0021B0  C009  F0DC         	movff	?_atoi+1,_prec+1
  1512                           
  1513                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1514  0021B4  EFE3  F010         	goto	l3816
  1515  0021B8                     l3814:
  1516                           
  1517                           ; BSR set to: 0
  1518                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  1519  0021B8  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1520  0021BC  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1521  0021C0  2ADE               	incf	postinc2,f,c
  1522  0021C2  0E00               	movlw	0
  1523  0021C4  22DD               	addwfc	postdec2,f,c
  1524  0021C6                     l3816:
  1525  0021C6  0ED0               	movlw	208
  1526  0021C8  6E5C               	movwf	??_vfpfcnvrt^0,c
  1527  0021CA  0EFF               	movlw	255
  1528  0021CC  6E5D               	movwf	(??_vfpfcnvrt+1)^0,c
  1529  0021CE  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1530  0021D2  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1531  0021D6  CFDE FFF6          	movff	postinc2,tblptrl
  1532  0021DA  CFDD FFF7          	movff	postdec2,tblptrh
  1533  0021DE                     	if	0	;tblptru may be non-zero
  1534  0021DE                     	endif
  1535  0021DE                     	if	0	;tblptru may be non-zero
  1536  0021DE                     	endif
  1537  0021DE  0008               	tblrd		*
  1538  0021E0  50F5               	movf	tablat,w,c
  1539  0021E2  6E5E               	movwf	(??_vfpfcnvrt+2)^0,c
  1540  0021E4  6A5F               	clrf	(??_vfpfcnvrt+3)^0,c
  1541  0021E6  505C               	movf	??_vfpfcnvrt^0,w,c
  1542  0021E8  265E               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1543  0021EA  505D               	movf	(??_vfpfcnvrt+1)^0,w,c
  1544  0021EC  225F               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1545  0021EE  505F               	movf	(??_vfpfcnvrt+3)^0,w,c
  1546  0021F0  E10A               	bnz	u4630
  1547  0021F2  0E0A               	movlw	10
  1548  0021F4  5C5E               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1549  0021F6  A0D8               	btfss	status,0,c
  1550  0021F8  EF00  F011         	goto	u4631
  1551  0021FC  EF03  F011         	goto	u4630
  1552  002200                     u4631:
  1553  002200  0E01               	movlw	1
  1554  002202  EF04  F011         	goto	u4640
  1555  002206                     u4630:
  1556  002206  0E00               	movlw	0
  1557  002208                     u4640:
  1558  002208  0100               	movlb	0	; () banked
  1559  00220A  6FA3               	movwf	_vfpfcnvrt$579& (0+255),b
  1560  00220C  6BA4               	clrf	(_vfpfcnvrt$579+1)& (0+255),b
  1561  00220E                     
  1562                           ; BSR set to: 0
  1563  00220E  51A3               	movf	_vfpfcnvrt$579& (0+255),w,b
  1564  002210  11A4               	iorwf	(_vfpfcnvrt$579+1)& (0+255),w,b
  1565  002212  A4D8               	btfss	status,2,c
  1566  002214  EF0E  F011         	goto	u4651
  1567  002218  EF10  F011         	goto	u4650
  1568  00221C                     u4651:
  1569  00221C  EFDC  F010         	goto	l3814
  1570  002220                     u4650:
  1571  002220                     l3822:
  1572                           
  1573                           ; BSR set to: 0
  1574                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  1575  002220  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1576  002224  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1577  002228  CFDE FFF6          	movff	postinc2,tblptrl
  1578  00222C  CFDD FFF7          	movff	postdec2,tblptrh
  1579  002230                     	if	0	;tblptru may be non-zero
  1580  002230                     	endif
  1581  002230                     	if	0	;tblptru may be non-zero
  1582  002230                     	endif
  1583  002230  0008               	tblrd		*
  1584  002232  50F5               	movf	tablat,w,c
  1585  002234  6E07               	movwf	tolower@c^0,c
  1586  002236  6A08               	clrf	(tolower@c+1)^0,c
  1587  002238  EC32  F01E         	call	_tolower	;wreg free
  1588  00223C  5007               	movf	?_tolower^0,w,c
  1589  00223E  0100               	movlb	0	; () banked
  1590  002240  6FAB               	movwf	vfpfcnvrt@ct& (0+255),b
  1591  002242                     
  1592                           ; BSR set to: 0
  1593                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  1594  002242  51AB               	movf	vfpfcnvrt@ct& (0+255),w,b
  1595  002244  B4D8               	btfsc	status,2,c
  1596  002246  EF27  F011         	goto	u4661
  1597  00224A  EF29  F011         	goto	u4660
  1598  00224E                     u4661:
  1599  00224E  EF63  F011         	goto	l3832
  1600  002252                     u4660:
  1601  002252                     
  1602                           ; BSR set to: 0
  1603                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  1604  002252  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1605  002256  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1606  00225A  CFDE F05C          	movff	postinc2,??_vfpfcnvrt
  1607  00225E  CFDD F05D          	movff	postdec2,??_vfpfcnvrt+1
  1608  002262  0E01               	movlw	1
  1609  002264  265C               	addwf	??_vfpfcnvrt^0,f,c
  1610  002266  0E00               	movlw	0
  1611  002268  225D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1612  00226A  C05C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1613  00226E  C05D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1614  002272                     	if	0	;tblptru may be non-zero
  1615  002272                     	endif
  1616  002272                     	if	0	;tblptru may be non-zero
  1617  002272                     	endif
  1618  002272  0008               	tblrd		*
  1619  002274  50F5               	movf	tablat,w,c
  1620  002276  6E07               	movwf	tolower@c^0,c
  1621  002278  6A08               	clrf	(tolower@c+1)^0,c
  1622  00227A  EC32  F01E         	call	_tolower	;wreg free
  1623  00227E  5007               	movf	?_tolower^0,w,c
  1624  002280  0100               	movlb	0	; () banked
  1625  002282  6FAC               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  1626  002284                     
  1627                           ; BSR set to: 0
  1628                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  1629  002284  51AC               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  1630  002286  B4D8               	btfsc	status,2,c
  1631  002288  EF48  F011         	goto	u4671
  1632  00228C  EF4A  F011         	goto	u4670
  1633  002290                     u4671:
  1634  002290  EF63  F011         	goto	l3832
  1635  002294                     u4670:
  1636  002294                     
  1637                           ; BSR set to: 0
  1638                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  1639  002294  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1640  002298  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1641  00229C  CFDE F05C          	movff	postinc2,??_vfpfcnvrt
  1642  0022A0  CFDD F05D          	movff	postdec2,??_vfpfcnvrt+1
  1643  0022A4  0E02               	movlw	2
  1644  0022A6  265C               	addwf	??_vfpfcnvrt^0,f,c
  1645  0022A8  0E00               	movlw	0
  1646  0022AA  225D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1647  0022AC  C05C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1648  0022B0  C05D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1649  0022B4                     	if	0	;tblptru may be non-zero
  1650  0022B4                     	endif
  1651  0022B4                     	if	0	;tblptru may be non-zero
  1652  0022B4                     	endif
  1653  0022B4  0008               	tblrd		*
  1654  0022B6  50F5               	movf	tablat,w,c
  1655  0022B8  6E07               	movwf	tolower@c^0,c
  1656  0022BA  6A08               	clrf	(tolower@c+1)^0,c
  1657  0022BC  EC32  F01E         	call	_tolower	;wreg free
  1658  0022C0  5007               	movf	?_tolower^0,w,c
  1659  0022C2  0100               	movlb	0	; () banked
  1660  0022C4  6FAD               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  1661  0022C6                     l3832:
  1662                           
  1663                           ; BSR set to: 0
  1664                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 944:       
      +                            if (ct[0] == 'g') {
  1665  0022C6  0E67               	movlw	103
  1666  0022C8  19AB               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  1667  0022CA  A4D8               	btfss	status,2,c
  1668  0022CC  EF6A  F011         	goto	u4681
  1669  0022D0  EF6C  F011         	goto	u4680
  1670  0022D4                     u4681:
  1671  0022D4  EFAC  F011         	goto	l3844
  1672  0022D8                     u4680:
  1673  0022D8                     
  1674                           ; BSR set to: 0
  1675                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 946:       
      +                                c = (*fmt)[0];
  1676  0022D8  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1677  0022DC  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1678  0022E0  CFDE FFF6          	movff	postinc2,tblptrl
  1679  0022E4  CFDD FFF7          	movff	postdec2,tblptrh
  1680  0022E8                     	if	0	;tblptru may be non-zero
  1681  0022E8                     	endif
  1682  0022E8                     	if	0	;tblptru may be non-zero
  1683  0022E8                     	endif
  1684  0022E8  0008               	tblrd		*
  1685  0022EA  CFF5 F0AE          	movff	tablat,vfpfcnvrt@c
  1686  0022EE                     
  1687                           ; BSR set to: 0
  1688                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 947:       
      +                                ++*fmt;
  1689  0022EE  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1690  0022F2  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1691  0022F6  2ADE               	incf	postinc2,f,c
  1692  0022F8  0E00               	movlw	0
  1693  0022FA  22DD               	addwfc	postdec2,f,c
  1694  0022FC                     
  1695                           ; BSR set to: 0
  1696                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 948:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1697  0022FC  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1698  002300  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1699  002304  CFDF F05C          	movff	indf2,??_vfpfcnvrt
  1700  002308  0E04               	movlw	4
  1701  00230A  26DE               	addwf	postinc2,f,c
  1702  00230C  CFDF F05D          	movff	indf2,??_vfpfcnvrt+1
  1703  002310  0E00               	movlw	0
  1704  002312  22DD               	addwfc	postdec2,f,c
  1705  002314  C05C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1706  002318  C05D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1707  00231C  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f
  1708  002320  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f+1
  1709  002324  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+2
  1710  002328  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f+3
  1711  00232C                     l3840:
  1712                           
  1713                           ; BSR set to: 0
  1714                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 950:       
      +                                return efgtoa(fp, f, c);
  1715  00232C  C09D  F055         	movff	vfpfcnvrt@fp,efgtoa@fp
  1716  002330  C09E  F056         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1717  002334  C0A7  F057         	movff	vfpfcnvrt@f,efgtoa@f
  1718  002338  C0A8  F058         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1719  00233C  C0A9  F059         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1720  002340  C0AA  F05A         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1721  002344  C0AE  F05B         	movff	vfpfcnvrt@c,efgtoa@c
  1722  002348  EC24  F008         	call	_efgtoa	;wreg free
  1723  00234C  C055  F09D         	movff	?_efgtoa,?_vfpfcnvrt
  1724  002350  C056  F09E         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1725  002354  EF92  F012         	goto	l329
  1726  002358                     l3844:
  1727                           
  1728                           ; BSR set to: 0
  1729                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 952:       
      +                            if (!strncmp(ct, "lg", ((sizeof("lg")/sizeof("lg"[0]))-1))) {
  1730  002358  0EAB               	movlw	low vfpfcnvrt@ct
  1731  00235A  6E01               	movwf	strncmp@_l^0,c
  1732  00235C  0E00               	movlw	high vfpfcnvrt@ct
  1733  00235E  6E02               	movwf	(strncmp@_l+1)^0,c
  1734  002360  0E40               	movlw	low STR_14
  1735  002362  6E03               	movwf	strncmp@_r^0,c
  1736  002364  0E10               	movlw	high STR_14
  1737  002366  6E04               	movwf	(strncmp@_r+1)^0,c
  1738  002368  0E00               	movlw	0
  1739  00236A  6E06               	movwf	(strncmp@n+1)^0,c
  1740  00236C  0E02               	movlw	2
  1741  00236E  6E05               	movwf	strncmp@n^0,c
  1742  002370  EC49  F01B         	call	_strncmp	;wreg free
  1743  002374  5001               	movf	?_strncmp^0,w,c
  1744  002376  1002               	iorwf	(?_strncmp+1)^0,w,c
  1745  002378  A4D8               	btfss	status,2,c
  1746  00237A  EFC1  F011         	goto	u4691
  1747  00237E  EFC3  F011         	goto	u4690
  1748  002382                     u4691:
  1749  002382  EF3F  F012         	goto	l3860
  1750  002386                     u4690:
  1751  002386                     
  1752                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 955:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  1753  002386  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1754  00238A  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1755  00238E  CFDE F05C          	movff	postinc2,??_vfpfcnvrt
  1756  002392  CFDD F05D          	movff	postdec2,??_vfpfcnvrt+1
  1757  002396  0E01               	movlw	1
  1758  002398  265C               	addwf	??_vfpfcnvrt^0,f,c
  1759  00239A  0E00               	movlw	0
  1760  00239C  225D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1761  00239E  C05C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1762  0023A2  C05D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1763  0023A6                     	if	0	;tblptru may be non-zero
  1764  0023A6                     	endif
  1765  0023A6                     	if	0	;tblptru may be non-zero
  1766  0023A6                     	endif
  1767  0023A6  0008               	tblrd		*
  1768  0023A8  CFF5 F0AE          	movff	tablat,vfpfcnvrt@c
  1769  0023AC  0EBF               	movlw	191
  1770  0023AE  6E5C               	movwf	??_vfpfcnvrt^0,c
  1771  0023B0  0EFF               	movlw	255
  1772  0023B2  6E5D               	movwf	(??_vfpfcnvrt+1)^0,c
  1773  0023B4  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1774  0023B8  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1775  0023BC  CFDE FFF6          	movff	postinc2,tblptrl
  1776  0023C0  CFDD FFF7          	movff	postdec2,tblptrh
  1777  0023C4                     	if	0	;tblptru may be non-zero
  1778  0023C4                     	endif
  1779  0023C4                     	if	0	;tblptru may be non-zero
  1780  0023C4                     	endif
  1781  0023C4  0008               	tblrd		*
  1782  0023C6  50F5               	movf	tablat,w,c
  1783  0023C8  6E5E               	movwf	(??_vfpfcnvrt+2)^0,c
  1784  0023CA  6A5F               	clrf	(??_vfpfcnvrt+3)^0,c
  1785  0023CC  505C               	movf	??_vfpfcnvrt^0,w,c
  1786  0023CE  265E               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1787  0023D0  505D               	movf	(??_vfpfcnvrt+1)^0,w,c
  1788  0023D2  225F               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1789  0023D4  505F               	movf	(??_vfpfcnvrt+3)^0,w,c
  1790  0023D6  E10A               	bnz	u4700
  1791  0023D8  0E1A               	movlw	26
  1792  0023DA  5C5E               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1793  0023DC  A0D8               	btfss	status,0,c
  1794  0023DE  EFF3  F011         	goto	u4701
  1795  0023E2  EFF6  F011         	goto	u4700
  1796  0023E6                     u4701:
  1797  0023E6  0E01               	movlw	1
  1798  0023E8  EFF7  F011         	goto	u4710
  1799  0023EC                     u4700:
  1800  0023EC  0E00               	movlw	0
  1801  0023EE                     u4710:
  1802  0023EE  0100               	movlb	0	; () banked
  1803  0023F0  6FA5               	movwf	_vfpfcnvrt$583& (0+255),b
  1804  0023F2  6BA6               	clrf	(_vfpfcnvrt$583+1)& (0+255),b
  1805  0023F4                     
  1806                           ; BSR set to: 0
  1807  0023F4  51A5               	movf	_vfpfcnvrt$583& (0+255),w,b
  1808  0023F6  11A6               	iorwf	(_vfpfcnvrt$583+1)& (0+255),w,b
  1809  0023F8  B4D8               	btfsc	status,2,c
  1810  0023FA  EF01  F012         	goto	u4721
  1811  0023FE  EF03  F012         	goto	u4720
  1812  002402                     u4721:
  1813  002402  EF1D  F012         	goto	l3854
  1814  002406                     u4720:
  1815  002406                     
  1816                           ; BSR set to: 0
  1817                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 956:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1818  002406  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1819  00240A  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1820  00240E  CFDF F05C          	movff	indf2,??_vfpfcnvrt
  1821  002412  0E04               	movlw	4
  1822  002414  26DE               	addwf	postinc2,f,c
  1823  002416  CFDF F05D          	movff	indf2,??_vfpfcnvrt+1
  1824  00241A  0E00               	movlw	0
  1825  00241C  22DD               	addwfc	postdec2,f,c
  1826  00241E  C05C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1827  002422  C05D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1828  002426  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f
  1829  00242A  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f+1
  1830  00242E  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+2
  1831  002432  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f+3
  1832                           
  1833                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 957:       
      +                                } else {
  1834  002436  EF35  F012         	goto	l336
  1835  00243A                     l3854:
  1836                           
  1837                           ; BSR set to: 0
  1838                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 958:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1839  00243A  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1840  00243E  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1841  002442  CFDF F05C          	movff	indf2,??_vfpfcnvrt
  1842  002446  0E04               	movlw	4
  1843  002448  26DE               	addwf	postinc2,f,c
  1844  00244A  CFDF F05D          	movff	indf2,??_vfpfcnvrt+1
  1845  00244E  0E00               	movlw	0
  1846  002450  22DD               	addwfc	postdec2,f,c
  1847  002452  C05C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1848  002456  C05D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1849  00245A  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f
  1850  00245E  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f+1
  1851  002462  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+2
  1852  002466  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f+3
  1853  00246A                     l336:
  1854                           
  1855                           ; BSR set to: 0
  1856                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 960:       
      +                                *fmt += ((sizeof("lg")/sizeof("lg"[0]))-1);
  1857  00246A  0E02               	movlw	2
  1858  00246C  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1859  002470  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1860  002474  26DE               	addwf	postinc2,f,c
  1861  002476  0E00               	movlw	0
  1862  002478  22DD               	addwfc	postdec2,f,c
  1863  00247A  EF96  F011         	goto	l3840
  1864  00247E                     l3860:
  1865                           
  1866                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1867  00247E  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1868  002482  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1869  002486  CFDE FFF6          	movff	postinc2,tblptrl
  1870  00248A  CFDD FFF7          	movff	postdec2,tblptrh
  1871  00248E                     	if	0	;tblptru may be non-zero
  1872  00248E                     	endif
  1873  00248E                     	if	0	;tblptru may be non-zero
  1874  00248E                     	endif
  1875  00248E  0008               	tblrd		*
  1876  002490  50F5               	movf	tablat,w,c
  1877  002492  0A25               	xorlw	37
  1878  002494  A4D8               	btfss	status,2,c
  1879  002496  EF4F  F012         	goto	u4731
  1880  00249A  EF51  F012         	goto	u4730
  1881  00249E                     u4731:
  1882  00249E  EF69  F012         	goto	l3870
  1883  0024A2                     u4730:
  1884  0024A2                     
  1885                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1886  0024A2  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1887  0024A6  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1888  0024AA  2ADE               	incf	postinc2,f,c
  1889  0024AC  0E00               	movlw	0
  1890  0024AE  22DD               	addwfc	postdec2,f,c
  1891  0024B0                     
  1892                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1893  0024B0  0E00               	movlw	0
  1894  0024B2  6E02               	movwf	(fputc@c+1)^0,c
  1895  0024B4  0E25               	movlw	37
  1896  0024B6  6E01               	movwf	fputc@c^0,c
  1897  0024B8  C09D  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1898  0024BC  C09E  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1899  0024C0  ECB4  F01B         	call	_fputc	;wreg free
  1900  0024C4                     l3866:
  1901                           
  1902                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1903  0024C4  0E00               	movlw	0
  1904  0024C6  0100               	movlb	0	; () banked
  1905  0024C8  6F9E               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1906  0024CA  0E01               	movlw	1
  1907  0024CC  6F9D               	movwf	?_vfpfcnvrt& (0+255),b
  1908  0024CE  EF92  F012         	goto	l329
  1909  0024D2                     l3870:
  1910                           
  1911                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1912  0024D2  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1913  0024D6  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1914  0024DA  2ADE               	incf	postinc2,f,c
  1915  0024DC  0E00               	movlw	0
  1916  0024DE  22DD               	addwfc	postdec2,f,c
  1917  0024E0                     
  1918                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1919  0024E0  0E00               	movlw	0
  1920  0024E2  0100               	movlb	0	; () banked
  1921  0024E4  6F9E               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1922  0024E6  0E00               	movlw	0
  1923  0024E8  6F9D               	movwf	?_vfpfcnvrt& (0+255),b
  1924  0024EA  EF92  F012         	goto	l329
  1925  0024EE                     l3876:
  1926                           
  1927                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1928  0024EE  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1929  0024F2  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1930  0024F6  CFDE FFF6          	movff	postinc2,tblptrl
  1931  0024FA  CFDD FFF7          	movff	postdec2,tblptrh
  1932  0024FE                     	if	0	;tblptru may be non-zero
  1933  0024FE                     	endif
  1934  0024FE                     	if	0	;tblptru may be non-zero
  1935  0024FE                     	endif
  1936  0024FE  0008               	tblrd		*
  1937  002500  50F5               	movf	tablat,w,c
  1938  002502  6E01               	movwf	fputc@c^0,c
  1939  002504  6A02               	clrf	(fputc@c+1)^0,c
  1940  002506  C09D  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1941  00250A  C09E  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1942  00250E  ECB4  F01B         	call	_fputc	;wreg free
  1943  002512                     
  1944                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1945  002512  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1946  002516  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1947  00251A  2ADE               	incf	postinc2,f,c
  1948  00251C  0E00               	movlw	0
  1949  00251E  22DD               	addwfc	postdec2,f,c
  1950  002520  EF62  F012         	goto	l3866
  1951  002524                     l329:
  1952  002524  0012               	return		;funcret
  1953  002526                     __end_of_vfpfcnvrt:
  1954                           	opt callstack 0
  1955                           
  1956 ;; *************** function _strncmp *****************
  1957 ;; Defined at:
  1958 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  1961 ;;		 -> vfpfcnvrt@ct(3), 
  1962 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  1963 ;;		 -> STR_16(3), 
  1964 ;;  n               2    4[COMRAM] unsigned int 
  1965 ;; Auto vars:     Size  Location     Type
  1966 ;;  r               2    9[COMRAM] PTR const unsigned char 
  1967 ;;		 -> STR_16(3), 
  1968 ;;  l               2    7[COMRAM] PTR const unsigned char 
  1969 ;;		 -> vfpfcnvrt@ct(3), 
  1970 ;; Return value:  Size  Location     Type
  1971 ;;                  2    0[COMRAM] int 
  1972 ;; Registers used:
  1973 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1974 ;; Tracked objects:
  1975 ;;		On entry : 0/0
  1976 ;;		On exit  : 0/0
  1977 ;;		Unchanged: 0/0
  1978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1979 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1980 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1981 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1982 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1983 ;;Total ram usage:       11 bytes
  1984 ;; Hardware stack levels used:    1
  1985 ;; This function calls:
  1986 ;;		Nothing
  1987 ;; This function is called by:
  1988 ;;		_vfpfcnvrt
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992                           	psect	text4
  1993  003692                     __ptext4:
  1994                           	opt callstack 0
  1995  003692                     _strncmp:
  1996                           	opt callstack 27
  1997  003692  C001  F008         	movff	strncmp@_l,strncmp@l
  1998  003696  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  1999  00369A  C003  F00A         	movff	strncmp@_r,strncmp@r
  2000  00369E  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  2001  0036A2  0605               	decf	strncmp@n^0,f,c
  2002  0036A4  A0D8               	btfss	status,0,c
  2003  0036A6  0606               	decf	(strncmp@n+1)^0,f,c
  2004  0036A8  2805               	incf	strncmp@n^0,w,c
  2005  0036AA  E106               	bnz	u4541
  2006  0036AC  2806               	incf	(strncmp@n+1)^0,w,c
  2007  0036AE  A4D8               	btfss	status,2,c
  2008  0036B0  EF5C  F01B         	goto	u4541
  2009  0036B4  EF5E  F01B         	goto	u4540
  2010  0036B8                     u4541:
  2011  0036B8  EF6B  F01B         	goto	l3772
  2012  0036BC                     u4540:
  2013  0036BC  0E00               	movlw	0
  2014  0036BE  6E02               	movwf	(?_strncmp+1)^0,c
  2015  0036C0  0E00               	movlw	0
  2016  0036C2  6E01               	movwf	?_strncmp^0,c
  2017  0036C4  EFB3  F01B         	goto	l1138
  2018  0036C8                     l3770:
  2019  0036C8  4A08               	infsnz	strncmp@l^0,f,c
  2020  0036CA  2A09               	incf	(strncmp@l+1)^0,f,c
  2021  0036CC  4A0A               	infsnz	strncmp@r^0,f,c
  2022  0036CE  2A0B               	incf	(strncmp@r+1)^0,f,c
  2023  0036D0  0605               	decf	strncmp@n^0,f,c
  2024  0036D2  A0D8               	btfss	status,0,c
  2025  0036D4  0606               	decf	(strncmp@n+1)^0,f,c
  2026  0036D6                     l3772:
  2027  0036D6  C008  FFD9         	movff	strncmp@l,fsr2l
  2028  0036DA  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2029  0036DE  50DF               	movf	indf2,w,c
  2030  0036E0  B4D8               	btfsc	status,2,c
  2031  0036E2  EF75  F01B         	goto	u4551
  2032  0036E6  EF77  F01B         	goto	u4550
  2033  0036EA                     u4551:
  2034  0036EA  EFA2  F01B         	goto	l3780
  2035  0036EE                     u4550:
  2036  0036EE  C00A  FFF6         	movff	strncmp@r,tblptrl
  2037  0036F2  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2038  0036F6                     	if	0	;tblptru may be non-zero
  2039  0036F6                     	endif
  2040  0036F6                     	if	0	;tblptru may be non-zero
  2041  0036F6                     	endif
  2042  0036F6  0008               	tblrd		*
  2043  0036F8  50F5               	movf	tablat,w,c
  2044  0036FA  0900               	iorlw	0
  2045  0036FC  B4D8               	btfsc	status,2,c
  2046  0036FE  EF83  F01B         	goto	u4561
  2047  003702  EF85  F01B         	goto	u4560
  2048  003706                     u4561:
  2049  003706  EFA2  F01B         	goto	l3780
  2050  00370A                     u4560:
  2051  00370A  5005               	movf	strncmp@n^0,w,c
  2052  00370C  1006               	iorwf	(strncmp@n+1)^0,w,c
  2053  00370E  B4D8               	btfsc	status,2,c
  2054  003710  EF8C  F01B         	goto	u4571
  2055  003714  EF8E  F01B         	goto	u4570
  2056  003718                     u4571:
  2057  003718  EFA2  F01B         	goto	l3780
  2058  00371C                     u4570:
  2059  00371C  C008  FFD9         	movff	strncmp@l,fsr2l
  2060  003720  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2061  003724  50DF               	movf	indf2,w,c
  2062  003726  6E07               	movwf	??_strncmp^0,c
  2063  003728  C00A  FFF6         	movff	strncmp@r,tblptrl
  2064  00372C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2065  003730                     	if	0	;tblptru may be non-zero
  2066  003730                     	endif
  2067  003730                     	if	0	;tblptru may be non-zero
  2068  003730                     	endif
  2069  003730  0008               	tblrd		*
  2070  003732  50F5               	movf	tablat,w,c
  2071  003734  1807               	xorwf	??_strncmp^0,w,c
  2072  003736  B4D8               	btfsc	status,2,c
  2073  003738  EFA0  F01B         	goto	u4581
  2074  00373C  EFA2  F01B         	goto	u4580
  2075  003740                     u4581:
  2076  003740  EF64  F01B         	goto	l3770
  2077  003744                     u4580:
  2078  003744                     l3780:
  2079  003744  C008  FFD9         	movff	strncmp@l,fsr2l
  2080  003748  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2081  00374C  50DF               	movf	indf2,w,c
  2082  00374E  6E07               	movwf	??_strncmp^0,c
  2083  003750  C00A  FFF6         	movff	strncmp@r,tblptrl
  2084  003754  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2085  003758                     	if	0	;tblptru may be non-zero
  2086  003758                     	endif
  2087  003758                     	if	0	;tblptru may be non-zero
  2088  003758                     	endif
  2089  003758  0008               	tblrd		*
  2090  00375A  50F5               	movf	tablat,w,c
  2091  00375C  5C07               	subwf	??_strncmp^0,w,c
  2092  00375E  6E01               	movwf	?_strncmp^0,c
  2093  003760  6A02               	clrf	(?_strncmp+1)^0,c
  2094  003762  A0D8               	btfss	status,0,c
  2095  003764  0602               	decf	(?_strncmp+1)^0,f,c
  2096  003766                     l1138:
  2097  003766  0012               	return		;funcret
  2098  003768                     __end_of_strncmp:
  2099                           	opt callstack 0
  2100                           
  2101 ;; *************** function _efgtoa *****************
  2102 ;; Defined at:
  2103 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;  fp              2   84[COMRAM] PTR struct _IO_FILE
  2106 ;;		 -> sprintf@f(6), 
  2107 ;;  f               4   86[COMRAM] PTR struct _IO_FILE
  2108 ;;  c               1   90[COMRAM] unsigned char 
  2109 ;; Auto vars:     Size  Location     Type
  2110 ;;  u               4   57[BANK0 ] unsigned char 
  2111 ;;  g               4   49[BANK0 ] unsigned char 
  2112 ;;  l               4   43[BANK0 ] unsigned char 
  2113 ;;  h               4   39[BANK0 ] unsigned char 
  2114 ;;  ou              4    5[BANK0 ] unsigned char 
  2115 ;;  n               2   55[BANK0 ] int 
  2116 ;;  e               2   53[BANK0 ] int 
  2117 ;;  i               2   47[BANK0 ] int 
  2118 ;;  w               2   36[BANK0 ] int 
  2119 ;;  p               2   33[BANK0 ] int 
  2120 ;;  sign            2   31[BANK0 ] int 
  2121 ;;  d               2   29[BANK0 ] int 
  2122 ;;  ne              2   27[BANK0 ] int 
  2123 ;;  m               2   25[BANK0 ] int 
  2124 ;;  pp              2   23[BANK0 ] int 
  2125 ;;  t               2   21[BANK0 ] int 
  2126 ;;  mode            1   38[BANK0 ] unsigned char 
  2127 ;;  nmode           1   35[BANK0 ] unsigned char 
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  2   84[COMRAM] int 
  2130 ;; Registers used:
  2131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2137 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2138 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2139 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2140 ;;      Totals:         7      61       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2141 ;;Total ram usage:       68 bytes
  2142 ;; Hardware stack levels used:    1
  2143 ;; Hardware stack levels required when called:    4
  2144 ;; This function calls:
  2145 ;;		___awdiv
  2146 ;;		___awmod
  2147 ;;		___fladd
  2148 ;;		___fldiv
  2149 ;;		___fleq
  2150 ;;		___flge
  2151 ;;		___flmul
  2152 ;;		___flneg
  2153 ;;		___flsub
  2154 ;;		___fltol
  2155 ;;		___fpclassifyf
  2156 ;;		_floorf
  2157 ;;		_isupper
  2158 ;;		_pad
  2159 ;;		_strcpy
  2160 ;;		_tolower
  2161 ;; This function is called by:
  2162 ;;		_vfpfcnvrt
  2163 ;; This function uses a non-reentrant model
  2164 ;;
  2165                           
  2166                           	psect	text5
  2167  001048                     __ptext5:
  2168                           	opt callstack 0
  2169  001048                     _efgtoa:
  2170                           	opt callstack 23
  2171  001048                     
  2172                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  2173  001048  0E00               	movlw	0
  2174  00104A  0100               	movlb	0	; () banked
  2175  00104C  6F80               	movwf	(efgtoa@sign+1)& (0+255),b
  2176  00104E  0E00               	movlw	0
  2177  001050  6F7F               	movwf	efgtoa@sign& (0+255),b
  2178  001052                     
  2179                           ; BSR set to: 0
  2180                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  2181  001052  C057  F091         	movff	efgtoa@f,efgtoa@g
  2182  001056  C058  F092         	movff	efgtoa@f+1,efgtoa@g+1
  2183  00105A  C059  F093         	movff	efgtoa@f+2,efgtoa@g+2
  2184  00105E  C05A  F094         	movff	efgtoa@f+3,efgtoa@g+3
  2185  001062                     
  2186                           ; BSR set to: 0
  2187                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  2188  001062  BF94               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2189  001064  EF38  F008         	goto	u3950
  2190  001068  EF36  F008         	goto	u3951
  2191  00106C                     u3951:
  2192  00106C  EF4E  F008         	goto	l3434
  2193  001070                     u3950:
  2194  001070                     
  2195                           ; BSR set to: 0
  2196                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  2197  001070  0E00               	movlw	0
  2198  001072  6F80               	movwf	(efgtoa@sign+1)& (0+255),b
  2199  001074  0E01               	movlw	1
  2200  001076  6F7F               	movwf	efgtoa@sign& (0+255),b
  2201  001078                     
  2202                           ; BSR set to: 0
  2203                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  2204  001078  C091  F001         	movff	efgtoa@g,___flneg@f1
  2205  00107C  C092  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2206  001080  C093  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2207  001084  C094  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2208  001088  EC9D  F01F         	call	___flneg	;wreg free
  2209  00108C  C001  F091         	movff	?___flneg,efgtoa@g
  2210  001090  C002  F092         	movff	?___flneg+1,efgtoa@g+1
  2211  001094  C003  F093         	movff	?___flneg+2,efgtoa@g+2
  2212  001098  C004  F094         	movff	?___flneg+3,efgtoa@g+3
  2213  00109C                     l3434:
  2214                           
  2215                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  2216  00109C  0E00               	movlw	0
  2217  00109E  0100               	movlb	0	; () banked
  2218  0010A0  6F98               	movwf	(efgtoa@n+1)& (0+255),b
  2219  0010A2  0E00               	movlw	0
  2220  0010A4  6F97               	movwf	efgtoa@n& (0+255),b
  2221  0010A6                     
  2222                           ; BSR set to: 0
  2223                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  2224  0010A6  C0D9  F084         	movff	_width,efgtoa@w
  2225  0010AA  C0DA  F085         	movff	_width+1,efgtoa@w+1
  2226  0010AE                     
  2227                           ; BSR set to: 0
  2228                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  2229  0010AE  517F               	movf	efgtoa@sign& (0+255),w,b
  2230  0010B0  1180               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2231  0010B2  A4D8               	btfss	status,2,c
  2232  0010B4  EF5E  F008         	goto	u3961
  2233  0010B8  EF60  F008         	goto	u3960
  2234  0010BC                     u3961:
  2235  0010BC  EF67  F008         	goto	l3442
  2236  0010C0                     u3960:
  2237  0010C0                     
  2238                           ; BSR set to: 0
  2239  0010C0  A5DD               	btfss	_flags& (0+255),2,b
  2240  0010C2  EF65  F008         	goto	u3971
  2241  0010C6  EF67  F008         	goto	u3970
  2242  0010CA                     u3971:
  2243  0010CA  EF81  F008         	goto	l3454
  2244  0010CE                     u3970:
  2245  0010CE                     l3442:
  2246                           
  2247                           ; BSR set to: 0
  2248                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  2249  0010CE  517F               	movf	efgtoa@sign& (0+255),w,b
  2250  0010D0  1180               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2251  0010D2  A4D8               	btfss	status,2,c
  2252  0010D4  EF6E  F008         	goto	u3981
  2253  0010D8  EF70  F008         	goto	u3980
  2254  0010DC                     u3981:
  2255  0010DC  EF76  F008         	goto	l3446
  2256  0010E0                     u3980:
  2257  0010E0                     
  2258                           ; BSR set to: 0
  2259  0010E0  0E00               	movlw	0
  2260  0010E2  6F6A               	movwf	(_efgtoa$553+1)& (0+255),b
  2261  0010E4  0E2B               	movlw	43
  2262  0010E6  6F69               	movwf	_efgtoa$553& (0+255),b
  2263  0010E8  EF7A  F008         	goto	l3448
  2264  0010EC                     l3446:
  2265                           
  2266                           ; BSR set to: 0
  2267  0010EC  0E00               	movlw	0
  2268  0010EE  6F6A               	movwf	(_efgtoa$553+1)& (0+255),b
  2269  0010F0  0E2D               	movlw	45
  2270  0010F2  6F69               	movwf	_efgtoa$553& (0+255),b
  2271  0010F4                     l3448:
  2272                           
  2273                           ; BSR set to: 0
  2274  0010F4  C069  F100         	movff	_efgtoa$553,_dbuf
  2275  0010F8                     
  2276                           ; BSR set to: 0
  2277                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  2278  0010F8  4B97               	infsnz	efgtoa@n& (0+255),f,b
  2279  0010FA  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  2280  0010FC                     
  2281                           ; BSR set to: 0
  2282                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  2283  0010FC  0784               	decf	efgtoa@w& (0+255),f,b
  2284  0010FE  A0D8               	btfss	status,0,c
  2285  001100  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  2286  001102                     l3454:
  2287                           
  2288                           ; BSR set to: 0
  2289                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2290  001102  C091  F001         	movff	efgtoa@g,___fpclassifyf@x
  2291  001106  C092  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2292  00110A  C093  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2293  00110E  C094  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2294  001112  ECCA  F01A         	call	___fpclassifyf	;wreg free
  2295  001116  0401               	decf	?___fpclassifyf^0,w,c
  2296  001118  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2297  00111A  A4D8               	btfss	status,2,c
  2298  00111C  EF92  F008         	goto	u3991
  2299  001120  EF94  F008         	goto	u3990
  2300  001124                     u3991:
  2301  001124  EFEB  F008         	goto	l3472
  2302  001128                     u3990:
  2303  001128  0EBF               	movlw	191
  2304  00112A  0100               	movlb	0	; () banked
  2305  00112C  6F60               	movwf	??_efgtoa& (0+255),b
  2306  00112E  0EFF               	movlw	255
  2307  001130  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  2308  001132  505B               	movf	efgtoa@c^0,w,c
  2309  001134  6F62               	movwf	(??_efgtoa+2)& (0+255),b
  2310  001136  6B63               	clrf	(??_efgtoa+3)& (0+255),b
  2311  001138  5160               	movf	??_efgtoa& (0+255),w,b
  2312  00113A  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  2313  00113C  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  2314  00113E  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2315  001140  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  2316  001142  E10A               	bnz	u4000
  2317  001144  0E1A               	movlw	26
  2318  001146  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  2319  001148  A0D8               	btfss	status,0,c
  2320  00114A  EFA9  F008         	goto	u4001
  2321  00114E  EFAC  F008         	goto	u4000
  2322  001152                     u4001:
  2323  001152  0E01               	movlw	1
  2324  001154  EFAD  F008         	goto	u4010
  2325  001158                     u4000:
  2326  001158  0E00               	movlw	0
  2327  00115A                     u4010:
  2328  00115A  6F6B               	movwf	_efgtoa$554& (0+255),b
  2329  00115C  6B6C               	clrf	(_efgtoa$554+1)& (0+255),b
  2330  00115E                     
  2331                           ; BSR set to: 0
  2332  00115E  516B               	movf	_efgtoa$554& (0+255),w,b
  2333  001160  116C               	iorwf	(_efgtoa$554+1)& (0+255),w,b
  2334  001162  B4D8               	btfsc	status,2,c
  2335  001164  EFB6  F008         	goto	u4021
  2336  001168  EFB8  F008         	goto	u4020
  2337  00116C                     u4021:
  2338  00116C  EFC6  F008         	goto	l3464
  2339  001170                     u4020:
  2340  001170                     
  2341                           ; BSR set to: 0
  2342                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  2343  001170  0E00               	movlw	low _dbuf
  2344  001172  2597               	addwf	efgtoa@n& (0+255),w,b
  2345  001174  6E01               	movwf	strcpy@dest^0,c
  2346  001176  0E01               	movlw	high _dbuf
  2347  001178  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2348  00117A  6E02               	movwf	(strcpy@dest+1)^0,c
  2349  00117C  0E30               	movlw	low STR_6
  2350  00117E  6E03               	movwf	strcpy@src^0,c
  2351  001180  0E10               	movlw	high STR_6
  2352  001182  6E04               	movwf	(strcpy@src+1)^0,c
  2353  001184  EC62  F01E         	call	_strcpy	;wreg free
  2354                           
  2355                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  2356  001188  EFD2  F008         	goto	l3466
  2357  00118C                     l3464:
  2358                           
  2359                           ; BSR set to: 0
  2360                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  2361  00118C  0E00               	movlw	low _dbuf
  2362  00118E  2597               	addwf	efgtoa@n& (0+255),w,b
  2363  001190  6E01               	movwf	strcpy@dest^0,c
  2364  001192  0E01               	movlw	high _dbuf
  2365  001194  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2366  001196  6E02               	movwf	(strcpy@dest+1)^0,c
  2367  001198  0E38               	movlw	low STR_7
  2368  00119A  6E03               	movwf	strcpy@src^0,c
  2369  00119C  0E10               	movlw	high STR_7
  2370  00119E  6E04               	movwf	(strcpy@src+1)^0,c
  2371  0011A0  EC62  F01E         	call	_strcpy	;wreg free
  2372  0011A4                     l3466:
  2373                           
  2374                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  2375  0011A4  0100               	movlb	0	; () banked
  2376  0011A6  0EFD               	movlw	253
  2377  0011A8  2784               	addwf	efgtoa@w& (0+255),f,b
  2378  0011AA  0EFF               	movlw	255
  2379  0011AC  2385               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2380  0011AE                     l3468:
  2381                           
  2382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  2383  0011AE  C055  F011         	movff	efgtoa@fp,pad@fp
  2384  0011B2  C056  F012         	movff	efgtoa@fp+1,pad@fp+1
  2385  0011B6  0E00               	movlw	low _dbuf
  2386  0011B8  6E13               	movwf	pad@buf^0,c
  2387  0011BA  0E01               	movlw	high _dbuf
  2388  0011BC  6E14               	movwf	(pad@buf+1)^0,c
  2389  0011BE  C084  F015         	movff	efgtoa@w,pad@p
  2390  0011C2  C085  F016         	movff	efgtoa@w+1,pad@p+1
  2391  0011C6  EC19  F01C         	call	_pad	;wreg free
  2392  0011CA  C011  F055         	movff	?_pad,?_efgtoa
  2393  0011CE  C012  F056         	movff	?_pad+1,?_efgtoa+1
  2394  0011D2  EFFB  F00D         	goto	l239
  2395  0011D6                     l3472:
  2396                           
  2397                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2398  0011D6  C091  F001         	movff	efgtoa@g,___fpclassifyf@x
  2399  0011DA  C092  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2400  0011DE  C093  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2401  0011E2  C094  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2402  0011E6  ECCA  F01A         	call	___fpclassifyf	;wreg free
  2403  0011EA  5001               	movf	?___fpclassifyf^0,w,c
  2404  0011EC  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2405  0011EE  A4D8               	btfss	status,2,c
  2406  0011F0  EFFC  F008         	goto	u4031
  2407  0011F4  EFFE  F008         	goto	u4030
  2408  0011F8                     u4031:
  2409  0011F8  EF3E  F009         	goto	l3490
  2410  0011FC                     u4030:
  2411  0011FC  0EBF               	movlw	191
  2412  0011FE  0100               	movlb	0	; () banked
  2413  001200  6F60               	movwf	??_efgtoa& (0+255),b
  2414  001202  0EFF               	movlw	255
  2415  001204  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  2416  001206  505B               	movf	efgtoa@c^0,w,c
  2417  001208  6F62               	movwf	(??_efgtoa+2)& (0+255),b
  2418  00120A  6B63               	clrf	(??_efgtoa+3)& (0+255),b
  2419  00120C  5160               	movf	??_efgtoa& (0+255),w,b
  2420  00120E  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  2421  001210  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  2422  001212  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2423  001214  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  2424  001216  E10A               	bnz	u4040
  2425  001218  0E1A               	movlw	26
  2426  00121A  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  2427  00121C  A0D8               	btfss	status,0,c
  2428  00121E  EF13  F009         	goto	u4041
  2429  001222  EF16  F009         	goto	u4040
  2430  001226                     u4041:
  2431  001226  0E01               	movlw	1
  2432  001228  EF17  F009         	goto	u4050
  2433  00122C                     u4040:
  2434  00122C  0E00               	movlw	0
  2435  00122E                     u4050:
  2436  00122E  6F6D               	movwf	_efgtoa$559& (0+255),b
  2437  001230  6B6E               	clrf	(_efgtoa$559+1)& (0+255),b
  2438  001232                     
  2439                           ; BSR set to: 0
  2440  001232  516D               	movf	_efgtoa$559& (0+255),w,b
  2441  001234  116E               	iorwf	(_efgtoa$559+1)& (0+255),w,b
  2442  001236  B4D8               	btfsc	status,2,c
  2443  001238  EF20  F009         	goto	u4061
  2444  00123C  EF22  F009         	goto	u4060
  2445  001240                     u4061:
  2446  001240  EF30  F009         	goto	l3482
  2447  001244                     u4060:
  2448  001244                     
  2449                           ; BSR set to: 0
  2450                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  2451  001244  0E00               	movlw	low _dbuf
  2452  001246  2597               	addwf	efgtoa@n& (0+255),w,b
  2453  001248  6E01               	movwf	strcpy@dest^0,c
  2454  00124A  0E01               	movlw	high _dbuf
  2455  00124C  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2456  00124E  6E02               	movwf	(strcpy@dest+1)^0,c
  2457  001250  0E34               	movlw	low STR_10
  2458  001252  6E03               	movwf	strcpy@src^0,c
  2459  001254  0E10               	movlw	high STR_10
  2460  001256  6E04               	movwf	(strcpy@src+1)^0,c
  2461  001258  EC62  F01E         	call	_strcpy	;wreg free
  2462                           
  2463                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  2464  00125C  EFD2  F008         	goto	l3466
  2465  001260                     l3482:
  2466                           
  2467                           ; BSR set to: 0
  2468                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  2469  001260  0E00               	movlw	low _dbuf
  2470  001262  2597               	addwf	efgtoa@n& (0+255),w,b
  2471  001264  6E01               	movwf	strcpy@dest^0,c
  2472  001266  0E01               	movlw	high _dbuf
  2473  001268  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2474  00126A  6E02               	movwf	(strcpy@dest+1)^0,c
  2475  00126C  0E3C               	movlw	low STR_11
  2476  00126E  6E03               	movwf	strcpy@src^0,c
  2477  001270  0E10               	movlw	high STR_11
  2478  001272  6E04               	movwf	(strcpy@src+1)^0,c
  2479  001274  EC62  F01E         	call	_strcpy	;wreg free
  2480  001278  EFD2  F008         	goto	l3466
  2481  00127C                     l3490:
  2482                           
  2483                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  2484  00127C  0E00               	movlw	0
  2485  00127E  0100               	movlb	0	; () banked
  2486  001280  6F99               	movwf	efgtoa@u& (0+255),b
  2487  001282  0E00               	movlw	0
  2488  001284  6F9A               	movwf	(efgtoa@u+1)& (0+255),b
  2489  001286  0E80               	movlw	128
  2490  001288  6F9B               	movwf	(efgtoa@u+2)& (0+255),b
  2491  00128A  0E3F               	movlw	63
  2492  00128C  6F9C               	movwf	(efgtoa@u+3)& (0+255),b
  2493                           
  2494                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  2495  00128E  0E00               	movlw	0
  2496  001290  6F96               	movwf	(efgtoa@e+1)& (0+255),b
  2497  001292  0E00               	movlw	0
  2498  001294  6F95               	movwf	efgtoa@e& (0+255),b
  2499  001296                     
  2500                           ; BSR set to: 0
  2501                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  2502  001296  C091  F001         	movff	efgtoa@g,___fleq@ff1
  2503  00129A  C092  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2504  00129E  C093  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2505  0012A2  C094  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2506  0012A6  0E00               	movlw	0
  2507  0012A8  6E05               	movwf	___fleq@ff2^0,c
  2508  0012AA  0E00               	movlw	0
  2509  0012AC  6E06               	movwf	(___fleq@ff2+1)^0,c
  2510  0012AE  0E00               	movlw	0
  2511  0012B0  6E07               	movwf	(___fleq@ff2+2)^0,c
  2512  0012B2  0E00               	movlw	0
  2513  0012B4  6E08               	movwf	(___fleq@ff2+3)^0,c
  2514  0012B6  EC36  F01D         	call	___fleq	;wreg free
  2515  0012BA  B0D8               	btfsc	status,0,c
  2516  0012BC  EF62  F009         	goto	u4071
  2517  0012C0  EF64  F009         	goto	u4070
  2518  0012C4                     u4071:
  2519  0012C4  EFE7  F009         	goto	l3508
  2520  0012C8                     u4070:
  2521  0012C8  EF83  F009         	goto	l3500
  2522  0012CC                     l3496:
  2523                           
  2524                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  2525  0012CC  C099  F00F         	movff	efgtoa@u,___flmul@b
  2526  0012D0  C09A  F010         	movff	efgtoa@u+1,___flmul@b+1
  2527  0012D4  C09B  F011         	movff	efgtoa@u+2,___flmul@b+2
  2528  0012D8  C09C  F012         	movff	efgtoa@u+3,___flmul@b+3
  2529  0012DC  0E00               	movlw	0
  2530  0012DE  6E13               	movwf	___flmul@a^0,c
  2531  0012E0  0E00               	movlw	0
  2532  0012E2  6E14               	movwf	(___flmul@a+1)^0,c
  2533  0012E4  0E20               	movlw	32
  2534  0012E6  6E15               	movwf	(___flmul@a+2)^0,c
  2535  0012E8  0E41               	movlw	65
  2536  0012EA  6E16               	movwf	(___flmul@a+3)^0,c
  2537  0012EC  EC93  F012         	call	___flmul	;wreg free
  2538  0012F0  C00F  F099         	movff	?___flmul,efgtoa@u
  2539  0012F4  C010  F09A         	movff	?___flmul+1,efgtoa@u+1
  2540  0012F8  C011  F09B         	movff	?___flmul+2,efgtoa@u+2
  2541  0012FC  C012  F09C         	movff	?___flmul+3,efgtoa@u+3
  2542  001300                     
  2543                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  2544  001300  0100               	movlb	0	; () banked
  2545  001302  4B95               	infsnz	efgtoa@e& (0+255),f,b
  2546  001304  2B96               	incf	(efgtoa@e+1)& (0+255),f,b
  2547  001306                     l3500:
  2548                           
  2549                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  2550  001306  C091  F028         	movff	efgtoa@g,___flge@ff1
  2551  00130A  C092  F029         	movff	efgtoa@g+1,___flge@ff1+1
  2552  00130E  C093  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  2553  001312  C094  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  2554  001316  0E00               	movlw	0
  2555  001318  6E13               	movwf	___flmul@a^0,c
  2556  00131A  0E00               	movlw	0
  2557  00131C  6E14               	movwf	(___flmul@a+1)^0,c
  2558  00131E  0E20               	movlw	32
  2559  001320  6E15               	movwf	(___flmul@a+2)^0,c
  2560  001322  0E41               	movlw	65
  2561  001324  6E16               	movwf	(___flmul@a+3)^0,c
  2562  001326  C099  F00F         	movff	efgtoa@u,___flmul@b
  2563  00132A  C09A  F010         	movff	efgtoa@u+1,___flmul@b+1
  2564  00132E  C09B  F011         	movff	efgtoa@u+2,___flmul@b+2
  2565  001332  C09C  F012         	movff	efgtoa@u+3,___flmul@b+3
  2566  001336  EC93  F012         	call	___flmul	;wreg free
  2567  00133A  C00F  F02C         	movff	?___flmul,___flge@ff2
  2568  00133E  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  2569  001342  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  2570  001346  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  2571  00134A  EC48  F01A         	call	___flge	;wreg free
  2572  00134E  B0D8               	btfsc	status,0,c
  2573  001350  EFAC  F009         	goto	u4081
  2574  001354  EFAE  F009         	goto	u4080
  2575  001358                     u4081:
  2576  001358  EF66  F009         	goto	l3496
  2577  00135C                     u4080:
  2578  00135C  EFCE  F009         	goto	l3506
  2579  001360                     l3502:
  2580                           
  2581                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  2582  001360  C099  F028         	movff	efgtoa@u,___fldiv@b
  2583  001364  C09A  F029         	movff	efgtoa@u+1,___fldiv@b+1
  2584  001368  C09B  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  2585  00136C  C09C  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  2586  001370  0E00               	movlw	0
  2587  001372  6E2C               	movwf	___fldiv@a^0,c
  2588  001374  0E00               	movlw	0
  2589  001376  6E2D               	movwf	(___fldiv@a+1)^0,c
  2590  001378  0E20               	movlw	32
  2591  00137A  6E2E               	movwf	(___fldiv@a+2)^0,c
  2592  00137C  0E41               	movlw	65
  2593  00137E  6E2F               	movwf	(___fldiv@a+3)^0,c
  2594  001380  ECA8  F014         	call	___fldiv	;wreg free
  2595  001384  C028  F099         	movff	?___fldiv,efgtoa@u
  2596  001388  C029  F09A         	movff	?___fldiv+1,efgtoa@u+1
  2597  00138C  C02A  F09B         	movff	?___fldiv+2,efgtoa@u+2
  2598  001390  C02B  F09C         	movff	?___fldiv+3,efgtoa@u+3
  2599  001394                     
  2600                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  2601  001394  0100               	movlb	0	; () banked
  2602  001396  0795               	decf	efgtoa@e& (0+255),f,b
  2603  001398  A0D8               	btfss	status,0,c
  2604  00139A  0796               	decf	(efgtoa@e+1)& (0+255),f,b
  2605  00139C                     l3506:
  2606                           
  2607                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  2608  00139C  C091  F028         	movff	efgtoa@g,___flge@ff1
  2609  0013A0  C092  F029         	movff	efgtoa@g+1,___flge@ff1+1
  2610  0013A4  C093  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  2611  0013A8  C094  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  2612  0013AC  C099  F02C         	movff	efgtoa@u,___flge@ff2
  2613  0013B0  C09A  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  2614  0013B4  C09B  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  2615  0013B8  C09C  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  2616  0013BC  EC48  F01A         	call	___flge	;wreg free
  2617  0013C0  A0D8               	btfss	status,0,c
  2618  0013C2  EFE5  F009         	goto	u4091
  2619  0013C6  EFE7  F009         	goto	u4090
  2620  0013CA                     u4091:
  2621  0013CA  EFB0  F009         	goto	l3502
  2622  0013CE                     u4090:
  2623  0013CE                     l3508:
  2624                           
  2625                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  2626  0013CE  C05B  F007         	movff	efgtoa@c,tolower@c
  2627  0013D2  6A08               	clrf	(tolower@c+1)^0,c
  2628  0013D4  EC32  F01E         	call	_tolower	;wreg free
  2629  0013D8  5007               	movf	?_tolower^0,w,c
  2630  0013DA  0100               	movlb	0	; () banked
  2631  0013DC  6F86               	movwf	efgtoa@mode& (0+255),b
  2632  0013DE                     
  2633                           ; BSR set to: 0
  2634                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  2635  0013DE  C086  F083         	movff	efgtoa@mode,efgtoa@nmode
  2636  0013E2                     
  2637                           ; BSR set to: 0
  2638                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  2639  0013E2  0E67               	movlw	103
  2640  0013E4  1986               	xorwf	efgtoa@mode& (0+255),w,b
  2641  0013E6  A4D8               	btfss	status,2,c
  2642  0013E8  EFF8  F009         	goto	u4101
  2643  0013EC  EFFA  F009         	goto	u4100
  2644  0013F0                     u4101:
  2645  0013F0  EF20  F00A         	goto	l3522
  2646  0013F4                     u4100:
  2647  0013F4                     
  2648                           ; BSR set to: 0
  2649                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  2650  0013F4  51DB               	movf	_prec& (0+255),w,b
  2651  0013F6  11DC               	iorwf	(_prec+1)& (0+255),w,b
  2652  0013F8  A4D8               	btfss	status,2,c
  2653  0013FA  EF01  F00A         	goto	u4111
  2654  0013FE  EF03  F00A         	goto	u4110
  2655  001402                     u4111:
  2656  001402  EF07  F00A         	goto	l3518
  2657  001406                     u4110:
  2658  001406                     
  2659                           ; BSR set to: 0
  2660                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  2661  001406  0E00               	movlw	0
  2662  001408  6FDC               	movwf	(_prec+1)& (0+255),b
  2663  00140A  0E01               	movlw	1
  2664  00140C  6FDB               	movwf	_prec& (0+255),b
  2665  00140E                     l3518:
  2666                           
  2667                           ; BSR set to: 0
  2668                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  2669  00140E  BFDC               	btfsc	(_prec+1)& (0+255),7,b
  2670  001410  EF14  F00A         	goto	u4120
  2671  001414  51DC               	movf	(_prec+1)& (0+255),w,b
  2672  001416  E106               	bnz	u4121
  2673  001418  05DB               	decf	_prec& (0+255),w,b
  2674  00141A  B0D8               	btfsc	status,0,c
  2675  00141C  EF12  F00A         	goto	u4121
  2676  001420  EF14  F00A         	goto	u4120
  2677  001424                     u4121:
  2678  001424  EF1A  F00A         	goto	l257
  2679  001428                     u4120:
  2680  001428                     l3520:
  2681                           
  2682                           ; BSR set to: 0
  2683  001428  0E00               	movlw	0
  2684  00142A  6F82               	movwf	(efgtoa@p+1)& (0+255),b
  2685  00142C  0E06               	movlw	6
  2686  00142E  6F81               	movwf	efgtoa@p& (0+255),b
  2687  001430  EF29  F00A         	goto	l3528
  2688  001434                     l257:
  2689                           
  2690                           ; BSR set to: 0
  2691  001434  C0DB  F081         	movff	_prec,efgtoa@p
  2692  001438  C0DC  F082         	movff	_prec+1,efgtoa@p+1
  2693  00143C  EF29  F00A         	goto	l3528
  2694  001440                     l3522:
  2695                           
  2696                           ; BSR set to: 0
  2697                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  2698  001440  BFDC               	btfsc	(_prec+1)& (0+255),7,b
  2699  001442  EF25  F00A         	goto	u4131
  2700  001446  EF27  F00A         	goto	u4130
  2701  00144A                     u4131:
  2702  00144A  EF14  F00A         	goto	l3520
  2703  00144E                     u4130:
  2704  00144E  EF1A  F00A         	goto	l257
  2705  001452                     l3528:
  2706                           
  2707                           ; BSR set to: 0
  2708                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  2709  001452  0E67               	movlw	103
  2710  001454  1986               	xorwf	efgtoa@mode& (0+255),w,b
  2711  001456  A4D8               	btfss	status,2,c
  2712  001458  EF30  F00A         	goto	u4141
  2713  00145C  EF32  F00A         	goto	u4140
  2714  001460                     u4141:
  2715  001460  EF61  F00A         	goto	l3538
  2716  001464                     u4140:
  2717  001464                     
  2718                           ; BSR set to: 0
  2719                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  2720  001464  AF96               	btfss	(efgtoa@e+1)& (0+255),7,b
  2721  001466  EF40  F00A         	goto	u4150
  2722  00146A  0EFC               	movlw	252
  2723  00146C  5D95               	subwf	efgtoa@e& (0+255),w,b
  2724  00146E  0EFF               	movlw	255
  2725  001470  5996               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2726  001472  A0D8               	btfss	status,0,c
  2727  001474  EF3E  F00A         	goto	u4151
  2728  001478  EF40  F00A         	goto	u4150
  2729  00147C                     u4151:
  2730  00147C  EF5F  F00A         	goto	l3536
  2731  001480                     u4150:
  2732  001480                     
  2733                           ; BSR set to: 0
  2734  001480  0EFF               	movlw	255
  2735  001482  6F60               	movwf	??_efgtoa& (0+255),b
  2736  001484  0EFF               	movlw	255
  2737  001486  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  2738  001488  C081  F062         	movff	efgtoa@p,??_efgtoa+2
  2739  00148C  C082  F063         	movff	efgtoa@p+1,??_efgtoa+3
  2740  001490  5160               	movf	??_efgtoa& (0+255),w,b
  2741  001492  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  2742  001494  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  2743  001496  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2744  001498  5195               	movf	efgtoa@e& (0+255),w,b
  2745  00149A  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  2746  00149C  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  2747  00149E  0A80               	xorlw	128
  2748  0014A0  6F64               	movwf	(??_efgtoa+4)& (0+255),b
  2749  0014A2  5196               	movf	(efgtoa@e+1)& (0+255),w,b
  2750  0014A4  0A80               	xorlw	128
  2751  0014A6  5964               	subwfb	(??_efgtoa+4)& (0+255),w,b
  2752  0014A8  A0D8               	btfss	status,0,c
  2753  0014AA  EF59  F00A         	goto	u4161
  2754  0014AE  EF5B  F00A         	goto	u4160
  2755  0014B2                     u4161:
  2756  0014B2  EF5F  F00A         	goto	l3536
  2757  0014B6                     u4160:
  2758  0014B6                     
  2759                           ; BSR set to: 0
  2760                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  2761  0014B6  0E66               	movlw	102
  2762  0014B8  6F83               	movwf	efgtoa@nmode& (0+255),b
  2763                           
  2764                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  2765  0014BA  EF61  F00A         	goto	l3538
  2766  0014BE                     l3536:
  2767                           
  2768                           ; BSR set to: 0
  2769                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  2770  0014BE  0E65               	movlw	101
  2771  0014C0  6F83               	movwf	efgtoa@nmode& (0+255),b
  2772  0014C2                     l3538:
  2773                           
  2774                           ; BSR set to: 0
  2775                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  2776  0014C2  C081  F079         	movff	efgtoa@p,efgtoa@m
  2777  0014C6  C082  F07A         	movff	efgtoa@p+1,efgtoa@m+1
  2778  0014CA                     
  2779                           ; BSR set to: 0
  2780                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  2781  0014CA  0E67               	movlw	103
  2782  0014CC  1986               	xorwf	efgtoa@mode& (0+255),w,b
  2783  0014CE  A4D8               	btfss	status,2,c
  2784  0014D0  EF6C  F00A         	goto	u4171
  2785  0014D4  EF6E  F00A         	goto	u4170
  2786  0014D8                     u4171:
  2787  0014D8  EF7E  F00A         	goto	l3546
  2788  0014DC                     u4170:
  2789  0014DC                     
  2790                           ; BSR set to: 0
  2791  0014DC  0E66               	movlw	102
  2792  0014DE  1983               	xorwf	efgtoa@nmode& (0+255),w,b
  2793  0014E0  A4D8               	btfss	status,2,c
  2794  0014E2  EF75  F00A         	goto	u4181
  2795  0014E6  EF77  F00A         	goto	u4180
  2796  0014EA                     u4181:
  2797  0014EA  EF80  F00A         	goto	l3548
  2798  0014EE                     u4180:
  2799  0014EE                     
  2800                           ; BSR set to: 0
  2801  0014EE  BF96               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2802  0014F0  EF7E  F00A         	goto	u4190
  2803  0014F4  EF7C  F00A         	goto	u4191
  2804  0014F8                     u4191:
  2805  0014F8  EF80  F00A         	goto	l3548
  2806  0014FC                     u4190:
  2807  0014FC                     l3546:
  2808                           
  2809                           ; BSR set to: 0
  2810                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  2811  0014FC  4B79               	infsnz	efgtoa@m& (0+255),f,b
  2812  0014FE  2B7A               	incf	(efgtoa@m+1)& (0+255),f,b
  2813  001500                     l3548:
  2814                           
  2815                           ; BSR set to: 0
  2816                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  2817  001500  0E66               	movlw	102
  2818  001502  1983               	xorwf	efgtoa@nmode& (0+255),w,b
  2819  001504  A4D8               	btfss	status,2,c
  2820  001506  EF87  F00A         	goto	u4201
  2821  00150A  EF89  F00A         	goto	u4200
  2822  00150E                     u4201:
  2823  00150E  EFA9  F00A         	goto	l3558
  2824  001512                     u4200:
  2825  001512                     
  2826                           ; BSR set to: 0
  2827                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  2828  001512  BF96               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2829  001514  EF90  F00A         	goto	u4210
  2830  001518  EF8E  F00A         	goto	u4211
  2831  00151C                     u4211:
  2832  00151C  EF9C  F00A         	goto	l3554
  2833  001520                     u4210:
  2834  001520                     
  2835                           ; BSR set to: 0
  2836                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  2837  001520  0E00               	movlw	0
  2838  001522  6F99               	movwf	efgtoa@u& (0+255),b
  2839  001524  0E00               	movlw	0
  2840  001526  6F9A               	movwf	(efgtoa@u+1)& (0+255),b
  2841  001528  0E80               	movlw	128
  2842  00152A  6F9B               	movwf	(efgtoa@u+2)& (0+255),b
  2843  00152C  0E3F               	movlw	63
  2844  00152E  6F9C               	movwf	(efgtoa@u+3)& (0+255),b
  2845                           
  2846                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  2847  001530  0E00               	movlw	0
  2848  001532  6F96               	movwf	(efgtoa@e+1)& (0+255),b
  2849  001534  0E00               	movlw	0
  2850  001536  6F95               	movwf	efgtoa@e& (0+255),b
  2851  001538                     l3554:
  2852                           
  2853                           ; BSR set to: 0
  2854                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  2855  001538  0E67               	movlw	103
  2856  00153A  1986               	xorwf	efgtoa@mode& (0+255),w,b
  2857  00153C  B4D8               	btfsc	status,2,c
  2858  00153E  EFA3  F00A         	goto	u4221
  2859  001542  EFA5  F00A         	goto	u4220
  2860  001546                     u4221:
  2861  001546  EFA9  F00A         	goto	l3558
  2862  00154A                     u4220:
  2863  00154A                     
  2864                           ; BSR set to: 0
  2865                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  2866  00154A  5195               	movf	efgtoa@e& (0+255),w,b
  2867  00154C  2779               	addwf	efgtoa@m& (0+255),f,b
  2868  00154E  5196               	movf	(efgtoa@e+1)& (0+255),w,b
  2869  001550  237A               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2870  001552                     l3558:
  2871                           
  2872                           ; BSR set to: 0
  2873                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  2874  001552  0E00               	movlw	0
  2875  001554  6F90               	movwf	(efgtoa@i+1)& (0+255),b
  2876  001556  0E00               	movlw	0
  2877  001558  6F8F               	movwf	efgtoa@i& (0+255),b
  2878  00155A                     
  2879                           ; BSR set to: 0
  2880                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  2881  00155A  C091  F087         	movff	efgtoa@g,efgtoa@h
  2882  00155E  C092  F088         	movff	efgtoa@g+1,efgtoa@h+1
  2883  001562  C093  F089         	movff	efgtoa@g+2,efgtoa@h+2
  2884  001566  C094  F08A         	movff	efgtoa@g+3,efgtoa@h+3
  2885  00156A                     
  2886                           ; BSR set to: 0
  2887                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  2888  00156A  C099  F065         	movff	efgtoa@u,efgtoa@ou
  2889  00156E  C09A  F066         	movff	efgtoa@u+1,efgtoa@ou+1
  2890  001572  C09B  F067         	movff	efgtoa@u+2,efgtoa@ou+2
  2891  001576  C09C  F068         	movff	efgtoa@u+3,efgtoa@ou+3
  2892                           
  2893                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  2894  00157A  EF3A  F00B         	goto	l3572
  2895  00157E                     l3564:
  2896                           
  2897                           ; BSR set to: 0
  2898                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  2899  00157E  C087  F028         	movff	efgtoa@h,___fldiv@b
  2900  001582  C088  F029         	movff	efgtoa@h+1,___fldiv@b+1
  2901  001586  C089  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  2902  00158A  C08A  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  2903  00158E  C099  F02C         	movff	efgtoa@u,___fldiv@a
  2904  001592  C09A  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  2905  001596  C09B  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  2906  00159A  C09C  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  2907  00159E  ECA8  F014         	call	___fldiv	;wreg free
  2908  0015A2  C028  F041         	movff	?___fldiv,floorf@x
  2909  0015A6  C029  F042         	movff	?___fldiv+1,floorf@x+1
  2910  0015AA  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  2911  0015AE  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  2912  0015B2  EC75  F016         	call	_floorf	;wreg free
  2913  0015B6  C041  F08B         	movff	?_floorf,efgtoa@l
  2914  0015BA  C042  F08C         	movff	?_floorf+1,efgtoa@l+1
  2915  0015BE  C043  F08D         	movff	?_floorf+2,efgtoa@l+2
  2916  0015C2  C044  F08E         	movff	?_floorf+3,efgtoa@l+3
  2917                           
  2918                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  2919  0015C6  C08B  F001         	movff	efgtoa@l,___fltol@f1
  2920  0015CA  C08C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2921  0015CE  C08D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2922  0015D2  C08E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2923  0015D6  ECC5  F019         	call	___fltol	;wreg free
  2924  0015DA  C001  F07D         	movff	?___fltol,efgtoa@d
  2925  0015DE  C002  F07E         	movff	?___fltol+1,efgtoa@d+1
  2926  0015E2                     
  2927                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  2928  0015E2  C087  F028         	movff	efgtoa@h,___flsub@b
  2929  0015E6  C088  F029         	movff	efgtoa@h+1,___flsub@b+1
  2930  0015EA  C089  F02A         	movff	efgtoa@h+2,___flsub@b+2
  2931  0015EE  C08A  F02B         	movff	efgtoa@h+3,___flsub@b+3
  2932  0015F2  C099  F013         	movff	efgtoa@u,___flmul@a
  2933  0015F6  C09A  F014         	movff	efgtoa@u+1,___flmul@a+1
  2934  0015FA  C09B  F015         	movff	efgtoa@u+2,___flmul@a+2
  2935  0015FE  C09C  F016         	movff	efgtoa@u+3,___flmul@a+3
  2936  001602  C08B  F00F         	movff	efgtoa@l,___flmul@b
  2937  001606  C08C  F010         	movff	efgtoa@l+1,___flmul@b+1
  2938  00160A  C08D  F011         	movff	efgtoa@l+2,___flmul@b+2
  2939  00160E  C08E  F012         	movff	efgtoa@l+3,___flmul@b+3
  2940  001612  EC93  F012         	call	___flmul	;wreg free
  2941  001616  C00F  F02C         	movff	?___flmul,___flsub@a
  2942  00161A  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  2943  00161E  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  2944  001622  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  2945  001626  ECE3  F01E         	call	___flsub	;wreg free
  2946  00162A  C028  F087         	movff	?___flsub,efgtoa@h
  2947  00162E  C029  F088         	movff	?___flsub+1,efgtoa@h+1
  2948  001632  C02A  F089         	movff	?___flsub+2,efgtoa@h+2
  2949  001636  C02B  F08A         	movff	?___flsub+3,efgtoa@h+3
  2950  00163A                     
  2951                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  2952  00163A  C099  F028         	movff	efgtoa@u,___fldiv@b
  2953  00163E  C09A  F029         	movff	efgtoa@u+1,___fldiv@b+1
  2954  001642  C09B  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  2955  001646  C09C  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  2956  00164A  0E00               	movlw	0
  2957  00164C  6E2C               	movwf	___fldiv@a^0,c
  2958  00164E  0E00               	movlw	0
  2959  001650  6E2D               	movwf	(___fldiv@a+1)^0,c
  2960  001652  0E20               	movlw	32
  2961  001654  6E2E               	movwf	(___fldiv@a+2)^0,c
  2962  001656  0E41               	movlw	65
  2963  001658  6E2F               	movwf	(___fldiv@a+3)^0,c
  2964  00165A  ECA8  F014         	call	___fldiv	;wreg free
  2965  00165E  C028  F099         	movff	?___fldiv,efgtoa@u
  2966  001662  C029  F09A         	movff	?___fldiv+1,efgtoa@u+1
  2967  001666  C02A  F09B         	movff	?___fldiv+2,efgtoa@u+2
  2968  00166A  C02B  F09C         	movff	?___fldiv+3,efgtoa@u+3
  2969  00166E                     
  2970                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  2971  00166E  0100               	movlb	0	; () banked
  2972  001670  4B8F               	infsnz	efgtoa@i& (0+255),f,b
  2973  001672  2B90               	incf	(efgtoa@i+1)& (0+255),f,b
  2974  001674                     l3572:
  2975                           
  2976                           ; BSR set to: 0
  2977                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  2978  001674  5179               	movf	efgtoa@m& (0+255),w,b
  2979  001676  5D8F               	subwf	efgtoa@i& (0+255),w,b
  2980  001678  5190               	movf	(efgtoa@i+1)& (0+255),w,b
  2981  00167A  0A80               	xorlw	128
  2982  00167C  6F60               	movwf	??_efgtoa& (0+255),b
  2983  00167E  517A               	movf	(efgtoa@m+1)& (0+255),w,b
  2984  001680  0A80               	xorlw	128
  2985  001682  5960               	subwfb	??_efgtoa& (0+255),w,b
  2986  001684  A0D8               	btfss	status,0,c
  2987  001686  EF47  F00B         	goto	u4231
  2988  00168A  EF49  F00B         	goto	u4230
  2989  00168E                     u4231:
  2990  00168E  EFBF  F00A         	goto	l3564
  2991  001692                     u4230:
  2992  001692                     
  2993                           ; BSR set to: 0
  2994                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  2995  001692  C099  F00F         	movff	efgtoa@u,___flmul@b
  2996  001696  C09A  F010         	movff	efgtoa@u+1,___flmul@b+1
  2997  00169A  C09B  F011         	movff	efgtoa@u+2,___flmul@b+2
  2998  00169E  C09C  F012         	movff	efgtoa@u+3,___flmul@b+3
  2999  0016A2  0E00               	movlw	0
  3000  0016A4  6E13               	movwf	___flmul@a^0,c
  3001  0016A6  0E00               	movlw	0
  3002  0016A8  6E14               	movwf	(___flmul@a+1)^0,c
  3003  0016AA  0EA0               	movlw	160
  3004  0016AC  6E15               	movwf	(___flmul@a+2)^0,c
  3005  0016AE  0E40               	movlw	64
  3006  0016B0  6E16               	movwf	(___flmul@a+3)^0,c
  3007  0016B2  EC93  F012         	call	___flmul	;wreg free
  3008  0016B6  C00F  F08B         	movff	?___flmul,efgtoa@l
  3009  0016BA  C010  F08C         	movff	?___flmul+1,efgtoa@l+1
  3010  0016BE  C011  F08D         	movff	?___flmul+2,efgtoa@l+2
  3011  0016C2  C012  F08E         	movff	?___flmul+3,efgtoa@l+3
  3012  0016C6                     
  3013                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  3014  0016C6  C087  F028         	movff	efgtoa@h,___flge@ff1
  3015  0016CA  C088  F029         	movff	efgtoa@h+1,___flge@ff1+1
  3016  0016CE  C089  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  3017  0016D2  C08A  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  3018  0016D6  C08B  F02C         	movff	efgtoa@l,___flge@ff2
  3019  0016DA  C08C  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  3020  0016DE  C08D  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  3021  0016E2  C08E  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  3022  0016E6  EC48  F01A         	call	___flge	;wreg free
  3023  0016EA  B0D8               	btfsc	status,0,c
  3024  0016EC  EF7A  F00B         	goto	u4241
  3025  0016F0  EF7C  F00B         	goto	u4240
  3026  0016F4                     u4241:
  3027  0016F4  EF87  F00B         	goto	l3580
  3028  0016F8                     u4240:
  3029  0016F8                     
  3030                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  3031  0016F8  0E00               	movlw	0
  3032  0016FA  0100               	movlb	0	; () banked
  3033  0016FC  6F8B               	movwf	efgtoa@l& (0+255),b
  3034  0016FE  0E00               	movlw	0
  3035  001700  6F8C               	movwf	(efgtoa@l+1)& (0+255),b
  3036  001702  0E00               	movlw	0
  3037  001704  6F8D               	movwf	(efgtoa@l+2)& (0+255),b
  3038  001706  0E00               	movlw	0
  3039  001708  6F8E               	movwf	(efgtoa@l+3)& (0+255),b
  3040                           
  3041                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  3042  00170A  EFB0  F00B         	goto	l3586
  3043  00170E                     l3580:
  3044                           
  3045                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  3046  00170E  C087  F001         	movff	efgtoa@h,___fleq@ff1
  3047  001712  C088  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3048  001716  C089  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3049  00171A  C08A  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3050  00171E  C08B  F005         	movff	efgtoa@l,___fleq@ff2
  3051  001722  C08C  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3052  001726  C08D  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3053  00172A  C08E  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3054  00172E  EC36  F01D         	call	___fleq	;wreg free
  3055  001732  A0D8               	btfss	status,0,c
  3056  001734  EF9E  F00B         	goto	u4251
  3057  001738  EFA0  F00B         	goto	u4250
  3058  00173C                     u4251:
  3059  00173C  EFB0  F00B         	goto	l3586
  3060  001740                     u4250:
  3061  001740  0100               	movlb	0	; () banked
  3062  001742  B17D               	btfsc	efgtoa@d& (0+255),0,b
  3063  001744  EFA6  F00B         	goto	u4261
  3064  001748  EFA8  F00B         	goto	u4260
  3065  00174C                     u4261:
  3066  00174C  EFB0  F00B         	goto	l3586
  3067  001750                     u4260:
  3068  001750                     
  3069                           ; BSR set to: 0
  3070                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  3071  001750  0E00               	movlw	0
  3072  001752  6F8B               	movwf	efgtoa@l& (0+255),b
  3073  001754  0E00               	movlw	0
  3074  001756  6F8C               	movwf	(efgtoa@l+1)& (0+255),b
  3075  001758  0E00               	movlw	0
  3076  00175A  6F8D               	movwf	(efgtoa@l+2)& (0+255),b
  3077  00175C  0E00               	movlw	0
  3078  00175E  6F8E               	movwf	(efgtoa@l+3)& (0+255),b
  3079  001760                     l3586:
  3080                           
  3081                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  3082  001760  C091  F001         	movff	efgtoa@g,___fladd@b
  3083  001764  C092  F002         	movff	efgtoa@g+1,___fladd@b+1
  3084  001768  C093  F003         	movff	efgtoa@g+2,___fladd@b+2
  3085  00176C  C094  F004         	movff	efgtoa@g+3,___fladd@b+3
  3086  001770  C08B  F005         	movff	efgtoa@l,___fladd@a
  3087  001774  C08C  F006         	movff	efgtoa@l+1,___fladd@a+1
  3088  001778  C08D  F007         	movff	efgtoa@l+2,___fladd@a+2
  3089  00177C  C08E  F008         	movff	efgtoa@l+3,___fladd@a+3
  3090  001780  ECFC  F00D         	call	___fladd	;wreg free
  3091  001784  C001  F087         	movff	?___fladd,efgtoa@h
  3092  001788  C002  F088         	movff	?___fladd+1,efgtoa@h+1
  3093  00178C  C003  F089         	movff	?___fladd+2,efgtoa@h+2
  3094  001790  C004  F08A         	movff	?___fladd+3,efgtoa@h+3
  3095  001794                     
  3096                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  3097  001794  C065  F099         	movff	efgtoa@ou,efgtoa@u
  3098  001798  C066  F09A         	movff	efgtoa@ou+1,efgtoa@u+1
  3099  00179C  C067  F09B         	movff	efgtoa@ou+2,efgtoa@u+2
  3100  0017A0  C068  F09C         	movff	efgtoa@ou+3,efgtoa@u+3
  3101  0017A4                     
  3102                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  3103  0017A4  0E65               	movlw	101
  3104  0017A6  0100               	movlb	0	; () banked
  3105  0017A8  1983               	xorwf	efgtoa@nmode& (0+255),w,b
  3106  0017AA  B4D8               	btfsc	status,2,c
  3107  0017AC  EFDA  F00B         	goto	u4271
  3108  0017B0  EFDC  F00B         	goto	u4270
  3109  0017B4                     u4271:
  3110  0017B4  EFE2  F00B         	goto	l3594
  3111  0017B8                     u4270:
  3112  0017B8                     
  3113                           ; BSR set to: 0
  3114  0017B8  C095  F07B         	movff	efgtoa@e,efgtoa@ne
  3115  0017BC  C096  F07C         	movff	efgtoa@e+1,efgtoa@ne+1
  3116  0017C0  EFE6  F00B         	goto	l283
  3117  0017C4                     l3594:
  3118                           
  3119                           ; BSR set to: 0
  3120  0017C4  0E00               	movlw	0
  3121  0017C6  6F7C               	movwf	(efgtoa@ne+1)& (0+255),b
  3122  0017C8  0E00               	movlw	0
  3123  0017CA  6F7B               	movwf	efgtoa@ne& (0+255),b
  3124  0017CC                     l283:
  3125                           
  3126                           ; BSR set to: 0
  3127                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  3128  0017CC  0E00               	movlw	0
  3129  0017CE  6F78               	movwf	(efgtoa@pp+1)& (0+255),b
  3130  0017D0  0E00               	movlw	0
  3131  0017D2  6F77               	movwf	efgtoa@pp& (0+255),b
  3132                           
  3133                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  3134  0017D4  0E00               	movlw	0
  3135  0017D6  6F76               	movwf	(efgtoa@t+1)& (0+255),b
  3136  0017D8  0E00               	movlw	0
  3137  0017DA  6F75               	movwf	efgtoa@t& (0+255),b
  3138                           
  3139                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  3140  0017DC  0E00               	movlw	0
  3141  0017DE  6F90               	movwf	(efgtoa@i+1)& (0+255),b
  3142  0017E0  0E00               	movlw	0
  3143  0017E2  6F8F               	movwf	efgtoa@i& (0+255),b
  3144                           
  3145                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  3146  0017E4  EFE1  F00C         	goto	l3644
  3147  0017E8                     l3596:
  3148                           
  3149                           ; BSR set to: 0
  3150                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  3151  0017E8  C087  F028         	movff	efgtoa@h,___fldiv@b
  3152  0017EC  C088  F029         	movff	efgtoa@h+1,___fldiv@b+1
  3153  0017F0  C089  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  3154  0017F4  C08A  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  3155  0017F8  C099  F02C         	movff	efgtoa@u,___fldiv@a
  3156  0017FC  C09A  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  3157  001800  C09B  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  3158  001804  C09C  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  3159  001808  ECA8  F014         	call	___fldiv	;wreg free
  3160  00180C  C028  F041         	movff	?___fldiv,floorf@x
  3161  001810  C029  F042         	movff	?___fldiv+1,floorf@x+1
  3162  001814  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  3163  001818  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  3164  00181C  EC75  F016         	call	_floorf	;wreg free
  3165  001820  C041  F08B         	movff	?_floorf,efgtoa@l
  3166  001824  C042  F08C         	movff	?_floorf+1,efgtoa@l+1
  3167  001828  C043  F08D         	movff	?_floorf+2,efgtoa@l+2
  3168  00182C  C044  F08E         	movff	?_floorf+3,efgtoa@l+3
  3169                           
  3170                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  3171  001830  C08B  F001         	movff	efgtoa@l,___fltol@f1
  3172  001834  C08C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3173  001838  C08D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3174  00183C  C08E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3175  001840  ECC5  F019         	call	___fltol	;wreg free
  3176  001844  C001  F07D         	movff	?___fltol,efgtoa@d
  3177  001848  C002  F07E         	movff	?___fltol+1,efgtoa@d+1
  3178  00184C                     
  3179                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3180  00184C  0100               	movlb	0	; () banked
  3181  00184E  B9DD               	btfsc	_flags& (0+255),4,b
  3182  001850  EF2C  F00C         	goto	u4281
  3183  001854  EF2E  F00C         	goto	u4280
  3184  001858                     u4281:
  3185  001858  EF4B  F00C         	goto	l3608
  3186  00185C                     u4280:
  3187  00185C                     
  3188                           ; BSR set to: 0
  3189  00185C  517D               	movf	efgtoa@d& (0+255),w,b
  3190  00185E  117E               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3191  001860  A4D8               	btfss	status,2,c
  3192  001862  EF35  F00C         	goto	u4291
  3193  001866  EF37  F00C         	goto	u4290
  3194  00186A                     u4291:
  3195  00186A  EF4B  F00C         	goto	l3608
  3196  00186E                     u4290:
  3197  00186E                     
  3198                           ; BSR set to: 0
  3199  00186E  0E67               	movlw	103
  3200  001870  1986               	xorwf	efgtoa@mode& (0+255),w,b
  3201  001872  A4D8               	btfss	status,2,c
  3202  001874  EF3E  F00C         	goto	u4301
  3203  001878  EF40  F00C         	goto	u4300
  3204  00187C                     u4301:
  3205  00187C  EF4B  F00C         	goto	l3608
  3206  001880                     u4300:
  3207  001880                     
  3208                           ; BSR set to: 0
  3209  001880  BF7C               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3210  001882  EF47  F00C         	goto	u4310
  3211  001886  EF45  F00C         	goto	u4311
  3212  00188A                     u4311:
  3213  00188A  EF4B  F00C         	goto	l3608
  3214  00188E                     u4310:
  3215  00188E                     
  3216                           ; BSR set to: 0
  3217                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  3218  00188E  4B75               	infsnz	efgtoa@t& (0+255),f,b
  3219  001890  2B76               	incf	(efgtoa@t+1)& (0+255),f,b
  3220                           
  3221                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  3222  001892  EF95  F00C         	goto	l3636
  3223  001896                     l3608:
  3224                           
  3225                           ; BSR set to: 0
  3226                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  3227  001896  5177               	movf	efgtoa@pp& (0+255),w,b
  3228  001898  1178               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3229  00189A  A4D8               	btfss	status,2,c
  3230  00189C  EF52  F00C         	goto	u4321
  3231  0018A0  EF54  F00C         	goto	u4320
  3232  0018A4                     u4321:
  3233  0018A4  EF7E  F00C         	goto	l3628
  3234  0018A8                     u4320:
  3235  0018A8                     
  3236                           ; BSR set to: 0
  3237  0018A8  BF7C               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3238  0018AA  EF5B  F00C         	goto	u4330
  3239  0018AE  EF59  F00C         	goto	u4331
  3240  0018B2                     u4331:
  3241  0018B2  EF7E  F00C         	goto	l3628
  3242  0018B6                     u4330:
  3243  0018B6                     
  3244                           ; BSR set to: 0
  3245                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  3246  0018B6  0E00               	movlw	low _dbuf
  3247  0018B8  2597               	addwf	efgtoa@n& (0+255),w,b
  3248  0018BA  6ED9               	movwf	fsr2l,c
  3249  0018BC  0E01               	movlw	high _dbuf
  3250  0018BE  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3251  0018C0  6EDA               	movwf	fsr2h,c
  3252  0018C2  0E2E               	movlw	46
  3253  0018C4  6EDF               	movwf	indf2,c
  3254  0018C6                     
  3255                           ; BSR set to: 0
  3256  0018C6  4B97               	infsnz	efgtoa@n& (0+255),f,b
  3257  0018C8  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  3258  0018CA                     
  3259                           ; BSR set to: 0
  3260                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  3261  0018CA  0784               	decf	efgtoa@w& (0+255),f,b
  3262  0018CC  A0D8               	btfss	status,0,c
  3263  0018CE  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  3264  0018D0                     
  3265                           ; BSR set to: 0
  3266                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  3267  0018D0  0E00               	movlw	0
  3268  0018D2  6F78               	movwf	(efgtoa@pp+1)& (0+255),b
  3269  0018D4  0E01               	movlw	1
  3270  0018D6  6F77               	movwf	efgtoa@pp& (0+255),b
  3271  0018D8  EF7E  F00C         	goto	l3628
  3272  0018DC                     l3620:
  3273                           
  3274                           ; BSR set to: 0
  3275                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  3276  0018DC  0E00               	movlw	low _dbuf
  3277  0018DE  2597               	addwf	efgtoa@n& (0+255),w,b
  3278  0018E0  6ED9               	movwf	fsr2l,c
  3279  0018E2  0E01               	movlw	high _dbuf
  3280  0018E4  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3281  0018E6  6EDA               	movwf	fsr2h,c
  3282  0018E8  0E30               	movlw	48
  3283  0018EA  6EDF               	movwf	indf2,c
  3284  0018EC                     
  3285                           ; BSR set to: 0
  3286  0018EC  4B97               	infsnz	efgtoa@n& (0+255),f,b
  3287  0018EE  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  3288  0018F0                     
  3289                           ; BSR set to: 0
  3290                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  3291  0018F0  0784               	decf	efgtoa@w& (0+255),f,b
  3292  0018F2  A0D8               	btfss	status,0,c
  3293  0018F4  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  3294  0018F6                     
  3295                           ; BSR set to: 0
  3296                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  3297  0018F6  0775               	decf	efgtoa@t& (0+255),f,b
  3298  0018F8  A0D8               	btfss	status,0,c
  3299  0018FA  0776               	decf	(efgtoa@t+1)& (0+255),f,b
  3300  0018FC                     l3628:
  3301                           
  3302                           ; BSR set to: 0
  3303                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  3304  0018FC  5175               	movf	efgtoa@t& (0+255),w,b
  3305  0018FE  1176               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3306  001900  A4D8               	btfss	status,2,c
  3307  001902  EF85  F00C         	goto	u4341
  3308  001906  EF87  F00C         	goto	u4340
  3309  00190A                     u4341:
  3310  00190A  EF6E  F00C         	goto	l3620
  3311  00190E                     u4340:
  3312  00190E                     
  3313                           ; BSR set to: 0
  3314                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  3315  00190E  0E00               	movlw	low _dbuf
  3316  001910  2597               	addwf	efgtoa@n& (0+255),w,b
  3317  001912  6ED9               	movwf	fsr2l,c
  3318  001914  0E01               	movlw	high _dbuf
  3319  001916  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3320  001918  6EDA               	movwf	fsr2h,c
  3321  00191A  517D               	movf	efgtoa@d& (0+255),w,b
  3322  00191C  0F30               	addlw	48
  3323  00191E  6EDF               	movwf	indf2,c
  3324  001920                     
  3325                           ; BSR set to: 0
  3326  001920  4B97               	infsnz	efgtoa@n& (0+255),f,b
  3327  001922  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  3328  001924                     
  3329                           ; BSR set to: 0
  3330                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  3331  001924  0784               	decf	efgtoa@w& (0+255),f,b
  3332  001926  A0D8               	btfss	status,0,c
  3333  001928  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  3334  00192A                     l3636:
  3335                           
  3336                           ; BSR set to: 0
  3337                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  3338  00192A  C087  F028         	movff	efgtoa@h,___flsub@b
  3339  00192E  C088  F029         	movff	efgtoa@h+1,___flsub@b+1
  3340  001932  C089  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3341  001936  C08A  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3342  00193A  C099  F013         	movff	efgtoa@u,___flmul@a
  3343  00193E  C09A  F014         	movff	efgtoa@u+1,___flmul@a+1
  3344  001942  C09B  F015         	movff	efgtoa@u+2,___flmul@a+2
  3345  001946  C09C  F016         	movff	efgtoa@u+3,___flmul@a+3
  3346  00194A  C08B  F00F         	movff	efgtoa@l,___flmul@b
  3347  00194E  C08C  F010         	movff	efgtoa@l+1,___flmul@b+1
  3348  001952  C08D  F011         	movff	efgtoa@l+2,___flmul@b+2
  3349  001956  C08E  F012         	movff	efgtoa@l+3,___flmul@b+3
  3350  00195A  EC93  F012         	call	___flmul	;wreg free
  3351  00195E  C00F  F02C         	movff	?___flmul,___flsub@a
  3352  001962  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3353  001966  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3354  00196A  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3355  00196E  ECE3  F01E         	call	___flsub	;wreg free
  3356  001972  C028  F087         	movff	?___flsub,efgtoa@h
  3357  001976  C029  F088         	movff	?___flsub+1,efgtoa@h+1
  3358  00197A  C02A  F089         	movff	?___flsub+2,efgtoa@h+2
  3359  00197E  C02B  F08A         	movff	?___flsub+3,efgtoa@h+3
  3360  001982                     
  3361                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  3362  001982  C099  F028         	movff	efgtoa@u,___fldiv@b
  3363  001986  C09A  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3364  00198A  C09B  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3365  00198E  C09C  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3366  001992  0E00               	movlw	0
  3367  001994  6E2C               	movwf	___fldiv@a^0,c
  3368  001996  0E00               	movlw	0
  3369  001998  6E2D               	movwf	(___fldiv@a+1)^0,c
  3370  00199A  0E20               	movlw	32
  3371  00199C  6E2E               	movwf	(___fldiv@a+2)^0,c
  3372  00199E  0E41               	movlw	65
  3373  0019A0  6E2F               	movwf	(___fldiv@a+3)^0,c
  3374  0019A2  ECA8  F014         	call	___fldiv	;wreg free
  3375  0019A6  C028  F099         	movff	?___fldiv,efgtoa@u
  3376  0019AA  C029  F09A         	movff	?___fldiv+1,efgtoa@u+1
  3377  0019AE  C02A  F09B         	movff	?___fldiv+2,efgtoa@u+2
  3378  0019B2  C02B  F09C         	movff	?___fldiv+3,efgtoa@u+3
  3379  0019B6                     
  3380                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  3381  0019B6  0100               	movlb	0	; () banked
  3382  0019B8  077B               	decf	efgtoa@ne& (0+255),f,b
  3383  0019BA  A0D8               	btfss	status,0,c
  3384  0019BC  077C               	decf	(efgtoa@ne+1)& (0+255),f,b
  3385  0019BE                     
  3386                           ; BSR set to: 0
  3387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  3388  0019BE  4B8F               	infsnz	efgtoa@i& (0+255),f,b
  3389  0019C0  2B90               	incf	(efgtoa@i+1)& (0+255),f,b
  3390  0019C2                     l3644:
  3391                           
  3392                           ; BSR set to: 0
  3393                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  3394  0019C2  5179               	movf	efgtoa@m& (0+255),w,b
  3395  0019C4  5D8F               	subwf	efgtoa@i& (0+255),w,b
  3396  0019C6  5190               	movf	(efgtoa@i+1)& (0+255),w,b
  3397  0019C8  0A80               	xorlw	128
  3398  0019CA  6F60               	movwf	??_efgtoa& (0+255),b
  3399  0019CC  517A               	movf	(efgtoa@m+1)& (0+255),w,b
  3400  0019CE  0A80               	xorlw	128
  3401  0019D0  5960               	subwfb	??_efgtoa& (0+255),w,b
  3402  0019D2  B0D8               	btfsc	status,0,c
  3403  0019D4  EFEE  F00C         	goto	u4351
  3404  0019D8  EFF0  F00C         	goto	u4350
  3405  0019DC                     u4351:
  3406  0019DC  EFFE  F00C         	goto	l3648
  3407  0019E0                     u4350:
  3408  0019E0                     
  3409                           ; BSR set to: 0
  3410  0019E0  BF98               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3411  0019E2  EFFC  F00C         	goto	u4361
  3412  0019E6  5198               	movf	(efgtoa@n+1)& (0+255),w,b
  3413  0019E8  E109               	bnz	u4360
  3414  0019EA  0E4B               	movlw	75
  3415  0019EC  5D97               	subwf	efgtoa@n& (0+255),w,b
  3416  0019EE  A0D8               	btfss	status,0,c
  3417  0019F0  EFFC  F00C         	goto	u4361
  3418  0019F4  EFFE  F00C         	goto	u4360
  3419  0019F8                     u4361:
  3420  0019F8  EFF4  F00B         	goto	l3596
  3421  0019FC                     u4360:
  3422  0019FC                     l3648:
  3423                           
  3424                           ; BSR set to: 0
  3425                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  3426  0019FC  5177               	movf	efgtoa@pp& (0+255),w,b
  3427  0019FE  1178               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3428  001A00  A4D8               	btfss	status,2,c
  3429  001A02  EF05  F00D         	goto	u4371
  3430  001A06  EF07  F00D         	goto	u4370
  3431  001A0A                     u4371:
  3432  001A0A  EF18  F00D         	goto	l3656
  3433  001A0E                     u4370:
  3434  001A0E                     
  3435                           ; BSR set to: 0
  3436  001A0E  A9DD               	btfss	_flags& (0+255),4,b
  3437  001A10  EF0C  F00D         	goto	u4381
  3438  001A14  EF0E  F00D         	goto	u4380
  3439  001A18                     u4381:
  3440  001A18  EF18  F00D         	goto	l3656
  3441  001A1C                     u4380:
  3442  001A1C                     
  3443                           ; BSR set to: 0
  3444                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  3445  001A1C  0E00               	movlw	low _dbuf
  3446  001A1E  2597               	addwf	efgtoa@n& (0+255),w,b
  3447  001A20  6ED9               	movwf	fsr2l,c
  3448  001A22  0E01               	movlw	high _dbuf
  3449  001A24  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3450  001A26  6EDA               	movwf	fsr2h,c
  3451  001A28  0E2E               	movlw	46
  3452  001A2A  6EDF               	movwf	indf2,c
  3453  001A2C                     
  3454                           ; BSR set to: 0
  3455  001A2C  4B97               	infsnz	efgtoa@n& (0+255),f,b
  3456  001A2E  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  3457  001A30                     l3656:
  3458                           
  3459                           ; BSR set to: 0
  3460                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  3461  001A30  0E00               	movlw	low _dbuf
  3462  001A32  2597               	addwf	efgtoa@n& (0+255),w,b
  3463  001A34  6ED9               	movwf	fsr2l,c
  3464  001A36  0E01               	movlw	high _dbuf
  3465  001A38  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3466  001A3A  6EDA               	movwf	fsr2h,c
  3467  001A3C  0E00               	movlw	0
  3468  001A3E  6EDF               	movwf	indf2,c
  3469  001A40                     
  3470                           ; BSR set to: 0
  3471                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  3472  001A40  0E65               	movlw	101
  3473  001A42  1983               	xorwf	efgtoa@nmode& (0+255),w,b
  3474  001A44  A4D8               	btfss	status,2,c
  3475  001A46  EF27  F00D         	goto	u4391
  3476  001A4A  EF29  F00D         	goto	u4390
  3477  001A4E                     u4391:
  3478  001A4E  EFD7  F008         	goto	l3468
  3479  001A52                     u4390:
  3480  001A52                     
  3481                           ; BSR set to: 0
  3482                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  3483  001A52  0E00               	movlw	0
  3484  001A54  6F90               	movwf	(efgtoa@i+1)& (0+255),b
  3485  001A56  0E4F               	movlw	79
  3486  001A58  6F8F               	movwf	efgtoa@i& (0+255),b
  3487  001A5A                     
  3488                           ; BSR set to: 0
  3489                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  3490  001A5A  0E00               	movlw	low _dbuf
  3491  001A5C  258F               	addwf	efgtoa@i& (0+255),w,b
  3492  001A5E  6ED9               	movwf	fsr2l,c
  3493  001A60  0E01               	movlw	high _dbuf
  3494  001A62  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3495  001A64  6EDA               	movwf	fsr2h,c
  3496  001A66  0E00               	movlw	0
  3497  001A68  6EDF               	movwf	indf2,c
  3498  001A6A                     
  3499                           ; BSR set to: 0
  3500                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  3501  001A6A  0E00               	movlw	0
  3502  001A6C  6F80               	movwf	(efgtoa@sign+1)& (0+255),b
  3503  001A6E  0E00               	movlw	0
  3504  001A70  6F7F               	movwf	efgtoa@sign& (0+255),b
  3505  001A72                     
  3506                           ; BSR set to: 0
  3507                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  3508  001A72  BF96               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3509  001A74  EF40  F00D         	goto	u4400
  3510  001A78  EF3E  F00D         	goto	u4401
  3511  001A7C                     u4401:
  3512  001A7C  EF48  F00D         	goto	l3672
  3513  001A80                     u4400:
  3514  001A80                     
  3515                           ; BSR set to: 0
  3516                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  3517  001A80  0E00               	movlw	0
  3518  001A82  6F80               	movwf	(efgtoa@sign+1)& (0+255),b
  3519  001A84  0E01               	movlw	1
  3520  001A86  6F7F               	movwf	efgtoa@sign& (0+255),b
  3521  001A88                     
  3522                           ; BSR set to: 0
  3523                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  3524  001A88  6D95               	negf	efgtoa@e& (0+255),b
  3525  001A8A  1F96               	comf	(efgtoa@e+1)& (0+255),f,b
  3526  001A8C  B0D8               	btfsc	status,0,c
  3527  001A8E  2B96               	incf	(efgtoa@e+1)& (0+255),f,b
  3528  001A90                     l3672:
  3529                           
  3530                           ; BSR set to: 0
  3531                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  3532  001A90  0E00               	movlw	0
  3533  001A92  6F82               	movwf	(efgtoa@p+1)& (0+255),b
  3534  001A94  0E02               	movlw	2
  3535  001A96  6F81               	movwf	efgtoa@p& (0+255),b
  3536                           
  3537                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  3538  001A98  EF79  F00D         	goto	l3684
  3539  001A9C                     l3674:
  3540                           
  3541                           ; BSR set to: 0
  3542                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  3543  001A9C  078F               	decf	efgtoa@i& (0+255),f,b
  3544  001A9E  A0D8               	btfss	status,0,c
  3545  001AA0  0790               	decf	(efgtoa@i+1)& (0+255),f,b
  3546  001AA2                     
  3547                           ; BSR set to: 0
  3548                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  3549  001AA2  0E00               	movlw	low _dbuf
  3550  001AA4  258F               	addwf	efgtoa@i& (0+255),w,b
  3551  001AA6  6ED9               	movwf	fsr2l,c
  3552  001AA8  0E01               	movlw	high _dbuf
  3553  001AAA  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3554  001AAC  6EDA               	movwf	fsr2h,c
  3555  001AAE  C095  F001         	movff	efgtoa@e,___awmod@dividend
  3556  001AB2  C096  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  3557  001AB6  0E00               	movlw	0
  3558  001AB8  6E04               	movwf	(___awmod@divisor+1)^0,c
  3559  001ABA  0E0A               	movlw	10
  3560  001ABC  6E03               	movwf	___awmod@divisor^0,c
  3561  001ABE  ECDE  F01C         	call	___awmod	;wreg free
  3562  001AC2  5001               	movf	?___awmod^0,w,c
  3563  001AC4  0F30               	addlw	48
  3564  001AC6  6EDF               	movwf	indf2,c
  3565  001AC8                     
  3566                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  3567  001AC8  C095  F001         	movff	efgtoa@e,___awdiv@dividend
  3568  001ACC  C096  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  3569  001AD0  0E00               	movlw	0
  3570  001AD2  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3571  001AD4  0E0A               	movlw	10
  3572  001AD6  6E03               	movwf	___awdiv@divisor^0,c
  3573  001AD8  EC7C  F01C         	call	___awdiv	;wreg free
  3574  001ADC  C001  F095         	movff	?___awdiv,efgtoa@e
  3575  001AE0  C002  F096         	movff	?___awdiv+1,efgtoa@e+1
  3576  001AE4                     
  3577                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  3578  001AE4  0100               	movlb	0	; () banked
  3579  001AE6  0781               	decf	efgtoa@p& (0+255),f,b
  3580  001AE8  A0D8               	btfss	status,0,c
  3581  001AEA  0782               	decf	(efgtoa@p+1)& (0+255),f,b
  3582  001AEC                     
  3583                           ; BSR set to: 0
  3584                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  3585  001AEC  0784               	decf	efgtoa@w& (0+255),f,b
  3586  001AEE  A0D8               	btfss	status,0,c
  3587  001AF0  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  3588  001AF2                     l3684:
  3589                           
  3590                           ; BSR set to: 0
  3591                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  3592  001AF2  5195               	movf	efgtoa@e& (0+255),w,b
  3593  001AF4  1196               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3594  001AF6  A4D8               	btfss	status,2,c
  3595  001AF8  EF80  F00D         	goto	u4411
  3596  001AFC  EF82  F00D         	goto	u4410
  3597  001B00                     u4411:
  3598  001B00  EF4E  F00D         	goto	l3674
  3599  001B04                     u4410:
  3600  001B04                     
  3601                           ; BSR set to: 0
  3602  001B04  BF82               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3603  001B06  EF8F  F00D         	goto	u4420
  3604  001B0A  5182               	movf	(efgtoa@p+1)& (0+255),w,b
  3605  001B0C  E106               	bnz	u4421
  3606  001B0E  0581               	decf	efgtoa@p& (0+255),w,b
  3607  001B10  B0D8               	btfsc	status,0,c
  3608  001B12  EF8D  F00D         	goto	u4421
  3609  001B16  EF8F  F00D         	goto	u4420
  3610  001B1A                     u4421:
  3611  001B1A  EF4E  F00D         	goto	l3674
  3612  001B1E                     u4420:
  3613  001B1E                     
  3614                           ; BSR set to: 0
  3615                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  3616  001B1E  078F               	decf	efgtoa@i& (0+255),f,b
  3617  001B20  A0D8               	btfss	status,0,c
  3618  001B22  0790               	decf	(efgtoa@i+1)& (0+255),f,b
  3619  001B24                     
  3620                           ; BSR set to: 0
  3621                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  3622  001B24  517F               	movf	efgtoa@sign& (0+255),w,b
  3623  001B26  1180               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3624  001B28  A4D8               	btfss	status,2,c
  3625  001B2A  EF99  F00D         	goto	u4431
  3626  001B2E  EF9B  F00D         	goto	u4430
  3627  001B32                     u4431:
  3628  001B32  EFA1  F00D         	goto	l3694
  3629  001B36                     u4430:
  3630  001B36                     
  3631                           ; BSR set to: 0
  3632  001B36  0E00               	movlw	0
  3633  001B38  6F70               	movwf	(_efgtoa$563+1)& (0+255),b
  3634  001B3A  0E2B               	movlw	43
  3635  001B3C  6F6F               	movwf	_efgtoa$563& (0+255),b
  3636  001B3E  EFA5  F00D         	goto	l3696
  3637  001B42                     l3694:
  3638                           
  3639                           ; BSR set to: 0
  3640  001B42  0E00               	movlw	0
  3641  001B44  6F70               	movwf	(_efgtoa$563+1)& (0+255),b
  3642  001B46  0E2D               	movlw	45
  3643  001B48  6F6F               	movwf	_efgtoa$563& (0+255),b
  3644  001B4A                     l3696:
  3645                           
  3646                           ; BSR set to: 0
  3647  001B4A  0E00               	movlw	low _dbuf
  3648  001B4C  258F               	addwf	efgtoa@i& (0+255),w,b
  3649  001B4E  6ED9               	movwf	fsr2l,c
  3650  001B50  0E01               	movlw	high _dbuf
  3651  001B52  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3652  001B54  6EDA               	movwf	fsr2h,c
  3653  001B56  C06F  FFDF         	movff	_efgtoa$563,indf2
  3654  001B5A                     
  3655                           ; BSR set to: 0
  3656                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  3657  001B5A  0784               	decf	efgtoa@w& (0+255),f,b
  3658  001B5C  A0D8               	btfss	status,0,c
  3659  001B5E  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  3660  001B60                     
  3661                           ; BSR set to: 0
  3662                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  3663  001B60  078F               	decf	efgtoa@i& (0+255),f,b
  3664  001B62  A0D8               	btfss	status,0,c
  3665  001B64  0790               	decf	(efgtoa@i+1)& (0+255),f,b
  3666  001B66                     
  3667                           ; BSR set to: 0
  3668  001B66  0EBF               	movlw	191
  3669  001B68  6F60               	movwf	??_efgtoa& (0+255),b
  3670  001B6A  0EFF               	movlw	255
  3671  001B6C  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  3672  001B6E  505B               	movf	efgtoa@c^0,w,c
  3673  001B70  6F62               	movwf	(??_efgtoa+2)& (0+255),b
  3674  001B72  6B63               	clrf	(??_efgtoa+3)& (0+255),b
  3675  001B74  5160               	movf	??_efgtoa& (0+255),w,b
  3676  001B76  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  3677  001B78  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  3678  001B7A  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3679  001B7C  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  3680  001B7E  E10A               	bnz	u4440
  3681  001B80  0E1A               	movlw	26
  3682  001B82  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  3683  001B84  A0D8               	btfss	status,0,c
  3684  001B86  EFC7  F00D         	goto	u4441
  3685  001B8A  EFCA  F00D         	goto	u4440
  3686  001B8E                     u4441:
  3687  001B8E  0E01               	movlw	1
  3688  001B90  EFCB  F00D         	goto	u4450
  3689  001B94                     u4440:
  3690  001B94  0E00               	movlw	0
  3691  001B96                     u4450:
  3692  001B96  6F73               	movwf	_efgtoa$565& (0+255),b
  3693  001B98  6B74               	clrf	(_efgtoa$565+1)& (0+255),b
  3694  001B9A                     
  3695                           ; BSR set to: 0
  3696  001B9A  5173               	movf	_efgtoa$565& (0+255),w,b
  3697  001B9C  1174               	iorwf	(_efgtoa$565+1)& (0+255),w,b
  3698  001B9E  A4D8               	btfss	status,2,c
  3699  001BA0  EFD4  F00D         	goto	u4461
  3700  001BA4  EFD6  F00D         	goto	u4460
  3701  001BA8                     u4461:
  3702  001BA8  EFDC  F00D         	goto	l3710
  3703  001BAC                     u4460:
  3704  001BAC                     
  3705                           ; BSR set to: 0
  3706  001BAC  0E00               	movlw	0
  3707  001BAE  6F72               	movwf	(_efgtoa$564+1)& (0+255),b
  3708  001BB0  0E65               	movlw	101
  3709  001BB2  6F71               	movwf	_efgtoa$564& (0+255),b
  3710  001BB4  EFE0  F00D         	goto	l3712
  3711  001BB8                     l3710:
  3712                           
  3713                           ; BSR set to: 0
  3714  001BB8  0E00               	movlw	0
  3715  001BBA  6F72               	movwf	(_efgtoa$564+1)& (0+255),b
  3716  001BBC  0E45               	movlw	69
  3717  001BBE  6F71               	movwf	_efgtoa$564& (0+255),b
  3718  001BC0                     l3712:
  3719                           
  3720                           ; BSR set to: 0
  3721  001BC0  0E00               	movlw	low _dbuf
  3722  001BC2  258F               	addwf	efgtoa@i& (0+255),w,b
  3723  001BC4  6ED9               	movwf	fsr2l,c
  3724  001BC6  0E01               	movlw	high _dbuf
  3725  001BC8  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3726  001BCA  6EDA               	movwf	fsr2h,c
  3727  001BCC  C071  FFDF         	movff	_efgtoa$564,indf2
  3728  001BD0                     
  3729                           ; BSR set to: 0
  3730                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  3731  001BD0  0784               	decf	efgtoa@w& (0+255),f,b
  3732  001BD2  A0D8               	btfss	status,0,c
  3733  001BD4  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  3734  001BD6                     
  3735                           ; BSR set to: 0
  3736                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  3737  001BD6  0E00               	movlw	low _dbuf
  3738  001BD8  2597               	addwf	efgtoa@n& (0+255),w,b
  3739  001BDA  6E01               	movwf	strcpy@dest^0,c
  3740  001BDC  0E01               	movlw	high _dbuf
  3741  001BDE  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3742  001BE0  6E02               	movwf	(strcpy@dest+1)^0,c
  3743  001BE2  0E00               	movlw	low _dbuf
  3744  001BE4  258F               	addwf	efgtoa@i& (0+255),w,b
  3745  001BE6  6E03               	movwf	strcpy@src^0,c
  3746  001BE8  0E01               	movlw	high _dbuf
  3747  001BEA  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3748  001BEC  6E04               	movwf	(strcpy@src+1)^0,c
  3749  001BEE  EC62  F01E         	call	_strcpy	;wreg free
  3750  001BF2  EFD7  F008         	goto	l3468
  3751  001BF6                     l239:
  3752  001BF6  0012               	return		;funcret
  3753  001BF8                     __end_of_efgtoa:
  3754                           	opt callstack 0
  3755                           
  3756 ;; *************** function _tolower *****************
  3757 ;; Defined at:
  3758 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;  c               2    6[COMRAM] int 
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;		None
  3763 ;; Return value:  Size  Location     Type
  3764 ;;                  2    6[COMRAM] int 
  3765 ;; Registers used:
  3766 ;;		wreg, status,2, status,0
  3767 ;; Tracked objects:
  3768 ;;		On entry : 0/0
  3769 ;;		On exit  : 0/0
  3770 ;;		Unchanged: 0/0
  3771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3772 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3773 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3774 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3775 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3776 ;;Total ram usage:        8 bytes
  3777 ;; Hardware stack levels used:    1
  3778 ;; Hardware stack levels required when called:    1
  3779 ;; This function calls:
  3780 ;;		_isupper
  3781 ;; This function is called by:
  3782 ;;		_efgtoa
  3783 ;;		_vfpfcnvrt
  3784 ;; This function uses a non-reentrant model
  3785 ;;
  3786                           
  3787                           	psect	text6
  3788  003C64                     __ptext6:
  3789                           	opt callstack 0
  3790  003C64                     _tolower:
  3791                           	opt callstack 26
  3792  003C64  0EBF               	movlw	191
  3793  003C66  6E09               	movwf	??_tolower^0,c
  3794  003C68  0EFF               	movlw	255
  3795  003C6A  6E0A               	movwf	(??_tolower+1)^0,c
  3796  003C6C  C007  F00B         	movff	tolower@c,??_tolower+2
  3797  003C70  C008  F00C         	movff	tolower@c+1,??_tolower+3
  3798  003C74  5009               	movf	??_tolower^0,w,c
  3799  003C76  260B               	addwf	(??_tolower+2)^0,f,c
  3800  003C78  500A               	movf	(??_tolower+1)^0,w,c
  3801  003C7A  220C               	addwfc	(??_tolower+3)^0,f,c
  3802  003C7C  500C               	movf	(??_tolower+3)^0,w,c
  3803  003C7E  E10A               	bnz	u3080
  3804  003C80  0E1A               	movlw	26
  3805  003C82  5C0B               	subwf	(??_tolower+2)^0,w,c
  3806  003C84  A0D8               	btfss	status,0,c
  3807  003C86  EF47  F01E         	goto	u3081
  3808  003C8A  EF4A  F01E         	goto	u3080
  3809  003C8E                     u3081:
  3810  003C8E  0E01               	movlw	1
  3811  003C90  EF4B  F01E         	goto	u3090
  3812  003C94                     u3080:
  3813  003C94  0E00               	movlw	0
  3814  003C96                     u3090:
  3815  003C96  6E0D               	movwf	_tolower$1170^0,c
  3816  003C98  6A0E               	clrf	(_tolower$1170+1)^0,c
  3817  003C9A  500D               	movf	_tolower$1170^0,w,c
  3818  003C9C  100E               	iorwf	(_tolower$1170+1)^0,w,c
  3819  003C9E  B4D8               	btfsc	status,2,c
  3820  003CA0  EF54  F01E         	goto	u3101
  3821  003CA4  EF56  F01E         	goto	u3100
  3822  003CA8                     u3101:
  3823  003CA8  EF5D  F01E         	goto	l1148
  3824  003CAC                     u3100:
  3825  003CAC  0E20               	movlw	32
  3826  003CAE  1007               	iorwf	tolower@c^0,w,c
  3827  003CB0  6E07               	movwf	?_tolower^0,c
  3828  003CB2  5008               	movf	(tolower@c+1)^0,w,c
  3829  003CB4  6E08               	movwf	(?_tolower+1)^0,c
  3830  003CB6  EF61  F01E         	goto	l1153
  3831  003CBA                     l1148:
  3832  003CBA  C007  F007         	movff	tolower@c,?_tolower
  3833  003CBE  C008  F008         	movff	tolower@c+1,?_tolower+1
  3834  003CC2                     l1153:
  3835  003CC2  0012               	return		;funcret
  3836  003CC4                     __end_of_tolower:
  3837                           	opt callstack 0
  3838                           
  3839 ;; *************** function _isupper *****************
  3840 ;; Defined at:
  3841 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  3842 ;; Parameters:    Size  Location     Type
  3843 ;;  c               2    0[COMRAM] int 
  3844 ;; Auto vars:     Size  Location     Type
  3845 ;;		None
  3846 ;; Return value:  Size  Location     Type
  3847 ;;                  2    0[COMRAM] int 
  3848 ;; Registers used:
  3849 ;;		wreg, status,2, status,0
  3850 ;; Tracked objects:
  3851 ;;		On entry : 0/0
  3852 ;;		On exit  : 0/0
  3853 ;;		Unchanged: 0/0
  3854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3855 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3857 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3858 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3859 ;;Total ram usage:        6 bytes
  3860 ;; Hardware stack levels used:    1
  3861 ;; This function calls:
  3862 ;;		Nothing
  3863 ;; This function is called by:
  3864 ;;		_efgtoa
  3865 ;;		_vfpfcnvrt
  3866 ;;		_tolower
  3867 ;; This function uses a non-reentrant model
  3868 ;;
  3869                           
  3870                           	psect	text7
  3871  003F02                     __ptext7:
  3872                           	opt callstack 0
  3873  003F02                     _isupper:
  3874                           	opt callstack 26
  3875  003F02  0EBF               	movlw	191
  3876  003F04  6E03               	movwf	??_isupper^0,c
  3877  003F06  0EFF               	movlw	255
  3878  003F08  6E04               	movwf	(??_isupper+1)^0,c
  3879  003F0A  C001  F005         	movff	isupper@c,??_isupper+2
  3880  003F0E  C002  F006         	movff	isupper@c+1,??_isupper+3
  3881  003F12  5003               	movf	??_isupper^0,w,c
  3882  003F14  2605               	addwf	(??_isupper+2)^0,f,c
  3883  003F16  5004               	movf	(??_isupper+1)^0,w,c
  3884  003F18  2206               	addwfc	(??_isupper+3)^0,f,c
  3885  003F1A  5006               	movf	(??_isupper+3)^0,w,c
  3886  003F1C  E10A               	bnz	u2540
  3887  003F1E  0E1A               	movlw	26
  3888  003F20  5C05               	subwf	(??_isupper+2)^0,w,c
  3889  003F22  A0D8               	btfss	status,0,c
  3890  003F24  EF96  F01F         	goto	u2541
  3891  003F28  EF99  F01F         	goto	u2540
  3892  003F2C                     u2541:
  3893  003F2C  0E01               	movlw	1
  3894  003F2E  EF9A  F01F         	goto	u2550
  3895  003F32                     u2540:
  3896  003F32  0E00               	movlw	0
  3897  003F34                     u2550:
  3898  003F34  6E01               	movwf	?_isupper^0,c
  3899  003F36  6A02               	clrf	(?_isupper+1)^0,c
  3900  003F38  0012               	return		;funcret
  3901  003F3A                     __end_of_isupper:
  3902                           	opt callstack 0
  3903                           
  3904 ;; *************** function _strcpy *****************
  3905 ;; Defined at:
  3906 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  3907 ;; Parameters:    Size  Location     Type
  3908 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3909 ;;		 -> dbuf(80), 
  3910 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3911 ;;		 -> STR_11(4), STR_10(4), STR_7(4), STR_6(4), 
  3912 ;;		 -> dbuf(80), 
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;  d               2    8[COMRAM] PTR unsigned char 
  3915 ;;		 -> dbuf(80), 
  3916 ;;  s               2    6[COMRAM] PTR const unsigned char 
  3917 ;;		 -> STR_11(4), STR_10(4), STR_7(4), STR_6(4), 
  3918 ;;		 -> dbuf(80), 
  3919 ;; Return value:  Size  Location     Type
  3920 ;;                  2    0[COMRAM] PTR unsigned char 
  3921 ;; Registers used:
  3922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3928 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3929 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3930 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3931 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3932 ;;Total ram usage:       10 bytes
  3933 ;; Hardware stack levels used:    1
  3934 ;; This function calls:
  3935 ;;		Nothing
  3936 ;; This function is called by:
  3937 ;;		_efgtoa
  3938 ;; This function uses a non-reentrant model
  3939 ;;
  3940                           
  3941                           	psect	text8
  3942  003CC4                     __ptext8:
  3943                           	opt callstack 0
  3944  003CC4                     _strcpy:
  3945                           	opt callstack 26
  3946  003CC4  C003  F007         	movff	strcpy@src,strcpy@s
  3947  003CC8  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  3948  003CCC  C001  F009         	movff	strcpy@dest,strcpy@d
  3949  003CD0  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  3950  003CD4                     l2918:
  3951  003CD4  5007               	movf	strcpy@s^0,w,c
  3952  003CD6  6E05               	movwf	??_strcpy^0,c
  3953  003CD8  5008               	movf	(strcpy@s+1)^0,w,c
  3954  003CDA  6E06               	movwf	(??_strcpy+1)^0,c
  3955  003CDC  4A07               	infsnz	strcpy@s^0,f,c
  3956  003CDE  2A08               	incf	(strcpy@s+1)^0,f,c
  3957  003CE0  C005  FFF6         	movff	??_strcpy,tblptrl
  3958  003CE4  C006  FFF7         	movff	??_strcpy+1,tblptrh
  3959  003CE8  0E00               	movlw	low (__smallconst shr (0+16))
  3960  003CEA  6EF8               	movwf	tblptru,c
  3961  003CEC  C009  FFD9         	movff	strcpy@d,fsr2l
  3962  003CF0  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  3963  003CF4  4A09               	infsnz	strcpy@d^0,f,c
  3964  003CF6  2A0A               	incf	(strcpy@d+1)^0,f,c
  3965  003CF8  0E0F               	movlw	(high __ramtop+-1)
  3966  003CFA  64F7               	cpfsgt	tblptrh,c
  3967  003CFC  D003               	bra	u3067
  3968  003CFE  0008               	tblrd		*
  3969  003D00  50F5               	movf	tablat,w,c
  3970  003D02  D005               	bra	u3060
  3971  003D04                     u3067:
  3972  003D04  CFF6 FFE1          	movff	tblptrl,fsr1l
  3973  003D08  CFF7 FFE2          	movff	tblptrh,fsr1h
  3974  003D0C  50E7               	movf	indf1,w,c
  3975  003D0E                     u3060:
  3976  003D0E  6EDF               	movwf	indf2,c
  3977  003D10  50DF               	movf	indf2,w,c
  3978  003D12  A4D8               	btfss	status,2,c
  3979  003D14  EF8E  F01E         	goto	u3071
  3980  003D18  EF90  F01E         	goto	u3070
  3981  003D1C                     u3071:
  3982  003D1C  EF6A  F01E         	goto	l2918
  3983  003D20                     u3070:
  3984  003D20  0012               	return		;funcret
  3985  003D22                     __end_of_strcpy:
  3986                           	opt callstack 0
  3987                           
  3988 ;; *************** function _pad *****************
  3989 ;; Defined at:
  3990 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3991 ;; Parameters:    Size  Location     Type
  3992 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3993 ;;		 -> sprintf@f(6), 
  3994 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3995 ;;		 -> dbuf(80), 
  3996 ;;  p               2   20[COMRAM] int 
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;  w               2   25[COMRAM] int 
  3999 ;;  i               2   23[COMRAM] int 
  4000 ;; Return value:  Size  Location     Type
  4001 ;;                  2   16[COMRAM] int 
  4002 ;; Registers used:
  4003 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4004 ;; Tracked objects:
  4005 ;;		On entry : 0/0
  4006 ;;		On exit  : 0/0
  4007 ;;		Unchanged: 0/0
  4008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4009 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4010 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4011 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4012 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4013 ;;Total ram usage:       11 bytes
  4014 ;; Hardware stack levels used:    1
  4015 ;; Hardware stack levels required when called:    3
  4016 ;; This function calls:
  4017 ;;		_fputc
  4018 ;;		_fputs
  4019 ;;		_strlen
  4020 ;; This function is called by:
  4021 ;;		_efgtoa
  4022 ;; This function uses a non-reentrant model
  4023 ;;
  4024                           
  4025                           	psect	text9
  4026  003832                     __ptext9:
  4027                           	opt callstack 0
  4028  003832                     _pad:
  4029                           	opt callstack 23
  4030  003832                     
  4031                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  4032  003832  0100               	movlb	0	; () banked
  4033  003834  A1DD               	btfss	_flags& (0+255),0,b
  4034  003836  EF1F  F01C         	goto	u2951
  4035  00383A  EF21  F01C         	goto	u2950
  4036  00383E                     u2951:
  4037  00383E  EF2B  F01C         	goto	l2876
  4038  003842                     u2950:
  4039  003842                     
  4040                           ; BSR set to: 0
  4041                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  4042  003842  C013  F00A         	movff	pad@buf,fputs@s
  4043  003846  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4044  00384A  C011  F00C         	movff	pad@fp,fputs@fp
  4045  00384E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4046  003852  EC06  F01F         	call	_fputs	;wreg free
  4047  003856                     l2876:
  4048                           
  4049                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  4050  003856  BE16               	btfsc	(pad@p+1)^0,7,c
  4051  003858  EF30  F01C         	goto	u2961
  4052  00385C  EF32  F01C         	goto	u2960
  4053  003860                     u2961:
  4054  003860  EF38  F01C         	goto	l2880
  4055  003864                     u2960:
  4056  003864  C015  F01A         	movff	pad@p,pad@w
  4057  003868  C016  F01B         	movff	pad@p+1,pad@w+1
  4058  00386C  EF3C  F01C         	goto	l216
  4059  003870                     l2880:
  4060  003870  0E00               	movlw	0
  4061  003872  6E1B               	movwf	(pad@w+1)^0,c
  4062  003874  0E00               	movlw	0
  4063  003876  6E1A               	movwf	pad@w^0,c
  4064  003878                     l216:
  4065                           
  4066                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  4067  003878  0E00               	movlw	0
  4068  00387A  6E19               	movwf	(pad@i+1)^0,c
  4069  00387C  0E00               	movlw	0
  4070  00387E  6E18               	movwf	pad@i^0,c
  4071                           
  4072                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4073  003880  EF4E  F01C         	goto	l2886
  4074  003884                     l2882:
  4075                           
  4076                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  4077  003884  0E00               	movlw	0
  4078  003886  6E02               	movwf	(fputc@c+1)^0,c
  4079  003888  0E20               	movlw	32
  4080  00388A  6E01               	movwf	fputc@c^0,c
  4081  00388C  C011  F003         	movff	pad@fp,fputc@fp
  4082  003890  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4083  003894  ECB4  F01B         	call	_fputc	;wreg free
  4084  003898                     
  4085                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  4086  003898  4A18               	infsnz	pad@i^0,f,c
  4087  00389A  2A19               	incf	(pad@i+1)^0,f,c
  4088  00389C                     l2886:
  4089                           
  4090                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4091  00389C  501A               	movf	pad@w^0,w,c
  4092  00389E  5C18               	subwf	pad@i^0,w,c
  4093  0038A0  5019               	movf	(pad@i+1)^0,w,c
  4094  0038A2  0A80               	xorlw	128
  4095  0038A4  6E17               	movwf	??_pad^0,c
  4096  0038A6  501B               	movf	(pad@w+1)^0,w,c
  4097  0038A8  0A80               	xorlw	128
  4098  0038AA  5817               	subwfb	??_pad^0,w,c
  4099  0038AC  A0D8               	btfss	status,0,c
  4100  0038AE  EF5B  F01C         	goto	u2971
  4101  0038B2  EF5D  F01C         	goto	u2970
  4102  0038B6                     u2971:
  4103  0038B6  EF42  F01C         	goto	l2882
  4104  0038BA                     u2970:
  4105  0038BA                     
  4106                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  4107  0038BA  0100               	movlb	0	; () banked
  4108  0038BC  B1DD               	btfsc	_flags& (0+255),0,b
  4109  0038BE  EF63  F01C         	goto	u2981
  4110  0038C2  EF65  F01C         	goto	u2980
  4111  0038C6                     u2981:
  4112  0038C6  EF6F  F01C         	goto	l2890
  4113  0038CA                     u2980:
  4114  0038CA                     
  4115                           ; BSR set to: 0
  4116                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  4117  0038CA  C013  F00A         	movff	pad@buf,fputs@s
  4118  0038CE  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4119  0038D2  C011  F00C         	movff	pad@fp,fputs@fp
  4120  0038D6  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4121  0038DA  EC06  F01F         	call	_fputs	;wreg free
  4122  0038DE                     l2890:
  4123                           
  4124                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  4125  0038DE  C013  F001         	movff	pad@buf,strlen@s
  4126  0038E2  C014  F002         	movff	pad@buf+1,strlen@s+1
  4127  0038E6  ECD5  F01F         	call	_strlen	;wreg free
  4128  0038EA  501A               	movf	pad@w^0,w,c
  4129  0038EC  2401               	addwf	?_strlen^0,w,c
  4130  0038EE  6E11               	movwf	?_pad^0,c
  4131  0038F0  501B               	movf	(pad@w+1)^0,w,c
  4132  0038F2  2002               	addwfc	(?_strlen+1)^0,w,c
  4133  0038F4  6E12               	movwf	(?_pad+1)^0,c
  4134  0038F6  0012               	return		;funcret
  4135  0038F8                     __end_of_pad:
  4136                           	opt callstack 0
  4137                           
  4138 ;; *************** function _strlen *****************
  4139 ;; Defined at:
  4140 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  4141 ;; Parameters:    Size  Location     Type
  4142 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4143 ;;		 -> dbuf(80), 
  4144 ;; Auto vars:     Size  Location     Type
  4145 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4146 ;;		 -> dbuf(80), 
  4147 ;; Return value:  Size  Location     Type
  4148 ;;                  2    0[COMRAM] unsigned int 
  4149 ;; Registers used:
  4150 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4151 ;; Tracked objects:
  4152 ;;		On entry : 0/0
  4153 ;;		On exit  : 0/0
  4154 ;;		Unchanged: 0/0
  4155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4156 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4157 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4159 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4160 ;;Total ram usage:        4 bytes
  4161 ;; Hardware stack levels used:    1
  4162 ;; This function calls:
  4163 ;;		Nothing
  4164 ;; This function is called by:
  4165 ;;		_pad
  4166 ;; This function uses a non-reentrant model
  4167 ;;
  4168                           
  4169                           	psect	text10
  4170  003FAA                     __ptext10:
  4171                           	opt callstack 0
  4172  003FAA                     _strlen:
  4173                           	opt callstack 25
  4174  003FAA  C001  F003         	movff	strlen@s,strlen@a
  4175  003FAE  C002  F004         	movff	strlen@s+1,strlen@a+1
  4176  003FB2  EFDD  F01F         	goto	l2660
  4177  003FB6                     l2658:
  4178  003FB6  4A01               	infsnz	strlen@s^0,f,c
  4179  003FB8  2A02               	incf	(strlen@s+1)^0,f,c
  4180  003FBA                     l2660:
  4181  003FBA  C001  FFD9         	movff	strlen@s,fsr2l
  4182  003FBE  C002  FFDA         	movff	strlen@s+1,fsr2h
  4183  003FC2  50DF               	movf	indf2,w,c
  4184  003FC4  A4D8               	btfss	status,2,c
  4185  003FC6  EFE7  F01F         	goto	u2531
  4186  003FCA  EFE9  F01F         	goto	u2530
  4187  003FCE                     u2531:
  4188  003FCE  EFDB  F01F         	goto	l2658
  4189  003FD2                     u2530:
  4190  003FD2  5003               	movf	strlen@a^0,w,c
  4191  003FD4  5C01               	subwf	strlen@s^0,w,c
  4192  003FD6  6E01               	movwf	?_strlen^0,c
  4193  003FD8  5004               	movf	(strlen@a+1)^0,w,c
  4194  003FDA  5802               	subwfb	(strlen@s+1)^0,w,c
  4195  003FDC  6E02               	movwf	(?_strlen+1)^0,c
  4196  003FDE  0012               	return		;funcret
  4197  003FE0                     __end_of_strlen:
  4198                           	opt callstack 0
  4199                           
  4200 ;; *************** function _fputs *****************
  4201 ;; Defined at:
  4202 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  4203 ;; Parameters:    Size  Location     Type
  4204 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4205 ;;		 -> dbuf(80), 
  4206 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4207 ;;		 -> sprintf@f(6), 
  4208 ;; Auto vars:     Size  Location     Type
  4209 ;;  i               2   14[COMRAM] int 
  4210 ;;  c               1   13[COMRAM] unsigned char 
  4211 ;; Return value:  Size  Location     Type
  4212 ;;                  2    9[COMRAM] int 
  4213 ;; Registers used:
  4214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4215 ;; Tracked objects:
  4216 ;;		On entry : 0/0
  4217 ;;		On exit  : 0/0
  4218 ;;		Unchanged: 0/0
  4219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4220 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4221 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4223 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4224 ;;Total ram usage:        7 bytes
  4225 ;; Hardware stack levels used:    1
  4226 ;; Hardware stack levels required when called:    2
  4227 ;; This function calls:
  4228 ;;		_fputc
  4229 ;; This function is called by:
  4230 ;;		_pad
  4231 ;; This function uses a non-reentrant model
  4232 ;;
  4233                           
  4234                           	psect	text11
  4235  003E0C                     __ptext11:
  4236                           	opt callstack 0
  4237  003E0C                     _fputs:
  4238                           	opt callstack 23
  4239  003E0C  0E00               	movlw	0
  4240  003E0E  6E10               	movwf	(fputs@i+1)^0,c
  4241  003E10  0E00               	movlw	0
  4242  003E12  6E0F               	movwf	fputs@i^0,c
  4243  003E14  EF17  F01F         	goto	l2654
  4244  003E18                     l2650:
  4245  003E18  C00E  F001         	movff	fputs@c,fputc@c
  4246  003E1C  6A02               	clrf	(fputc@c+1)^0,c
  4247  003E1E  C00C  F003         	movff	fputs@fp,fputc@fp
  4248  003E22  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4249  003E26  ECB4  F01B         	call	_fputc	;wreg free
  4250  003E2A  4A0F               	infsnz	fputs@i^0,f,c
  4251  003E2C  2A10               	incf	(fputs@i+1)^0,f,c
  4252  003E2E                     l2654:
  4253  003E2E  500F               	movf	fputs@i^0,w,c
  4254  003E30  240A               	addwf	fputs@s^0,w,c
  4255  003E32  6ED9               	movwf	fsr2l,c
  4256  003E34  5010               	movf	(fputs@i+1)^0,w,c
  4257  003E36  200B               	addwfc	(fputs@s+1)^0,w,c
  4258  003E38  6EDA               	movwf	fsr2h,c
  4259  003E3A  50DF               	movf	indf2,w,c
  4260  003E3C  6E0E               	movwf	fputs@c^0,c
  4261  003E3E  500E               	movf	fputs@c^0,w,c
  4262  003E40  A4D8               	btfss	status,2,c
  4263  003E42  EF25  F01F         	goto	u2521
  4264  003E46  EF27  F01F         	goto	u2520
  4265  003E4A                     u2521:
  4266  003E4A  EF0C  F01F         	goto	l2650
  4267  003E4E                     u2520:
  4268  003E4E  0012               	return		;funcret
  4269  003E50                     __end_of_fputs:
  4270                           	opt callstack 0
  4271                           
  4272 ;; *************** function _fputc *****************
  4273 ;; Defined at:
  4274 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;  c               2    0[COMRAM] int 
  4277 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4278 ;;		 -> sprintf@f(6), 
  4279 ;; Auto vars:     Size  Location     Type
  4280 ;;		None
  4281 ;; Return value:  Size  Location     Type
  4282 ;;                  2    0[COMRAM] int 
  4283 ;; Registers used:
  4284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4285 ;; Tracked objects:
  4286 ;;		On entry : 0/0
  4287 ;;		On exit  : 0/0
  4288 ;;		Unchanged: 0/0
  4289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4290 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4292 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4293 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4294 ;;Total ram usage:        9 bytes
  4295 ;; Hardware stack levels used:    1
  4296 ;; Hardware stack levels required when called:    1
  4297 ;; This function calls:
  4298 ;;		_putch
  4299 ;; This function is called by:
  4300 ;;		_pad
  4301 ;;		_vfpfcnvrt
  4302 ;;		_fputs
  4303 ;; This function uses a non-reentrant model
  4304 ;;
  4305                           
  4306                           	psect	text12
  4307  003768                     __ptext12:
  4308                           	opt callstack 0
  4309  003768                     _fputc:
  4310                           	opt callstack 26
  4311  003768  5003               	movf	fputc@fp^0,w,c
  4312  00376A  1004               	iorwf	(fputc@fp+1)^0,w,c
  4313  00376C  B4D8               	btfsc	status,2,c
  4314  00376E  EFBB  F01B         	goto	u2481
  4315  003772  EFBD  F01B         	goto	u2480
  4316  003776                     u2481:
  4317  003776  EFC6  F01B         	goto	l2638
  4318  00377A                     u2480:
  4319  00377A  5003               	movf	fputc@fp^0,w,c
  4320  00377C  1004               	iorwf	(fputc@fp+1)^0,w,c
  4321  00377E  A4D8               	btfss	status,2,c
  4322  003780  EFC4  F01B         	goto	u2491
  4323  003784  EFC6  F01B         	goto	u2490
  4324  003788                     u2491:
  4325  003788  EFCB  F01B         	goto	l2640
  4326  00378C                     u2490:
  4327  00378C                     l2638:
  4328  00378C  5001               	movf	fputc@c^0,w,c
  4329  00378E  EC7B  F020         	call	_putch
  4330  003792  EF18  F01C         	goto	l1104
  4331  003796                     l2640:
  4332  003796  EE20 F004          	lfsr	2,4
  4333  00379A  5003               	movf	fputc@fp^0,w,c
  4334  00379C  26D9               	addwf	fsr2l,f,c
  4335  00379E  5004               	movf	(fputc@fp+1)^0,w,c
  4336  0037A0  22DA               	addwfc	fsr2h,f,c
  4337  0037A2  50DE               	movf	postinc2,w,c
  4338  0037A4  10DE               	iorwf	postinc2,w,c
  4339  0037A6  B4D8               	btfsc	status,2,c
  4340  0037A8  EFD8  F01B         	goto	u2501
  4341  0037AC  EFDA  F01B         	goto	u2500
  4342  0037B0                     u2501:
  4343  0037B0  EFF5  F01B         	goto	l2644
  4344  0037B4                     u2500:
  4345  0037B4  EE20 F004          	lfsr	2,4
  4346  0037B8  5003               	movf	fputc@fp^0,w,c
  4347  0037BA  26D9               	addwf	fsr2l,f,c
  4348  0037BC  5004               	movf	(fputc@fp+1)^0,w,c
  4349  0037BE  22DA               	addwfc	fsr2h,f,c
  4350  0037C0  EE10 F002          	lfsr	1,2
  4351  0037C4  5003               	movf	fputc@fp^0,w,c
  4352  0037C6  26E1               	addwf	fsr1l,f,c
  4353  0037C8  5004               	movf	(fputc@fp+1)^0,w,c
  4354  0037CA  22E2               	addwfc	fsr1h,f,c
  4355  0037CC  50DE               	movf	postinc2,w,c
  4356  0037CE  5CE6               	subwf	postinc1,w,c
  4357  0037D0  50E6               	movf	postinc1,w,c
  4358  0037D2  0A80               	xorlw	128
  4359  0037D4  6E09               	movwf	(??_fputc+4)^0,c
  4360  0037D6  50DE               	movf	postinc2,w,c
  4361  0037D8  0A80               	xorlw	128
  4362  0037DA  5809               	subwfb	(??_fputc+4)^0,w,c
  4363  0037DC  B0D8               	btfsc	status,0,c
  4364  0037DE  EFF3  F01B         	goto	u2511
  4365  0037E2  EFF5  F01B         	goto	u2510
  4366  0037E6                     u2511:
  4367  0037E6  EF18  F01C         	goto	l1104
  4368  0037EA                     u2510:
  4369  0037EA                     l2644:
  4370  0037EA  EE20 F002          	lfsr	2,2
  4371  0037EE  5003               	movf	fputc@fp^0,w,c
  4372  0037F0  26D9               	addwf	fsr2l,f,c
  4373  0037F2  5004               	movf	(fputc@fp+1)^0,w,c
  4374  0037F4  22DA               	addwfc	fsr2h,f,c
  4375  0037F6  CFDE F005          	movff	postinc2,??_fputc
  4376  0037FA  CFDD F006          	movff	postdec2,??_fputc+1
  4377  0037FE  C003  FFD9         	movff	fputc@fp,fsr2l
  4378  003802  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4379  003806  CFDE F007          	movff	postinc2,??_fputc+2
  4380  00380A  CFDD F008          	movff	postdec2,??_fputc+3
  4381  00380E  5005               	movf	??_fputc^0,w,c
  4382  003810  2407               	addwf	(??_fputc+2)^0,w,c
  4383  003812  6ED9               	movwf	fsr2l,c
  4384  003814  5006               	movf	(??_fputc+1)^0,w,c
  4385  003816  2008               	addwfc	(??_fputc+3)^0,w,c
  4386  003818  6EDA               	movwf	fsr2h,c
  4387  00381A  C001  FFDF         	movff	fputc@c,indf2
  4388  00381E  EE20 F002          	lfsr	2,2
  4389  003822  5003               	movf	fputc@fp^0,w,c
  4390  003824  26D9               	addwf	fsr2l,f,c
  4391  003826  5004               	movf	(fputc@fp+1)^0,w,c
  4392  003828  22DA               	addwfc	fsr2h,f,c
  4393  00382A  2ADE               	incf	postinc2,f,c
  4394  00382C  0E00               	movlw	0
  4395  00382E  22DD               	addwfc	postdec2,f,c
  4396  003830                     l1104:
  4397  003830  0012               	return		;funcret
  4398  003832                     __end_of_fputc:
  4399                           	opt callstack 0
  4400                           
  4401 ;; *************** function _putch *****************
  4402 ;; Defined at:
  4403 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  4404 ;; Parameters:    Size  Location     Type
  4405 ;;  c               1    wreg     unsigned char 
  4406 ;; Auto vars:     Size  Location     Type
  4407 ;;  c               1    0[COMRAM] unsigned char 
  4408 ;; Return value:  Size  Location     Type
  4409 ;;                  1    wreg      void 
  4410 ;; Registers used:
  4411 ;;		wreg
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4421 ;;Total ram usage:        0 bytes
  4422 ;; Hardware stack levels used:    1
  4423 ;; This function calls:
  4424 ;;		Nothing
  4425 ;; This function is called by:
  4426 ;;		_fputc
  4427 ;; This function uses a non-reentrant model
  4428 ;;
  4429                           
  4430                           	psect	text13
  4431  0040F6                     __ptext13:
  4432                           	opt callstack 0
  4433  0040F6                     _putch:
  4434                           	opt callstack 26
  4435  0040F6  0012               	return		;funcret
  4436  0040F8                     __end_of_putch:
  4437                           	opt callstack 0
  4438                           
  4439 ;; *************** function _floorf *****************
  4440 ;; Defined at:
  4441 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
  4442 ;; Parameters:    Size  Location     Type
  4443 ;;  x               4   64[COMRAM] float 
  4444 ;; Auto vars:     Size  Location     Type
  4445 ;;  u               4   80[COMRAM] struct .
  4446 ;;  m               4   74[COMRAM] unsigned long 
  4447 ;;  e               2   78[COMRAM] int 
  4448 ;; Return value:  Size  Location     Type
  4449 ;;                  4   64[COMRAM] float 
  4450 ;; Registers used:
  4451 ;;		wreg, status,2, status,0
  4452 ;; Tracked objects:
  4453 ;;		On entry : 0/0
  4454 ;;		On exit  : 0/0
  4455 ;;		Unchanged: 0/0
  4456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4457 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4458 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4459 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4460 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4461 ;;Total ram usage:       20 bytes
  4462 ;; Hardware stack levels used:    1
  4463 ;; This function calls:
  4464 ;;		Nothing
  4465 ;; This function is called by:
  4466 ;;		_efgtoa
  4467 ;; This function uses a non-reentrant model
  4468 ;;
  4469                           
  4470                           	psect	text14
  4471  002CEA                     __ptext14:
  4472                           	opt callstack 0
  4473  002CEA                     _floorf:
  4474                           	opt callstack 26
  4475  002CEA  C0CB  F051         	movff	floorf@F524,floorf@u
  4476  002CEE  C0CC  F052         	movff	floorf@F524+1,floorf@u+1
  4477  002CF2  C0CD  F053         	movff	floorf@F524+2,floorf@u+2
  4478  002CF6  C0CE  F054         	movff	floorf@F524+3,floorf@u+3
  4479  002CFA  C041  F051         	movff	floorf@x,floorf@u
  4480  002CFE  C042  F052         	movff	floorf@x+1,floorf@u+1
  4481  002D02  C043  F053         	movff	floorf@x+2,floorf@u+2
  4482  002D06  C044  F054         	movff	floorf@x+3,floorf@u+3
  4483  002D0A  0E81               	movlw	129
  4484  002D0C  6E45               	movwf	??_floorf^0,c
  4485  002D0E  0EFF               	movlw	255
  4486  002D10  6E46               	movwf	(??_floorf+1)^0,c
  4487  002D12  C051  F047         	movff	floorf@u,??_floorf+2
  4488  002D16  C052  F048         	movff	floorf@u+1,??_floorf+3
  4489  002D1A  C053  F049         	movff	floorf@u+2,??_floorf+4
  4490  002D1E  C054  F04A         	movff	floorf@u+3,??_floorf+5
  4491  002D22  0E18               	movlw	24
  4492  002D24  EF99  F016         	goto	u3110
  4493  002D28                     u3115:
  4494  002D28  90D8               	bcf	status,0,c
  4495  002D2A  324A               	rrcf	(??_floorf+5)^0,f,c
  4496  002D2C  3249               	rrcf	(??_floorf+4)^0,f,c
  4497  002D2E  3248               	rrcf	(??_floorf+3)^0,f,c
  4498  002D30  3247               	rrcf	(??_floorf+2)^0,f,c
  4499  002D32                     u3110:
  4500  002D32  2EE8               	decfsz	wreg,f,c
  4501  002D34  EF94  F016         	goto	u3115
  4502  002D38  5047               	movf	(??_floorf+2)^0,w,c
  4503  002D3A  2445               	addwf	??_floorf^0,w,c
  4504  002D3C  6E4F               	movwf	floorf@e^0,c
  4505  002D3E  0E00               	movlw	0
  4506  002D40  2046               	addwfc	(??_floorf+1)^0,w,c
  4507  002D42  6E50               	movwf	(floorf@e+1)^0,c
  4508  002D44  BE50               	btfsc	(floorf@e+1)^0,7,c
  4509  002D46  EFAE  F016         	goto	u3121
  4510  002D4A  5050               	movf	(floorf@e+1)^0,w,c
  4511  002D4C  E109               	bnz	u3120
  4512  002D4E  0E17               	movlw	23
  4513  002D50  5C4F               	subwf	floorf@e^0,w,c
  4514  002D52  A0D8               	btfss	status,0,c
  4515  002D54  EFAE  F016         	goto	u3121
  4516  002D58  EFB0  F016         	goto	u3120
  4517  002D5C                     u3121:
  4518  002D5C  EFBA  F016         	goto	l2936
  4519  002D60                     u3120:
  4520  002D60                     l2934:
  4521  002D60  C041  F041         	movff	floorf@x,?_floorf
  4522  002D64  C042  F042         	movff	floorf@x+1,?_floorf+1
  4523  002D68  C043  F043         	movff	floorf@x+2,?_floorf+2
  4524  002D6C  C044  F044         	movff	floorf@x+3,?_floorf+3
  4525  002D70  EF7D  F017         	goto	l1065
  4526  002D74                     l2936:
  4527  002D74  BE50               	btfsc	(floorf@e+1)^0,7,c
  4528  002D76  EFBF  F016         	goto	u3131
  4529  002D7A  EFC1  F016         	goto	u3130
  4530  002D7E                     u3131:
  4531  002D7E  EF31  F017         	goto	l2946
  4532  002D82                     u3130:
  4533  002D82  C04F  F045         	movff	floorf@e,??_floorf
  4534  002D86  0EFF               	movlw	255
  4535  002D88  6E46               	movwf	(??_floorf+1)^0,c
  4536  002D8A  0EFF               	movlw	255
  4537  002D8C  6E47               	movwf	(??_floorf+2)^0,c
  4538  002D8E  0E7F               	movlw	127
  4539  002D90  6E48               	movwf	(??_floorf+3)^0,c
  4540  002D92  0E00               	movlw	0
  4541  002D94  6E49               	movwf	(??_floorf+4)^0,c
  4542  002D96                     u3145:
  4543  002D96  6645               	tstfsz	??_floorf^0,c
  4544  002D98  EFD0  F016         	goto	u3146
  4545  002D9C  EFD8  F016         	goto	u3147
  4546  002DA0                     u3146:
  4547  002DA0  3449               	rlcf	(??_floorf+4)^0,w,c
  4548  002DA2  3249               	rrcf	(??_floorf+4)^0,f,c
  4549  002DA4  3248               	rrcf	(??_floorf+3)^0,f,c
  4550  002DA6  3247               	rrcf	(??_floorf+2)^0,f,c
  4551  002DA8  3246               	rrcf	(??_floorf+1)^0,f,c
  4552  002DAA  2E45               	decfsz	??_floorf^0,f,c
  4553  002DAC  EFCB  F016         	goto	u3145
  4554  002DB0                     u3147:
  4555  002DB0  C046  F04B         	movff	??_floorf+1,floorf@m
  4556  002DB4  C047  F04C         	movff	??_floorf+2,floorf@m+1
  4557  002DB8  C048  F04D         	movff	??_floorf+3,floorf@m+2
  4558  002DBC  C049  F04E         	movff	??_floorf+4,floorf@m+3
  4559  002DC0  504B               	movf	floorf@m^0,w,c
  4560  002DC2  1451               	andwf	floorf@u^0,w,c
  4561  002DC4  6E45               	movwf	??_floorf^0,c
  4562  002DC6  504C               	movf	(floorf@m+1)^0,w,c
  4563  002DC8  1452               	andwf	(floorf@u+1)^0,w,c
  4564  002DCA  6E46               	movwf	(??_floorf+1)^0,c
  4565  002DCC  504D               	movf	(floorf@m+2)^0,w,c
  4566  002DCE  1453               	andwf	(floorf@u+2)^0,w,c
  4567  002DD0  6E47               	movwf	(??_floorf+2)^0,c
  4568  002DD2  504E               	movf	(floorf@m+3)^0,w,c
  4569  002DD4  1454               	andwf	(floorf@u+3)^0,w,c
  4570  002DD6  6E48               	movwf	(??_floorf+3)^0,c
  4571  002DD8  5045               	movf	??_floorf^0,w,c
  4572  002DDA  1046               	iorwf	(??_floorf+1)^0,w,c
  4573  002DDC  1047               	iorwf	(??_floorf+2)^0,w,c
  4574  002DDE  1048               	iorwf	(??_floorf+3)^0,w,c
  4575  002DE0  A4D8               	btfss	status,2,c
  4576  002DE2  EFF5  F016         	goto	u3151
  4577  002DE6  EFF7  F016         	goto	u3150
  4578  002DEA                     u3151:
  4579  002DEA  EFF9  F016         	goto	l2942
  4580  002DEE                     u3150:
  4581  002DEE  EFB0  F016         	goto	l2934
  4582  002DF2                     l2942:
  4583  002DF2  C051  F045         	movff	floorf@u,??_floorf
  4584  002DF6  C052  F046         	movff	floorf@u+1,??_floorf+1
  4585  002DFA  C053  F047         	movff	floorf@u+2,??_floorf+2
  4586  002DFE  C054  F048         	movff	floorf@u+3,??_floorf+3
  4587  002E02  0E20               	movlw	32
  4588  002E04  EF09  F017         	goto	u3160
  4589  002E08                     u3165:
  4590  002E08  90D8               	bcf	status,0,c
  4591  002E0A  3248               	rrcf	(??_floorf+3)^0,f,c
  4592  002E0C  3247               	rrcf	(??_floorf+2)^0,f,c
  4593  002E0E  3246               	rrcf	(??_floorf+1)^0,f,c
  4594  002E10  3245               	rrcf	??_floorf^0,f,c
  4595  002E12                     u3160:
  4596  002E12  2EE8               	decfsz	wreg,f,c
  4597  002E14  EF04  F017         	goto	u3165
  4598  002E18  5045               	movf	??_floorf^0,w,c
  4599  002E1A  1046               	iorwf	(??_floorf+1)^0,w,c
  4600  002E1C  1047               	iorwf	(??_floorf+2)^0,w,c
  4601  002E1E  1048               	iorwf	(??_floorf+3)^0,w,c
  4602  002E20  B4D8               	btfsc	status,2,c
  4603  002E22  EF15  F017         	goto	u3171
  4604  002E26  EF17  F017         	goto	u3170
  4605  002E2A                     u3171:
  4606  002E2A  EF1F  F017         	goto	l1068
  4607  002E2E                     u3170:
  4608  002E2E  504B               	movf	floorf@m^0,w,c
  4609  002E30  2651               	addwf	floorf@u^0,f,c
  4610  002E32  504C               	movf	(floorf@m+1)^0,w,c
  4611  002E34  2252               	addwfc	(floorf@u+1)^0,f,c
  4612  002E36  504D               	movf	(floorf@m+2)^0,w,c
  4613  002E38  2253               	addwfc	(floorf@u+2)^0,f,c
  4614  002E3A  504E               	movf	(floorf@m+3)^0,w,c
  4615  002E3C  2254               	addwfc	(floorf@u+3)^0,f,c
  4616  002E3E                     l1068:
  4617  002E3E  1C4B               	comf	floorf@m^0,w,c
  4618  002E40  6E45               	movwf	??_floorf^0,c
  4619  002E42  1C4C               	comf	(floorf@m+1)^0,w,c
  4620  002E44  6E46               	movwf	(??_floorf+1)^0,c
  4621  002E46  1C4D               	comf	(floorf@m+2)^0,w,c
  4622  002E48  6E47               	movwf	(??_floorf+2)^0,c
  4623  002E4A  1C4E               	comf	(floorf@m+3)^0,w,c
  4624  002E4C  6E48               	movwf	(??_floorf+3)^0,c
  4625  002E4E  5045               	movf	??_floorf^0,w,c
  4626  002E50  1651               	andwf	floorf@u^0,f,c
  4627  002E52  5046               	movf	(??_floorf+1)^0,w,c
  4628  002E54  1652               	andwf	(floorf@u+1)^0,f,c
  4629  002E56  5047               	movf	(??_floorf+2)^0,w,c
  4630  002E58  1653               	andwf	(floorf@u+2)^0,f,c
  4631  002E5A  5048               	movf	(??_floorf+3)^0,w,c
  4632  002E5C  1654               	andwf	(floorf@u+3)^0,f,c
  4633  002E5E  EF75  F017         	goto	l2954
  4634  002E62                     l2946:
  4635  002E62  C051  F045         	movff	floorf@u,??_floorf
  4636  002E66  C052  F046         	movff	floorf@u+1,??_floorf+1
  4637  002E6A  C053  F047         	movff	floorf@u+2,??_floorf+2
  4638  002E6E  C054  F048         	movff	floorf@u+3,??_floorf+3
  4639  002E72  0E20               	movlw	32
  4640  002E74  EF41  F017         	goto	u3180
  4641  002E78                     u3185:
  4642  002E78  90D8               	bcf	status,0,c
  4643  002E7A  3248               	rrcf	(??_floorf+3)^0,f,c
  4644  002E7C  3247               	rrcf	(??_floorf+2)^0,f,c
  4645  002E7E  3246               	rrcf	(??_floorf+1)^0,f,c
  4646  002E80  3245               	rrcf	??_floorf^0,f,c
  4647  002E82                     u3180:
  4648  002E82  2EE8               	decfsz	wreg,f,c
  4649  002E84  EF3C  F017         	goto	u3185
  4650  002E88  5045               	movf	??_floorf^0,w,c
  4651  002E8A  1046               	iorwf	(??_floorf+1)^0,w,c
  4652  002E8C  1047               	iorwf	(??_floorf+2)^0,w,c
  4653  002E8E  1048               	iorwf	(??_floorf+3)^0,w,c
  4654  002E90  A4D8               	btfss	status,2,c
  4655  002E92  EF4D  F017         	goto	u3191
  4656  002E96  EF4F  F017         	goto	u3190
  4657  002E9A                     u3191:
  4658  002E9A  EF59  F017         	goto	l2950
  4659  002E9E                     u3190:
  4660  002E9E  0E00               	movlw	0
  4661  002EA0  6E51               	movwf	floorf@u^0,c
  4662  002EA2  0E00               	movlw	0
  4663  002EA4  6E52               	movwf	(floorf@u+1)^0,c
  4664  002EA6  0E00               	movlw	0
  4665  002EA8  6E53               	movwf	(floorf@u+2)^0,c
  4666  002EAA  0E00               	movlw	0
  4667  002EAC  6E54               	movwf	(floorf@u+3)^0,c
  4668  002EAE  EF75  F017         	goto	l2954
  4669  002EB2                     l2950:
  4670  002EB2  90D8               	bcf	status,0,c
  4671  002EB4  3451               	rlcf	floorf@u^0,w,c
  4672  002EB6  6E45               	movwf	??_floorf^0,c
  4673  002EB8  3452               	rlcf	(floorf@u+1)^0,w,c
  4674  002EBA  6E46               	movwf	(??_floorf+1)^0,c
  4675  002EBC  3453               	rlcf	(floorf@u+2)^0,w,c
  4676  002EBE  6E47               	movwf	(??_floorf+2)^0,c
  4677  002EC0  3454               	rlcf	(floorf@u+3)^0,w,c
  4678  002EC2  6E48               	movwf	(??_floorf+3)^0,c
  4679  002EC4  5045               	movf	??_floorf^0,w,c
  4680  002EC6  1046               	iorwf	(??_floorf+1)^0,w,c
  4681  002EC8  1047               	iorwf	(??_floorf+2)^0,w,c
  4682  002ECA  1048               	iorwf	(??_floorf+3)^0,w,c
  4683  002ECC  B4D8               	btfsc	status,2,c
  4684  002ECE  EF6B  F017         	goto	u3201
  4685  002ED2  EF6D  F017         	goto	u3200
  4686  002ED6                     u3201:
  4687  002ED6  EF75  F017         	goto	l2954
  4688  002EDA                     u3200:
  4689  002EDA  0E00               	movlw	0
  4690  002EDC  6E51               	movwf	floorf@u^0,c
  4691  002EDE  0E00               	movlw	0
  4692  002EE0  6E52               	movwf	(floorf@u+1)^0,c
  4693  002EE2  0E80               	movlw	128
  4694  002EE4  6E53               	movwf	(floorf@u+2)^0,c
  4695  002EE6  0EBF               	movlw	191
  4696  002EE8  6E54               	movwf	(floorf@u+3)^0,c
  4697  002EEA                     l2954:
  4698  002EEA  C051  F041         	movff	floorf@u,?_floorf
  4699  002EEE  C052  F042         	movff	floorf@u+1,?_floorf+1
  4700  002EF2  C053  F043         	movff	floorf@u+2,?_floorf+2
  4701  002EF6  C054  F044         	movff	floorf@u+3,?_floorf+3
  4702  002EFA                     l1065:
  4703  002EFA  0012               	return		;funcret
  4704  002EFC                     __end_of_floorf:
  4705                           	opt callstack 0
  4706                           
  4707 ;; *************** function ___fpclassifyf *****************
  4708 ;; Defined at:
  4709 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
  4710 ;; Parameters:    Size  Location     Type
  4711 ;;  x               4    0[COMRAM] float 
  4712 ;; Auto vars:     Size  Location     Type
  4713 ;;  u               4   10[COMRAM] struct .
  4714 ;;  e               2    8[COMRAM] int 
  4715 ;; Return value:  Size  Location     Type
  4716 ;;                  2    0[COMRAM] int 
  4717 ;; Registers used:
  4718 ;;		wreg, status,2, status,0
  4719 ;; Tracked objects:
  4720 ;;		On entry : 0/0
  4721 ;;		On exit  : 0/0
  4722 ;;		Unchanged: 0/0
  4723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4724 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4725 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4726 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4727 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4728 ;;Total ram usage:       14 bytes
  4729 ;; Hardware stack levels used:    1
  4730 ;; This function calls:
  4731 ;;		Nothing
  4732 ;; This function is called by:
  4733 ;;		_efgtoa
  4734 ;; This function uses a non-reentrant model
  4735 ;;
  4736                           
  4737                           	psect	text15
  4738  003594                     __ptext15:
  4739                           	opt callstack 0
  4740  003594                     ___fpclassifyf:
  4741                           	opt callstack 26
  4742  003594  C0CF  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  4743  003598  C0D0  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  4744  00359C  C0D1  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  4745  0035A0  C0D2  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  4746  0035A4  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4747  0035A8  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4748  0035AC  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4749  0035B0  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4750  0035B4  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4751  0035B8  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4752  0035BC  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4753  0035C0  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4754  0035C4  0E18               	movlw	24
  4755  0035C6  EFEA  F01A         	goto	u2990
  4756  0035CA                     u2995:
  4757  0035CA  90D8               	bcf	status,0,c
  4758  0035CC  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4759  0035CE  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4760  0035D0  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4761  0035D2  3205               	rrcf	??___fpclassifyf^0,f,c
  4762  0035D4                     u2990:
  4763  0035D4  2EE8               	decfsz	wreg,f,c
  4764  0035D6  EFE5  F01A         	goto	u2995
  4765  0035DA  5005               	movf	??___fpclassifyf^0,w,c
  4766  0035DC  6E09               	movwf	___fpclassifyf@e^0,c
  4767  0035DE  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4768  0035E0  5009               	movf	___fpclassifyf@e^0,w,c
  4769  0035E2  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4770  0035E4  A4D8               	btfss	status,2,c
  4771  0035E6  EFF7  F01A         	goto	u3001
  4772  0035EA  EFF9  F01A         	goto	u3000
  4773  0035EE                     u3001:
  4774  0035EE  EF19  F01B         	goto	l2906
  4775  0035F2                     u3000:
  4776  0035F2  90D8               	bcf	status,0,c
  4777  0035F4  340B               	rlcf	___fpclassifyf@u^0,w,c
  4778  0035F6  6E05               	movwf	??___fpclassifyf^0,c
  4779  0035F8  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4780  0035FA  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4781  0035FC  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4782  0035FE  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4783  003600  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4784  003602  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4785  003604  5005               	movf	??___fpclassifyf^0,w,c
  4786  003606  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4787  003608  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4788  00360A  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4789  00360C  A4D8               	btfss	status,2,c
  4790  00360E  EF0B  F01B         	goto	u3011
  4791  003612  EF0D  F01B         	goto	u3010
  4792  003616                     u3011:
  4793  003616  EF13  F01B         	goto	l2902
  4794  00361A                     u3010:
  4795  00361A  0E00               	movlw	0
  4796  00361C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4797  00361E  0E02               	movlw	2
  4798  003620  6E01               	movwf	?___fpclassifyf^0,c
  4799  003622  EF48  F01B         	goto	l1027
  4800  003626                     l2902:
  4801  003626  0E00               	movlw	0
  4802  003628  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4803  00362A  0E03               	movlw	3
  4804  00362C  6E01               	movwf	?___fpclassifyf^0,c
  4805  00362E  EF48  F01B         	goto	l1027
  4806  003632                     l2906:
  4807  003632  2809               	incf	___fpclassifyf@e^0,w,c
  4808  003634  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4809  003636  A4D8               	btfss	status,2,c
  4810  003638  EF20  F01B         	goto	u3021
  4811  00363C  EF22  F01B         	goto	u3020
  4812  003640                     u3021:
  4813  003640  EF44  F01B         	goto	l2912
  4814  003644                     u3020:
  4815  003644  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4816  003648  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4817  00364C  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4818  003650  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4819  003654  0E09               	movlw	9
  4820  003656                     u3035:
  4821  003656  90D8               	bcf	status,0,c
  4822  003658  3605               	rlcf	??___fpclassifyf^0,f,c
  4823  00365A  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4824  00365C  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4825  00365E  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4826  003660  2EE8               	decfsz	wreg,f,c
  4827  003662  EF2B  F01B         	goto	u3035
  4828  003666  5005               	movf	??___fpclassifyf^0,w,c
  4829  003668  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4830  00366A  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4831  00366C  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4832  00366E  B4D8               	btfsc	status,2,c
  4833  003670  EF3C  F01B         	goto	u3041
  4834  003674  EF3F  F01B         	goto	u3040
  4835  003678                     u3041:
  4836  003678  0E01               	movlw	1
  4837  00367A  EF40  F01B         	goto	u3050
  4838  00367E                     u3040:
  4839  00367E  0E00               	movlw	0
  4840  003680                     u3050:
  4841  003680  6E01               	movwf	?___fpclassifyf^0,c
  4842  003682  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4843  003684  EF48  F01B         	goto	l1027
  4844  003688                     l2912:
  4845  003688  0E00               	movlw	0
  4846  00368A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4847  00368C  0E04               	movlw	4
  4848  00368E  6E01               	movwf	?___fpclassifyf^0,c
  4849  003690                     l1027:
  4850  003690  0012               	return		;funcret
  4851  003692                     __end_of___fpclassifyf:
  4852                           	opt callstack 0
  4853                           
  4854 ;; *************** function ___fltol *****************
  4855 ;; Defined at:
  4856 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  4857 ;; Parameters:    Size  Location     Type
  4858 ;;  f1              4    0[COMRAM] int 
  4859 ;; Auto vars:     Size  Location     Type
  4860 ;;  exp1            1    9[COMRAM] unsigned char 
  4861 ;;  sign1           1    8[COMRAM] unsigned char 
  4862 ;; Return value:  Size  Location     Type
  4863 ;;                  4    0[COMRAM] long 
  4864 ;; Registers used:
  4865 ;;		wreg, status,2, status,0
  4866 ;; Tracked objects:
  4867 ;;		On entry : 0/0
  4868 ;;		On exit  : 0/0
  4869 ;;		Unchanged: 0/0
  4870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4871 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4872 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4873 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4874 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4875 ;;Total ram usage:       10 bytes
  4876 ;; Hardware stack levels used:    1
  4877 ;; This function calls:
  4878 ;;		Nothing
  4879 ;; This function is called by:
  4880 ;;		_efgtoa
  4881 ;; This function uses a non-reentrant model
  4882 ;;
  4883                           
  4884                           	psect	text16
  4885  00338A                     __ptext16:
  4886                           	opt callstack 0
  4887  00338A                     ___fltol:
  4888                           	opt callstack 26
  4889  00338A  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4890  00338C  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4891  00338E  6E0A               	movwf	___fltol@exp1^0,c
  4892  003390  500A               	movf	___fltol@exp1^0,w,c
  4893  003392  A4D8               	btfss	status,2,c
  4894  003394  EFCE  F019         	goto	u3861
  4895  003398  EFD0  F019         	goto	u3860
  4896  00339C                     u3861:
  4897  00339C  EFDA  F019         	goto	l3374
  4898  0033A0                     u3860:
  4899  0033A0                     l3370:
  4900  0033A0  0E00               	movlw	0
  4901  0033A2  6E01               	movwf	?___fltol^0,c
  4902  0033A4  0E00               	movlw	0
  4903  0033A6  6E02               	movwf	(?___fltol+1)^0,c
  4904  0033A8  0E00               	movlw	0
  4905  0033AA  6E03               	movwf	(?___fltol+2)^0,c
  4906  0033AC  0E00               	movlw	0
  4907  0033AE  6E04               	movwf	(?___fltol+3)^0,c
  4908  0033B0  EF47  F01A         	goto	l643
  4909  0033B4                     l3374:
  4910  0033B4  C001  F005         	movff	___fltol@f1,??___fltol
  4911  0033B8  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4912  0033BC  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4913  0033C0  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4914  0033C4  0E20               	movlw	32
  4915  0033C6  EFEA  F019         	goto	u3870
  4916  0033CA                     u3875:
  4917  0033CA  90D8               	bcf	status,0,c
  4918  0033CC  3208               	rrcf	(??___fltol+3)^0,f,c
  4919  0033CE  3207               	rrcf	(??___fltol+2)^0,f,c
  4920  0033D0  3206               	rrcf	(??___fltol+1)^0,f,c
  4921  0033D2  3205               	rrcf	??___fltol^0,f,c
  4922  0033D4                     u3870:
  4923  0033D4  2EE8               	decfsz	wreg,f,c
  4924  0033D6  EFE5  F019         	goto	u3875
  4925  0033DA  5005               	movf	??___fltol^0,w,c
  4926  0033DC  6E09               	movwf	___fltol@sign1^0,c
  4927  0033DE  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4928  0033E0  0EFF               	movlw	255
  4929  0033E2  1601               	andwf	___fltol@f1^0,f,c
  4930  0033E4  0EFF               	movlw	255
  4931  0033E6  1602               	andwf	(___fltol@f1+1)^0,f,c
  4932  0033E8  0EFF               	movlw	255
  4933  0033EA  1603               	andwf	(___fltol@f1+2)^0,f,c
  4934  0033EC  0E00               	movlw	0
  4935  0033EE  1604               	andwf	(___fltol@f1+3)^0,f,c
  4936  0033F0  0E96               	movlw	150
  4937  0033F2  5E0A               	subwf	___fltol@exp1^0,f,c
  4938  0033F4  BE0A               	btfsc	___fltol@exp1^0,7,c
  4939  0033F6  EF01  F01A         	goto	u3880
  4940  0033FA  EFFF  F019         	goto	u3881
  4941  0033FE                     u3881:
  4942  0033FE  EF17  F01A         	goto	l3394
  4943  003402                     u3880:
  4944  003402  500A               	movf	___fltol@exp1^0,w,c
  4945  003404  0A80               	xorlw	128
  4946  003406  0F97               	addlw	151
  4947  003408  B0D8               	btfsc	status,0,c
  4948  00340A  EF09  F01A         	goto	u3891
  4949  00340E  EF0B  F01A         	goto	u3890
  4950  003412                     u3891:
  4951  003412  EF0D  F01A         	goto	l3390
  4952  003416                     u3890:
  4953  003416  EFD0  F019         	goto	l3370
  4954  00341A                     l3390:
  4955  00341A  90D8               	bcf	status,0,c
  4956  00341C  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4957  00341E  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4958  003420  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4959  003422  3201               	rrcf	___fltol@f1^0,f,c
  4960  003424  3E0A               	incfsz	___fltol@exp1^0,f,c
  4961  003426  EF0D  F01A         	goto	l3390
  4962  00342A  EF2F  F01A         	goto	l3404
  4963  00342E                     l3394:
  4964  00342E  0E1F               	movlw	31
  4965  003430  640A               	cpfsgt	___fltol@exp1^0,c
  4966  003432  EF1D  F01A         	goto	u3901
  4967  003436  EF1F  F01A         	goto	u3900
  4968  00343A                     u3901:
  4969  00343A  EF27  F01A         	goto	l3402
  4970  00343E                     u3900:
  4971  00343E  EFD0  F019         	goto	l3370
  4972  003442                     l3400:
  4973  003442  90D8               	bcf	status,0,c
  4974  003444  3601               	rlcf	___fltol@f1^0,f,c
  4975  003446  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4976  003448  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4977  00344A  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4978  00344C  060A               	decf	___fltol@exp1^0,f,c
  4979  00344E                     l3402:
  4980  00344E  500A               	movf	___fltol@exp1^0,w,c
  4981  003450  A4D8               	btfss	status,2,c
  4982  003452  EF2D  F01A         	goto	u3911
  4983  003456  EF2F  F01A         	goto	u3910
  4984  00345A                     u3911:
  4985  00345A  EF21  F01A         	goto	l3400
  4986  00345E                     u3910:
  4987  00345E                     l3404:
  4988  00345E  5009               	movf	___fltol@sign1^0,w,c
  4989  003460  B4D8               	btfsc	status,2,c
  4990  003462  EF35  F01A         	goto	u3921
  4991  003466  EF37  F01A         	goto	u3920
  4992  00346A                     u3921:
  4993  00346A  EF3F  F01A         	goto	l3408
  4994  00346E                     u3920:
  4995  00346E  1E04               	comf	(___fltol@f1+3)^0,f,c
  4996  003470  1E03               	comf	(___fltol@f1+2)^0,f,c
  4997  003472  1E02               	comf	(___fltol@f1+1)^0,f,c
  4998  003474  6C01               	negf	___fltol@f1^0,c
  4999  003476  0E00               	movlw	0
  5000  003478  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5001  00347A  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5002  00347C  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5003  00347E                     l3408:
  5004  00347E  C001  F001         	movff	___fltol@f1,?___fltol
  5005  003482  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5006  003486  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5007  00348A  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5008  00348E                     l643:
  5009  00348E  0012               	return		;funcret
  5010  003490                     __end_of___fltol:
  5011                           	opt callstack 0
  5012                           
  5013 ;; *************** function ___flsub *****************
  5014 ;; Defined at:
  5015 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  5016 ;; Parameters:    Size  Location     Type
  5017 ;;  b               4   39[COMRAM] long 
  5018 ;;  a               4   43[COMRAM] long 
  5019 ;; Auto vars:     Size  Location     Type
  5020 ;;		None
  5021 ;; Return value:  Size  Location     Type
  5022 ;;                  4   39[COMRAM] long 
  5023 ;; Registers used:
  5024 ;;		wreg, status,2, status,0, cstack
  5025 ;; Tracked objects:
  5026 ;;		On entry : 0/0
  5027 ;;		On exit  : 0/0
  5028 ;;		Unchanged: 0/0
  5029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5030 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5033 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5034 ;;Total ram usage:        8 bytes
  5035 ;; Hardware stack levels used:    1
  5036 ;; Hardware stack levels required when called:    1
  5037 ;; This function calls:
  5038 ;;		___fladd
  5039 ;; This function is called by:
  5040 ;;		_efgtoa
  5041 ;; This function uses a non-reentrant model
  5042 ;;
  5043                           
  5044                           	psect	text17
  5045  003DC6                     __ptext17:
  5046                           	opt callstack 0
  5047  003DC6                     ___flsub:
  5048                           	opt callstack 25
  5049  003DC6  0E00               	movlw	0
  5050  003DC8  1A2C               	xorwf	___flsub@a^0,f,c
  5051  003DCA  0E00               	movlw	0
  5052  003DCC  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  5053  003DCE  0E00               	movlw	0
  5054  003DD0  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  5055  003DD2  0E80               	movlw	128
  5056  003DD4  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  5057  003DD6  C028  F001         	movff	___flsub@b,___fladd@b
  5058  003DDA  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  5059  003DDE  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  5060  003DE2  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  5061  003DE6  C02C  F005         	movff	___flsub@a,___fladd@a
  5062  003DEA  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  5063  003DEE  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  5064  003DF2  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  5065  003DF6  ECFC  F00D         	call	___fladd	;wreg free
  5066  003DFA  C001  F028         	movff	?___fladd,?___flsub
  5067  003DFE  C002  F029         	movff	?___fladd+1,?___flsub+1
  5068  003E02  C003  F02A         	movff	?___fladd+2,?___flsub+2
  5069  003E06  C004  F02B         	movff	?___fladd+3,?___flsub+3
  5070  003E0A  0012               	return		;funcret
  5071  003E0C                     __end_of___flsub:
  5072                           	opt callstack 0
  5073                           
  5074 ;; *************** function ___fladd *****************
  5075 ;; Defined at:
  5076 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  5077 ;; Parameters:    Size  Location     Type
  5078 ;;  b               4    0[COMRAM] long 
  5079 ;;  a               4    4[COMRAM] long 
  5080 ;; Auto vars:     Size  Location     Type
  5081 ;;  grs             1   15[COMRAM] unsigned char 
  5082 ;;  bexp            1   14[COMRAM] unsigned char 
  5083 ;;  aexp            1   13[COMRAM] unsigned char 
  5084 ;;  signs           1   12[COMRAM] unsigned char 
  5085 ;; Return value:  Size  Location     Type
  5086 ;;                  4    0[COMRAM] unsigned char 
  5087 ;; Registers used:
  5088 ;;		wreg, status,2, status,0
  5089 ;; Tracked objects:
  5090 ;;		On entry : 0/0
  5091 ;;		On exit  : 0/0
  5092 ;;		Unchanged: 0/0
  5093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5094 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5095 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5096 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5097 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5098 ;;Total ram usage:       16 bytes
  5099 ;; Hardware stack levels used:    1
  5100 ;; This function calls:
  5101 ;;		Nothing
  5102 ;; This function is called by:
  5103 ;;		_efgtoa
  5104 ;;		___flsub
  5105 ;; This function uses a non-reentrant model
  5106 ;;
  5107                           
  5108                           	psect	text18
  5109  001BF8                     __ptext18:
  5110                           	opt callstack 0
  5111  001BF8                     ___fladd:
  5112                           	opt callstack 25
  5113  001BF8  5004               	movf	(___fladd@b+3)^0,w,c
  5114  001BFA  0B80               	andlw	128
  5115  001BFC  6E0D               	movwf	___fladd@signs^0,c
  5116  001BFE  5004               	movf	(___fladd@b+3)^0,w,c
  5117  001C00  2404               	addwf	(___fladd@b+3)^0,w,c
  5118  001C02  6E0F               	movwf	___fladd@bexp^0,c
  5119  001C04  AE03               	btfss	(___fladd@b+2)^0,7,c
  5120  001C06  EF07  F00E         	goto	u2561
  5121  001C0A  EF09  F00E         	goto	u2560
  5122  001C0E                     u2561:
  5123  001C0E  EF0A  F00E         	goto	l2676
  5124  001C12                     u2560:
  5125  001C12  800F               	bsf	___fladd@bexp^0,0,c
  5126  001C14                     l2676:
  5127  001C14  500F               	movf	___fladd@bexp^0,w,c
  5128  001C16  B4D8               	btfsc	status,2,c
  5129  001C18  EF10  F00E         	goto	u2571
  5130  001C1C  EF12  F00E         	goto	u2570
  5131  001C20                     u2571:
  5132  001C20  EF27  F00E         	goto	l2686
  5133  001C24                     u2570:
  5134  001C24  280F               	incf	___fladd@bexp^0,w,c
  5135  001C26  A4D8               	btfss	status,2,c
  5136  001C28  EF18  F00E         	goto	u2581
  5137  001C2C  EF1A  F00E         	goto	u2580
  5138  001C30                     u2581:
  5139  001C30  EF22  F00E         	goto	l2682
  5140  001C34                     u2580:
  5141  001C34  0E00               	movlw	0
  5142  001C36  6E01               	movwf	___fladd@b^0,c
  5143  001C38  0E00               	movlw	0
  5144  001C3A  6E02               	movwf	(___fladd@b+1)^0,c
  5145  001C3C  0E00               	movlw	0
  5146  001C3E  6E03               	movwf	(___fladd@b+2)^0,c
  5147  001C40  0E00               	movlw	0
  5148  001C42  6E04               	movwf	(___fladd@b+3)^0,c
  5149  001C44                     l2682:
  5150  001C44  8E03               	bsf	(___fladd@b+2)^0,7,c
  5151  001C46  0E00               	movlw	0
  5152  001C48  6E04               	movwf	(___fladd@b+3)^0,c
  5153  001C4A  EF2F  F00E         	goto	l2688
  5154  001C4E                     l2686:
  5155  001C4E  0E00               	movlw	0
  5156  001C50  6E01               	movwf	___fladd@b^0,c
  5157  001C52  0E00               	movlw	0
  5158  001C54  6E02               	movwf	(___fladd@b+1)^0,c
  5159  001C56  0E00               	movlw	0
  5160  001C58  6E03               	movwf	(___fladd@b+2)^0,c
  5161  001C5A  0E00               	movlw	0
  5162  001C5C  6E04               	movwf	(___fladd@b+3)^0,c
  5163  001C5E                     l2688:
  5164  001C5E  5008               	movf	(___fladd@a+3)^0,w,c
  5165  001C60  0B80               	andlw	128
  5166  001C62  6E0E               	movwf	___fladd@aexp^0,c
  5167  001C64  500D               	movf	___fladd@signs^0,w,c
  5168  001C66  180E               	xorwf	___fladd@aexp^0,w,c
  5169  001C68  B4D8               	btfsc	status,2,c
  5170  001C6A  EF39  F00E         	goto	u2591
  5171  001C6E  EF3B  F00E         	goto	u2590
  5172  001C72                     u2591:
  5173  001C72  EF3C  F00E         	goto	l2694
  5174  001C76                     u2590:
  5175  001C76  8C0D               	bsf	___fladd@signs^0,6,c
  5176  001C78                     l2694:
  5177  001C78  5008               	movf	(___fladd@a+3)^0,w,c
  5178  001C7A  2408               	addwf	(___fladd@a+3)^0,w,c
  5179  001C7C  6E0E               	movwf	___fladd@aexp^0,c
  5180  001C7E  AE07               	btfss	(___fladd@a+2)^0,7,c
  5181  001C80  EF44  F00E         	goto	u2601
  5182  001C84  EF46  F00E         	goto	u2600
  5183  001C88                     u2601:
  5184  001C88  EF47  F00E         	goto	l2700
  5185  001C8C                     u2600:
  5186  001C8C  800E               	bsf	___fladd@aexp^0,0,c
  5187  001C8E                     l2700:
  5188  001C8E  500E               	movf	___fladd@aexp^0,w,c
  5189  001C90  B4D8               	btfsc	status,2,c
  5190  001C92  EF4D  F00E         	goto	u2611
  5191  001C96  EF4F  F00E         	goto	u2610
  5192  001C9A                     u2611:
  5193  001C9A  EF64  F00E         	goto	l2710
  5194  001C9E                     u2610:
  5195  001C9E  280E               	incf	___fladd@aexp^0,w,c
  5196  001CA0  A4D8               	btfss	status,2,c
  5197  001CA2  EF55  F00E         	goto	u2621
  5198  001CA6  EF57  F00E         	goto	u2620
  5199  001CAA                     u2621:
  5200  001CAA  EF5F  F00E         	goto	l2706
  5201  001CAE                     u2620:
  5202  001CAE  0E00               	movlw	0
  5203  001CB0  6E05               	movwf	___fladd@a^0,c
  5204  001CB2  0E00               	movlw	0
  5205  001CB4  6E06               	movwf	(___fladd@a+1)^0,c
  5206  001CB6  0E00               	movlw	0
  5207  001CB8  6E07               	movwf	(___fladd@a+2)^0,c
  5208  001CBA  0E00               	movlw	0
  5209  001CBC  6E08               	movwf	(___fladd@a+3)^0,c
  5210  001CBE                     l2706:
  5211  001CBE  8E07               	bsf	(___fladd@a+2)^0,7,c
  5212  001CC0  0E00               	movlw	0
  5213  001CC2  6E08               	movwf	(___fladd@a+3)^0,c
  5214  001CC4  EF6C  F00E         	goto	l2712
  5215  001CC8                     l2710:
  5216  001CC8  0E00               	movlw	0
  5217  001CCA  6E05               	movwf	___fladd@a^0,c
  5218  001CCC  0E00               	movlw	0
  5219  001CCE  6E06               	movwf	(___fladd@a+1)^0,c
  5220  001CD0  0E00               	movlw	0
  5221  001CD2  6E07               	movwf	(___fladd@a+2)^0,c
  5222  001CD4  0E00               	movlw	0
  5223  001CD6  6E08               	movwf	(___fladd@a+3)^0,c
  5224  001CD8                     l2712:
  5225  001CD8  500F               	movf	___fladd@bexp^0,w,c
  5226  001CDA  5C0E               	subwf	___fladd@aexp^0,w,c
  5227  001CDC  B0D8               	btfsc	status,0,c
  5228  001CDE  EF73  F00E         	goto	u2631
  5229  001CE2  EF75  F00E         	goto	u2630
  5230  001CE6                     u2631:
  5231  001CE6  EF9C  F00E         	goto	l2748
  5232  001CEA                     u2630:
  5233  001CEA  AC0D               	btfss	___fladd@signs^0,6,c
  5234  001CEC  EF7A  F00E         	goto	u2641
  5235  001CF0  EF7C  F00E         	goto	u2640
  5236  001CF4                     u2641:
  5237  001CF4  EF7E  F00E         	goto	l2718
  5238  001CF8                     u2640:
  5239  001CF8  0E80               	movlw	128
  5240  001CFA  1A0D               	xorwf	___fladd@signs^0,f,c
  5241  001CFC                     l2718:
  5242  001CFC  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5243  001D00  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5244  001D04  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5245  001D08  C001  F010         	movff	___fladd@b,___fladd@grs
  5246  001D0C  C005  F001         	movff	___fladd@a,___fladd@b
  5247  001D10  C010  F005         	movff	___fladd@grs,___fladd@a
  5248  001D14  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5249  001D18  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5250  001D1C  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5251  001D20  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5252  001D24  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5253  001D28  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5254  001D2C  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5255  001D30  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5256  001D34  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5257  001D38                     l2748:
  5258  001D38  0E00               	movlw	0
  5259  001D3A  6E10               	movwf	___fladd@grs^0,c
  5260  001D3C  500F               	movf	___fladd@bexp^0,w,c
  5261  001D3E  C00E  F009         	movff	___fladd@aexp,??___fladd
  5262  001D42  6A0A               	clrf	(??___fladd+1)^0,c
  5263  001D44  5E09               	subwf	??___fladd^0,f,c
  5264  001D46  0E00               	movlw	0
  5265  001D48  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5266  001D4A  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5267  001D4C  EFB1  F00E         	goto	u2651
  5268  001D50  500A               	movf	(??___fladd+1)^0,w,c
  5269  001D52  E109               	bnz	u2650
  5270  001D54  0E1A               	movlw	26
  5271  001D56  5C09               	subwf	??___fladd^0,w,c
  5272  001D58  A0D8               	btfss	status,0,c
  5273  001D5A  EFB1  F00E         	goto	u2651
  5274  001D5E  EFB3  F00E         	goto	u2650
  5275  001D62                     u2651:
  5276  001D62  EFEA  F00E         	goto	l875
  5277  001D66                     u2650:
  5278  001D66  5001               	movf	___fladd@b^0,w,c
  5279  001D68  1002               	iorwf	(___fladd@b+1)^0,w,c
  5280  001D6A  1003               	iorwf	(___fladd@b+2)^0,w,c
  5281  001D6C  1004               	iorwf	(___fladd@b+3)^0,w,c
  5282  001D6E  A4D8               	btfss	status,2,c
  5283  001D70  EFBC  F00E         	goto	u2661
  5284  001D74  EFBF  F00E         	goto	u2660
  5285  001D78                     u2661:
  5286  001D78  0E01               	movlw	1
  5287  001D7A  EFC0  F00E         	goto	u2670
  5288  001D7E                     u2660:
  5289  001D7E  0E00               	movlw	0
  5290  001D80                     u2670:
  5291  001D80  6E10               	movwf	___fladd@grs^0,c
  5292  001D82  0E00               	movlw	0
  5293  001D84  6E01               	movwf	___fladd@b^0,c
  5294  001D86  0E00               	movlw	0
  5295  001D88  6E02               	movwf	(___fladd@b+1)^0,c
  5296  001D8A  0E00               	movlw	0
  5297  001D8C  6E03               	movwf	(___fladd@b+2)^0,c
  5298  001D8E  0E00               	movlw	0
  5299  001D90  6E04               	movwf	(___fladd@b+3)^0,c
  5300  001D92  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5301  001D96  EFF3  F00E         	goto	l874
  5302  001D9A                     l876:
  5303  001D9A  A010               	btfss	___fladd@grs^0,0,c
  5304  001D9C  EFD2  F00E         	goto	u2681
  5305  001DA0  EFD4  F00E         	goto	u2680
  5306  001DA4                     u2681:
  5307  001DA4  EFDA  F00E         	goto	l2760
  5308  001DA8                     u2680:
  5309  001DA8  90D8               	bcf	status,0,c
  5310  001DAA  3010               	rrcf	___fladd@grs^0,w,c
  5311  001DAC  0901               	iorlw	1
  5312  001DAE  6E10               	movwf	___fladd@grs^0,c
  5313  001DB0  EFDC  F00E         	goto	l2762
  5314  001DB4                     l2760:
  5315  001DB4  90D8               	bcf	status,0,c
  5316  001DB6  3210               	rrcf	___fladd@grs^0,f,c
  5317  001DB8                     l2762:
  5318  001DB8  A001               	btfss	___fladd@b^0,0,c
  5319  001DBA  EFE1  F00E         	goto	u2691
  5320  001DBE  EFE3  F00E         	goto	u2690
  5321  001DC2                     u2691:
  5322  001DC2  EFE4  F00E         	goto	l2766
  5323  001DC6                     u2690:
  5324  001DC6  8E10               	bsf	___fladd@grs^0,7,c
  5325  001DC8                     l2766:
  5326  001DC8  3404               	rlcf	(___fladd@b+3)^0,w,c
  5327  001DCA  3204               	rrcf	(___fladd@b+3)^0,f,c
  5328  001DCC  3203               	rrcf	(___fladd@b+2)^0,f,c
  5329  001DCE  3202               	rrcf	(___fladd@b+1)^0,f,c
  5330  001DD0  3201               	rrcf	___fladd@b^0,f,c
  5331  001DD2  2A0F               	incf	___fladd@bexp^0,f,c
  5332  001DD4                     l875:
  5333  001DD4  500E               	movf	___fladd@aexp^0,w,c
  5334  001DD6  5C0F               	subwf	___fladd@bexp^0,w,c
  5335  001DD8  A0D8               	btfss	status,0,c
  5336  001DDA  EFF1  F00E         	goto	u2701
  5337  001DDE  EFF3  F00E         	goto	u2700
  5338  001DE2                     u2701:
  5339  001DE2  EFCD  F00E         	goto	l876
  5340  001DE6                     u2700:
  5341  001DE6                     l874:
  5342  001DE6  BC0D               	btfsc	___fladd@signs^0,6,c
  5343  001DE8  EFF8  F00E         	goto	u2711
  5344  001DEC  EFFA  F00E         	goto	u2710
  5345  001DF0                     u2711:
  5346  001DF0  EF3A  F00F         	goto	l2794
  5347  001DF4                     u2710:
  5348  001DF4  500F               	movf	___fladd@bexp^0,w,c
  5349  001DF6  A4D8               	btfss	status,2,c
  5350  001DF8  EF00  F00F         	goto	u2721
  5351  001DFC  EF02  F00F         	goto	u2720
  5352  001E00                     u2721:
  5353  001E00  EF0C  F00F         	goto	l2776
  5354  001E04                     u2720:
  5355  001E04  0E00               	movlw	0
  5356  001E06  6E01               	movwf	?___fladd^0,c
  5357  001E08  0E00               	movlw	0
  5358  001E0A  6E02               	movwf	(?___fladd+1)^0,c
  5359  001E0C  0E00               	movlw	0
  5360  001E0E  6E03               	movwf	(?___fladd+2)^0,c
  5361  001E10  0E00               	movlw	0
  5362  001E12  6E04               	movwf	(?___fladd+3)^0,c
  5363  001E14  EF5B  F010         	goto	l883
  5364  001E18                     l2776:
  5365  001E18  5005               	movf	___fladd@a^0,w,c
  5366  001E1A  2601               	addwf	___fladd@b^0,f,c
  5367  001E1C  5006               	movf	(___fladd@a+1)^0,w,c
  5368  001E1E  2202               	addwfc	(___fladd@b+1)^0,f,c
  5369  001E20  5007               	movf	(___fladd@a+2)^0,w,c
  5370  001E22  2203               	addwfc	(___fladd@b+2)^0,f,c
  5371  001E24  5008               	movf	(___fladd@a+3)^0,w,c
  5372  001E26  2204               	addwfc	(___fladd@b+3)^0,f,c
  5373  001E28  A004               	btfss	(___fladd@b+3)^0,0,c
  5374  001E2A  EF19  F00F         	goto	u2731
  5375  001E2E  EF1B  F00F         	goto	u2730
  5376  001E32                     u2731:
  5377  001E32  EFC7  F00F         	goto	l2830
  5378  001E36                     u2730:
  5379  001E36  A010               	btfss	___fladd@grs^0,0,c
  5380  001E38  EF20  F00F         	goto	u2741
  5381  001E3C  EF22  F00F         	goto	u2740
  5382  001E40                     u2741:
  5383  001E40  EF28  F00F         	goto	l2784
  5384  001E44                     u2740:
  5385  001E44  90D8               	bcf	status,0,c
  5386  001E46  3010               	rrcf	___fladd@grs^0,w,c
  5387  001E48  0901               	iorlw	1
  5388  001E4A  6E10               	movwf	___fladd@grs^0,c
  5389  001E4C  EF2A  F00F         	goto	l2786
  5390  001E50                     l2784:
  5391  001E50  90D8               	bcf	status,0,c
  5392  001E52  3210               	rrcf	___fladd@grs^0,f,c
  5393  001E54                     l2786:
  5394  001E54  A001               	btfss	___fladd@b^0,0,c
  5395  001E56  EF2F  F00F         	goto	u2751
  5396  001E5A  EF31  F00F         	goto	u2750
  5397  001E5E                     u2751:
  5398  001E5E  EF32  F00F         	goto	l2790
  5399  001E62                     u2750:
  5400  001E62  8E10               	bsf	___fladd@grs^0,7,c
  5401  001E64                     l2790:
  5402  001E64  3404               	rlcf	(___fladd@b+3)^0,w,c
  5403  001E66  3204               	rrcf	(___fladd@b+3)^0,f,c
  5404  001E68  3203               	rrcf	(___fladd@b+2)^0,f,c
  5405  001E6A  3202               	rrcf	(___fladd@b+1)^0,f,c
  5406  001E6C  3201               	rrcf	___fladd@b^0,f,c
  5407  001E6E  2A0F               	incf	___fladd@bexp^0,f,c
  5408  001E70  EFC7  F00F         	goto	l2830
  5409  001E74                     l2794:
  5410  001E74  5005               	movf	___fladd@a^0,w,c
  5411  001E76  5C01               	subwf	___fladd@b^0,w,c
  5412  001E78  5006               	movf	(___fladd@a+1)^0,w,c
  5413  001E7A  5802               	subwfb	(___fladd@b+1)^0,w,c
  5414  001E7C  5007               	movf	(___fladd@a+2)^0,w,c
  5415  001E7E  5803               	subwfb	(___fladd@b+2)^0,w,c
  5416  001E80  5004               	movf	(___fladd@b+3)^0,w,c
  5417  001E82  0A80               	xorlw	128
  5418  001E84  6E09               	movwf	??___fladd^0,c
  5419  001E86  5008               	movf	(___fladd@a+3)^0,w,c
  5420  001E88  0A80               	xorlw	128
  5421  001E8A  5809               	subwfb	??___fladd^0,w,c
  5422  001E8C  B0D8               	btfsc	status,0,c
  5423  001E8E  EF4B  F00F         	goto	u2761
  5424  001E92  EF4D  F00F         	goto	u2760
  5425  001E96                     u2761:
  5426  001E96  EF78  F00F         	goto	l2804
  5427  001E9A                     u2760:
  5428  001E9A  5001               	movf	___fladd@b^0,w,c
  5429  001E9C  5C05               	subwf	___fladd@a^0,w,c
  5430  001E9E  6E09               	movwf	??___fladd^0,c
  5431  001EA0  5002               	movf	(___fladd@b+1)^0,w,c
  5432  001EA2  5806               	subwfb	(___fladd@a+1)^0,w,c
  5433  001EA4  6E0A               	movwf	(??___fladd+1)^0,c
  5434  001EA6  5003               	movf	(___fladd@b+2)^0,w,c
  5435  001EA8  5807               	subwfb	(___fladd@a+2)^0,w,c
  5436  001EAA  6E0B               	movwf	(??___fladd+2)^0,c
  5437  001EAC  5004               	movf	(___fladd@b+3)^0,w,c
  5438  001EAE  5808               	subwfb	(___fladd@a+3)^0,w,c
  5439  001EB0  6E0C               	movwf	(??___fladd+3)^0,c
  5440  001EB2  0EFF               	movlw	255
  5441  001EB4  2409               	addwf	??___fladd^0,w,c
  5442  001EB6  6E01               	movwf	___fladd@b^0,c
  5443  001EB8  0EFF               	movlw	255
  5444  001EBA  200A               	addwfc	(??___fladd+1)^0,w,c
  5445  001EBC  6E02               	movwf	(___fladd@b+1)^0,c
  5446  001EBE  0EFF               	movlw	255
  5447  001EC0  200B               	addwfc	(??___fladd+2)^0,w,c
  5448  001EC2  6E03               	movwf	(___fladd@b+2)^0,c
  5449  001EC4  0EFF               	movlw	255
  5450  001EC6  200C               	addwfc	(??___fladd+3)^0,w,c
  5451  001EC8  6E04               	movwf	(___fladd@b+3)^0,c
  5452  001ECA  0E80               	movlw	128
  5453  001ECC  1A0D               	xorwf	___fladd@signs^0,f,c
  5454  001ECE  6C10               	negf	___fladd@grs^0,c
  5455  001ED0  5010               	movf	___fladd@grs^0,w,c
  5456  001ED2  A4D8               	btfss	status,2,c
  5457  001ED4  EF6E  F00F         	goto	u2771
  5458  001ED8  EF70  F00F         	goto	u2770
  5459  001EDC                     u2771:
  5460  001EDC  EF80  F00F         	goto	l891
  5461  001EE0                     u2770:
  5462  001EE0  0E01               	movlw	1
  5463  001EE2  2601               	addwf	___fladd@b^0,f,c
  5464  001EE4  0E00               	movlw	0
  5465  001EE6  2202               	addwfc	(___fladd@b+1)^0,f,c
  5466  001EE8  2203               	addwfc	(___fladd@b+2)^0,f,c
  5467  001EEA  2204               	addwfc	(___fladd@b+3)^0,f,c
  5468  001EEC  EF80  F00F         	goto	l891
  5469  001EF0                     l2804:
  5470  001EF0  5005               	movf	___fladd@a^0,w,c
  5471  001EF2  5E01               	subwf	___fladd@b^0,f,c
  5472  001EF4  5006               	movf	(___fladd@a+1)^0,w,c
  5473  001EF6  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5474  001EF8  5007               	movf	(___fladd@a+2)^0,w,c
  5475  001EFA  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5476  001EFC  5008               	movf	(___fladd@a+3)^0,w,c
  5477  001EFE  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5478  001F00                     l891:
  5479  001F00  5001               	movf	___fladd@b^0,w,c
  5480  001F02  1002               	iorwf	(___fladd@b+1)^0,w,c
  5481  001F04  1003               	iorwf	(___fladd@b+2)^0,w,c
  5482  001F06  1004               	iorwf	(___fladd@b+3)^0,w,c
  5483  001F08  A4D8               	btfss	status,2,c
  5484  001F0A  EF89  F00F         	goto	u2781
  5485  001F0E  EF8B  F00F         	goto	u2780
  5486  001F12                     u2781:
  5487  001F12  EFC0  F00F         	goto	l2828
  5488  001F16                     u2780:
  5489  001F16  5010               	movf	___fladd@grs^0,w,c
  5490  001F18  A4D8               	btfss	status,2,c
  5491  001F1A  EF91  F00F         	goto	u2791
  5492  001F1E  EF93  F00F         	goto	u2790
  5493  001F22                     u2791:
  5494  001F22  EFC0  F00F         	goto	l2828
  5495  001F26                     u2790:
  5496  001F26  0E00               	movlw	0
  5497  001F28  6E01               	movwf	?___fladd^0,c
  5498  001F2A  0E00               	movlw	0
  5499  001F2C  6E02               	movwf	(?___fladd+1)^0,c
  5500  001F2E  0E00               	movlw	0
  5501  001F30  6E03               	movwf	(?___fladd+2)^0,c
  5502  001F32  0E00               	movlw	0
  5503  001F34  6E04               	movwf	(?___fladd+3)^0,c
  5504  001F36  EF5B  F010         	goto	l883
  5505  001F3A                     l2812:
  5506  001F3A  90D8               	bcf	status,0,c
  5507  001F3C  3601               	rlcf	___fladd@b^0,f,c
  5508  001F3E  3602               	rlcf	(___fladd@b+1)^0,f,c
  5509  001F40  3603               	rlcf	(___fladd@b+2)^0,f,c
  5510  001F42  3604               	rlcf	(___fladd@b+3)^0,f,c
  5511  001F44  AE10               	btfss	___fladd@grs^0,7,c
  5512  001F46  EFA7  F00F         	goto	u2801
  5513  001F4A  EFA9  F00F         	goto	u2800
  5514  001F4E                     u2801:
  5515  001F4E  EFAA  F00F         	goto	l2818
  5516  001F52                     u2800:
  5517  001F52  8001               	bsf	___fladd@b^0,0,c
  5518  001F54                     l2818:
  5519  001F54  A010               	btfss	___fladd@grs^0,0,c
  5520  001F56  EFAF  F00F         	goto	u2811
  5521  001F5A  EFB1  F00F         	goto	u2810
  5522  001F5E                     u2811:
  5523  001F5E  EFB5  F00F         	goto	l2822
  5524  001F62                     u2810:
  5525  001F62  80D8               	bsf	status,0,c
  5526  001F64  3610               	rlcf	___fladd@grs^0,f,c
  5527  001F66  EFB7  F00F         	goto	l2824
  5528  001F6A                     l2822:
  5529  001F6A  90D8               	bcf	status,0,c
  5530  001F6C  3610               	rlcf	___fladd@grs^0,f,c
  5531  001F6E                     l2824:
  5532  001F6E  500F               	movf	___fladd@bexp^0,w,c
  5533  001F70  B4D8               	btfsc	status,2,c
  5534  001F72  EFBD  F00F         	goto	u2821
  5535  001F76  EFBF  F00F         	goto	u2820
  5536  001F7A                     u2821:
  5537  001F7A  EFC0  F00F         	goto	l2828
  5538  001F7E                     u2820:
  5539  001F7E  060F               	decf	___fladd@bexp^0,f,c
  5540  001F80                     l2828:
  5541  001F80  AE03               	btfss	(___fladd@b+2)^0,7,c
  5542  001F82  EFC5  F00F         	goto	u2831
  5543  001F86  EFC7  F00F         	goto	u2830
  5544  001F8A                     u2831:
  5545  001F8A  EF9D  F00F         	goto	l2812
  5546  001F8E                     u2830:
  5547  001F8E                     l2830:
  5548  001F8E  0E00               	movlw	0
  5549  001F90  6E0E               	movwf	___fladd@aexp^0,c
  5550  001F92  AE10               	btfss	___fladd@grs^0,7,c
  5551  001F94  EFCE  F00F         	goto	u2841
  5552  001F98  EFD0  F00F         	goto	u2840
  5553  001F9C                     u2841:
  5554  001F9C  EFE8  F00F         	goto	l900
  5555  001FA0                     u2840:
  5556  001FA0  C010  F009         	movff	___fladd@grs,??___fladd
  5557  001FA4  0E7F               	movlw	127
  5558  001FA6  1609               	andwf	??___fladd^0,f,c
  5559  001FA8  B4D8               	btfsc	status,2,c
  5560  001FAA  EFD9  F00F         	goto	u2851
  5561  001FAE  EFDB  F00F         	goto	u2850
  5562  001FB2                     u2851:
  5563  001FB2  EFDF  F00F         	goto	l901
  5564  001FB6                     u2850:
  5565  001FB6                     l2836:
  5566  001FB6  0E01               	movlw	1
  5567  001FB8  6E0E               	movwf	___fladd@aexp^0,c
  5568  001FBA  EFE8  F00F         	goto	l900
  5569  001FBE                     l901:
  5570  001FBE  A001               	btfss	___fladd@b^0,0,c
  5571  001FC0  EFE4  F00F         	goto	u2861
  5572  001FC4  EFE6  F00F         	goto	u2860
  5573  001FC8                     u2861:
  5574  001FC8  EFE8  F00F         	goto	l900
  5575  001FCC                     u2860:
  5576  001FCC  EFDB  F00F         	goto	l2836
  5577  001FD0                     l900:
  5578  001FD0  500E               	movf	___fladd@aexp^0,w,c
  5579  001FD2  B4D8               	btfsc	status,2,c
  5580  001FD4  EFEE  F00F         	goto	u2871
  5581  001FD8  EFF0  F00F         	goto	u2870
  5582  001FDC                     u2871:
  5583  001FDC  EF1B  F010         	goto	l2848
  5584  001FE0                     u2870:
  5585  001FE0  0E01               	movlw	1
  5586  001FE2  2601               	addwf	___fladd@b^0,f,c
  5587  001FE4  0E00               	movlw	0
  5588  001FE6  2202               	addwfc	(___fladd@b+1)^0,f,c
  5589  001FE8  2203               	addwfc	(___fladd@b+2)^0,f,c
  5590  001FEA  2204               	addwfc	(___fladd@b+3)^0,f,c
  5591  001FEC  A004               	btfss	(___fladd@b+3)^0,0,c
  5592  001FEE  EFFB  F00F         	goto	u2881
  5593  001FF2  EFFD  F00F         	goto	u2880
  5594  001FF6                     u2881:
  5595  001FF6  EF1B  F010         	goto	l2848
  5596  001FFA                     u2880:
  5597  001FFA  C001  F009         	movff	___fladd@b,??___fladd
  5598  001FFE  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5599  002002  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5600  002006  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5601  00200A  340C               	rlcf	(??___fladd+3)^0,w,c
  5602  00200C  320C               	rrcf	(??___fladd+3)^0,f,c
  5603  00200E  320B               	rrcf	(??___fladd+2)^0,f,c
  5604  002010  320A               	rrcf	(??___fladd+1)^0,f,c
  5605  002012  3209               	rrcf	??___fladd^0,f,c
  5606  002014  C009  F001         	movff	??___fladd,___fladd@b
  5607  002018  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5608  00201C  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5609  002020  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5610  002024  280F               	incf	___fladd@bexp^0,w,c
  5611  002026  B4D8               	btfsc	status,2,c
  5612  002028  EF18  F010         	goto	u2891
  5613  00202C  EF1A  F010         	goto	u2890
  5614  002030                     u2891:
  5615  002030  EF1B  F010         	goto	l2848
  5616  002034                     u2890:
  5617  002034  2A0F               	incf	___fladd@bexp^0,f,c
  5618  002036                     l2848:
  5619  002036  280F               	incf	___fladd@bexp^0,w,c
  5620  002038  B4D8               	btfsc	status,2,c
  5621  00203A  EF21  F010         	goto	u2901
  5622  00203E  EF23  F010         	goto	u2900
  5623  002042                     u2901:
  5624  002042  EF2B  F010         	goto	l2852
  5625  002046                     u2900:
  5626  002046  500F               	movf	___fladd@bexp^0,w,c
  5627  002048  A4D8               	btfss	status,2,c
  5628  00204A  EF29  F010         	goto	u2911
  5629  00204E  EF2B  F010         	goto	u2910
  5630  002052                     u2911:
  5631  002052  EF3D  F010         	goto	l2856
  5632  002056                     u2910:
  5633  002056                     l2852:
  5634  002056  0E00               	movlw	0
  5635  002058  6E01               	movwf	___fladd@b^0,c
  5636  00205A  0E00               	movlw	0
  5637  00205C  6E02               	movwf	(___fladd@b+1)^0,c
  5638  00205E  0E00               	movlw	0
  5639  002060  6E03               	movwf	(___fladd@b+2)^0,c
  5640  002062  0E00               	movlw	0
  5641  002064  6E04               	movwf	(___fladd@b+3)^0,c
  5642  002066  500F               	movf	___fladd@bexp^0,w,c
  5643  002068  A4D8               	btfss	status,2,c
  5644  00206A  EF39  F010         	goto	u2921
  5645  00206E  EF3B  F010         	goto	u2920
  5646  002072                     u2921:
  5647  002072  EF3D  F010         	goto	l2856
  5648  002076                     u2920:
  5649  002076  0E00               	movlw	0
  5650  002078  6E0D               	movwf	___fladd@signs^0,c
  5651  00207A                     l2856:
  5652  00207A  A00F               	btfss	___fladd@bexp^0,0,c
  5653  00207C  EF42  F010         	goto	u2931
  5654  002080  EF44  F010         	goto	u2930
  5655  002084                     u2931:
  5656  002084  EF47  F010         	goto	l2860
  5657  002088                     u2930:
  5658  002088  8E03               	bsf	(___fladd@b+2)^0,7,c
  5659  00208A  EF48  F010         	goto	l2862
  5660  00208E                     l2860:
  5661  00208E  9E03               	bcf	(___fladd@b+2)^0,7,c
  5662  002090                     l2862:
  5663  002090  90D8               	bcf	status,0,c
  5664  002092  300F               	rrcf	___fladd@bexp^0,w,c
  5665  002094  6E04               	movwf	(___fladd@b+3)^0,c
  5666  002096  AE0D               	btfss	___fladd@signs^0,7,c
  5667  002098  EF50  F010         	goto	u2941
  5668  00209C  EF52  F010         	goto	u2940
  5669  0020A0                     u2941:
  5670  0020A0  EF53  F010         	goto	l2868
  5671  0020A4                     u2940:
  5672  0020A4  8E04               	bsf	(___fladd@b+3)^0,7,c
  5673  0020A6                     l2868:
  5674  0020A6  C001  F001         	movff	___fladd@b,?___fladd
  5675  0020AA  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5676  0020AE  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5677  0020B2  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5678  0020B6                     l883:
  5679  0020B6  0012               	return		;funcret
  5680  0020B8                     __end_of___fladd:
  5681                           	opt callstack 0
  5682                           
  5683 ;; *************** function ___flneg *****************
  5684 ;; Defined at:
  5685 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
  5686 ;; Parameters:    Size  Location     Type
  5687 ;;  f1              4    0[COMRAM] unsigned char 
  5688 ;; Auto vars:     Size  Location     Type
  5689 ;;		None
  5690 ;; Return value:  Size  Location     Type
  5691 ;;                  4    0[COMRAM] unsigned char 
  5692 ;; Registers used:
  5693 ;;		wreg, status,2, status,0
  5694 ;; Tracked objects:
  5695 ;;		On entry : 0/0
  5696 ;;		On exit  : 0/0
  5697 ;;		Unchanged: 0/0
  5698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5699 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5702 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5703 ;;Total ram usage:        4 bytes
  5704 ;; Hardware stack levels used:    1
  5705 ;; This function calls:
  5706 ;;		Nothing
  5707 ;; This function is called by:
  5708 ;;		_efgtoa
  5709 ;; This function uses a non-reentrant model
  5710 ;;
  5711                           
  5712                           	psect	text19
  5713  003F3A                     __ptext19:
  5714                           	opt callstack 0
  5715  003F3A                     ___flneg:
  5716                           	opt callstack 26
  5717  003F3A  5001               	movf	___flneg@f1^0,w,c
  5718  003F3C  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5719  003F3E  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5720  003F40  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5721  003F42  B4D8               	btfsc	status,2,c
  5722  003F44  EFA6  F01F         	goto	u3851
  5723  003F48  EFA8  F01F         	goto	u3850
  5724  003F4C                     u3851:
  5725  003F4C  EFB0  F01F         	goto	l3364
  5726  003F50                     u3850:
  5727  003F50  0E00               	movlw	0
  5728  003F52  1A01               	xorwf	___flneg@f1^0,f,c
  5729  003F54  0E00               	movlw	0
  5730  003F56  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5731  003F58  0E00               	movlw	0
  5732  003F5A  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5733  003F5C  0E80               	movlw	128
  5734  003F5E  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5735  003F60                     l3364:
  5736  003F60  C001  F001         	movff	___flneg@f1,?___flneg
  5737  003F64  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5738  003F68  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5739  003F6C  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5740  003F70  0012               	return		;funcret
  5741  003F72                     __end_of___flneg:
  5742                           	opt callstack 0
  5743                           
  5744 ;; *************** function ___flmul *****************
  5745 ;; Defined at:
  5746 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  5747 ;; Parameters:    Size  Location     Type
  5748 ;;  b               4   14[COMRAM] unsigned char 
  5749 ;;  a               4   18[COMRAM] unsigned char 
  5750 ;; Auto vars:     Size  Location     Type
  5751 ;;  prod            4   33[COMRAM] struct .
  5752 ;;  grs             4   27[COMRAM] unsigned long 
  5753 ;;  temp            2   37[COMRAM] struct .
  5754 ;;  bexp            1   32[COMRAM] unsigned char 
  5755 ;;  aexp            1   31[COMRAM] unsigned char 
  5756 ;;  sign            1   26[COMRAM] unsigned char 
  5757 ;; Return value:  Size  Location     Type
  5758 ;;                  4   14[COMRAM] unsigned char 
  5759 ;; Registers used:
  5760 ;;		wreg, status,2, status,0, prodl, prodh
  5761 ;; Tracked objects:
  5762 ;;		On entry : 0/0
  5763 ;;		On exit  : 0/0
  5764 ;;		Unchanged: 0/0
  5765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5766 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5767 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5768 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5769 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5770 ;;Total ram usage:       25 bytes
  5771 ;; Hardware stack levels used:    1
  5772 ;; This function calls:
  5773 ;;		Nothing
  5774 ;; This function is called by:
  5775 ;;		_main
  5776 ;;		_efgtoa
  5777 ;; This function uses a non-reentrant model
  5778 ;;
  5779                           
  5780                           	psect	text20
  5781  002526                     __ptext20:
  5782                           	opt callstack 0
  5783  002526                     ___flmul:
  5784                           	opt callstack 26
  5785  002526  5012               	movf	(___flmul@b+3)^0,w,c
  5786  002528  0B80               	andlw	128
  5787  00252A  6E1B               	movwf	___flmul@sign^0,c
  5788  00252C  5012               	movf	(___flmul@b+3)^0,w,c
  5789  00252E  2412               	addwf	(___flmul@b+3)^0,w,c
  5790  002530  6E21               	movwf	___flmul@bexp^0,c
  5791  002532  AE11               	btfss	(___flmul@b+2)^0,7,c
  5792  002534  EF9E  F012         	goto	u3461
  5793  002538  EFA0  F012         	goto	u3460
  5794  00253C                     u3461:
  5795  00253C  EFA1  F012         	goto	l3112
  5796  002540                     u3460:
  5797  002540  8021               	bsf	___flmul@bexp^0,0,c
  5798  002542                     l3112:
  5799  002542  5021               	movf	___flmul@bexp^0,w,c
  5800  002544  B4D8               	btfsc	status,2,c
  5801  002546  EFA7  F012         	goto	u3471
  5802  00254A  EFA9  F012         	goto	u3470
  5803  00254E                     u3471:
  5804  00254E  EFBC  F012         	goto	l3120
  5805  002552                     u3470:
  5806  002552  2821               	incf	___flmul@bexp^0,w,c
  5807  002554  A4D8               	btfss	status,2,c
  5808  002556  EFAF  F012         	goto	u3481
  5809  00255A  EFB1  F012         	goto	u3480
  5810  00255E                     u3481:
  5811  00255E  EFB9  F012         	goto	l3118
  5812  002562                     u3480:
  5813  002562  0E00               	movlw	0
  5814  002564  6E0F               	movwf	___flmul@b^0,c
  5815  002566  0E00               	movlw	0
  5816  002568  6E10               	movwf	(___flmul@b+1)^0,c
  5817  00256A  0E00               	movlw	0
  5818  00256C  6E11               	movwf	(___flmul@b+2)^0,c
  5819  00256E  0E00               	movlw	0
  5820  002570  6E12               	movwf	(___flmul@b+3)^0,c
  5821  002572                     l3118:
  5822  002572  8E11               	bsf	(___flmul@b+2)^0,7,c
  5823  002574  EFC4  F012         	goto	l3122
  5824  002578                     l3120:
  5825  002578  0E00               	movlw	0
  5826  00257A  6E0F               	movwf	___flmul@b^0,c
  5827  00257C  0E00               	movlw	0
  5828  00257E  6E10               	movwf	(___flmul@b+1)^0,c
  5829  002580  0E00               	movlw	0
  5830  002582  6E11               	movwf	(___flmul@b+2)^0,c
  5831  002584  0E00               	movlw	0
  5832  002586  6E12               	movwf	(___flmul@b+3)^0,c
  5833  002588                     l3122:
  5834  002588  5016               	movf	(___flmul@a+3)^0,w,c
  5835  00258A  0B80               	andlw	128
  5836  00258C  1A1B               	xorwf	___flmul@sign^0,f,c
  5837  00258E  5016               	movf	(___flmul@a+3)^0,w,c
  5838  002590  2416               	addwf	(___flmul@a+3)^0,w,c
  5839  002592  6E20               	movwf	___flmul@aexp^0,c
  5840  002594  AE15               	btfss	(___flmul@a+2)^0,7,c
  5841  002596  EFCF  F012         	goto	u3491
  5842  00259A  EFD1  F012         	goto	u3490
  5843  00259E                     u3491:
  5844  00259E  EFD2  F012         	goto	l3130
  5845  0025A2                     u3490:
  5846  0025A2  8020               	bsf	___flmul@aexp^0,0,c
  5847  0025A4                     l3130:
  5848  0025A4  5020               	movf	___flmul@aexp^0,w,c
  5849  0025A6  B4D8               	btfsc	status,2,c
  5850  0025A8  EFD8  F012         	goto	u3501
  5851  0025AC  EFDA  F012         	goto	u3500
  5852  0025B0                     u3501:
  5853  0025B0  EFED  F012         	goto	l3138
  5854  0025B4                     u3500:
  5855  0025B4  2820               	incf	___flmul@aexp^0,w,c
  5856  0025B6  A4D8               	btfss	status,2,c
  5857  0025B8  EFE0  F012         	goto	u3511
  5858  0025BC  EFE2  F012         	goto	u3510
  5859  0025C0                     u3511:
  5860  0025C0  EFEA  F012         	goto	l3136
  5861  0025C4                     u3510:
  5862  0025C4  0E00               	movlw	0
  5863  0025C6  6E13               	movwf	___flmul@a^0,c
  5864  0025C8  0E00               	movlw	0
  5865  0025CA  6E14               	movwf	(___flmul@a+1)^0,c
  5866  0025CC  0E00               	movlw	0
  5867  0025CE  6E15               	movwf	(___flmul@a+2)^0,c
  5868  0025D0  0E00               	movlw	0
  5869  0025D2  6E16               	movwf	(___flmul@a+3)^0,c
  5870  0025D4                     l3136:
  5871  0025D4  8E15               	bsf	(___flmul@a+2)^0,7,c
  5872  0025D6  EFF5  F012         	goto	l960
  5873  0025DA                     l3138:
  5874  0025DA  0E00               	movlw	0
  5875  0025DC  6E13               	movwf	___flmul@a^0,c
  5876  0025DE  0E00               	movlw	0
  5877  0025E0  6E14               	movwf	(___flmul@a+1)^0,c
  5878  0025E2  0E00               	movlw	0
  5879  0025E4  6E15               	movwf	(___flmul@a+2)^0,c
  5880  0025E6  0E00               	movlw	0
  5881  0025E8  6E16               	movwf	(___flmul@a+3)^0,c
  5882  0025EA                     l960:
  5883  0025EA  5020               	movf	___flmul@aexp^0,w,c
  5884  0025EC  B4D8               	btfsc	status,2,c
  5885  0025EE  EFFB  F012         	goto	u3521
  5886  0025F2  EFFD  F012         	goto	u3520
  5887  0025F6                     u3521:
  5888  0025F6  EF05  F013         	goto	l3142
  5889  0025FA                     u3520:
  5890  0025FA  5021               	movf	___flmul@bexp^0,w,c
  5891  0025FC  A4D8               	btfss	status,2,c
  5892  0025FE  EF03  F013         	goto	u3531
  5893  002602  EF05  F013         	goto	u3530
  5894  002606                     u3531:
  5895  002606  EF0F  F013         	goto	l3146
  5896  00260A                     u3530:
  5897  00260A                     l3142:
  5898  00260A  0E00               	movlw	0
  5899  00260C  6E0F               	movwf	?___flmul^0,c
  5900  00260E  0E00               	movlw	0
  5901  002610  6E10               	movwf	(?___flmul+1)^0,c
  5902  002612  0E00               	movlw	0
  5903  002614  6E11               	movwf	(?___flmul+2)^0,c
  5904  002616  0E00               	movlw	0
  5905  002618  6E12               	movwf	(?___flmul+3)^0,c
  5906  00261A  EFA7  F014         	goto	l964
  5907  00261E                     l3146:
  5908  00261E  5015               	movf	(___flmul@a+2)^0,w,c
  5909  002620  020F               	mulwf	___flmul@b^0,c
  5910  002622  CFF3 F026          	movff	prodl,___flmul@temp
  5911  002626  CFF4 F027          	movff	prodh,___flmul@temp+1
  5912  00262A  5026               	movf	___flmul@temp^0,w,c
  5913  00262C  6E1C               	movwf	___flmul@grs^0,c
  5914  00262E  6A1D               	clrf	(___flmul@grs+1)^0,c
  5915  002630  6A1E               	clrf	(___flmul@grs+2)^0,c
  5916  002632  6A1F               	clrf	(___flmul@grs+3)^0,c
  5917  002634  5027               	movf	(___flmul@temp+1)^0,w,c
  5918  002636  6E22               	movwf	___flmul@prod^0,c
  5919  002638  6A23               	clrf	(___flmul@prod+1)^0,c
  5920  00263A  6A24               	clrf	(___flmul@prod+2)^0,c
  5921  00263C  6A25               	clrf	(___flmul@prod+3)^0,c
  5922  00263E  5014               	movf	(___flmul@a+1)^0,w,c
  5923  002640  0210               	mulwf	(___flmul@b+1)^0,c
  5924  002642  CFF3 F026          	movff	prodl,___flmul@temp
  5925  002646  CFF4 F027          	movff	prodh,___flmul@temp+1
  5926  00264A  5026               	movf	___flmul@temp^0,w,c
  5927  00264C  261C               	addwf	___flmul@grs^0,f,c
  5928  00264E  0E00               	movlw	0
  5929  002650  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5930  002652  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5931  002654  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5932  002656  5027               	movf	(___flmul@temp+1)^0,w,c
  5933  002658  2622               	addwf	___flmul@prod^0,f,c
  5934  00265A  0E00               	movlw	0
  5935  00265C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5936  00265E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5937  002660  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5938  002662  5013               	movf	___flmul@a^0,w,c
  5939  002664  0211               	mulwf	(___flmul@b+2)^0,c
  5940  002666  CFF3 F026          	movff	prodl,___flmul@temp
  5941  00266A  CFF4 F027          	movff	prodh,___flmul@temp+1
  5942  00266E  5026               	movf	___flmul@temp^0,w,c
  5943  002670  261C               	addwf	___flmul@grs^0,f,c
  5944  002672  0E00               	movlw	0
  5945  002674  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5946  002676  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5947  002678  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5948  00267A  5027               	movf	(___flmul@temp+1)^0,w,c
  5949  00267C  2622               	addwf	___flmul@prod^0,f,c
  5950  00267E  0E00               	movlw	0
  5951  002680  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5952  002682  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5953  002684  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5954  002686  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5955  00268A  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5956  00268E  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5957  002692  6A1C               	clrf	___flmul@grs^0,c
  5958  002694  5013               	movf	___flmul@a^0,w,c
  5959  002696  0210               	mulwf	(___flmul@b+1)^0,c
  5960  002698  CFF3 F026          	movff	prodl,___flmul@temp
  5961  00269C  CFF4 F027          	movff	prodh,___flmul@temp+1
  5962  0026A0  5026               	movf	___flmul@temp^0,w,c
  5963  0026A2  261C               	addwf	___flmul@grs^0,f,c
  5964  0026A4  5027               	movf	(___flmul@temp+1)^0,w,c
  5965  0026A6  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5966  0026A8  0E00               	movlw	0
  5967  0026AA  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5968  0026AC  0E00               	movlw	0
  5969  0026AE  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5970  0026B0  5014               	movf	(___flmul@a+1)^0,w,c
  5971  0026B2  020F               	mulwf	___flmul@b^0,c
  5972  0026B4  CFF3 F026          	movff	prodl,___flmul@temp
  5973  0026B8  CFF4 F027          	movff	prodh,___flmul@temp+1
  5974  0026BC  5026               	movf	___flmul@temp^0,w,c
  5975  0026BE  261C               	addwf	___flmul@grs^0,f,c
  5976  0026C0  5027               	movf	(___flmul@temp+1)^0,w,c
  5977  0026C2  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5978  0026C4  0E00               	movlw	0
  5979  0026C6  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5980  0026C8  0E00               	movlw	0
  5981  0026CA  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5982  0026CC  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5983  0026D0  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5984  0026D4  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5985  0026D8  6A1C               	clrf	___flmul@grs^0,c
  5986  0026DA  5013               	movf	___flmul@a^0,w,c
  5987  0026DC  020F               	mulwf	___flmul@b^0,c
  5988  0026DE  CFF3 F026          	movff	prodl,___flmul@temp
  5989  0026E2  CFF4 F027          	movff	prodh,___flmul@temp+1
  5990  0026E6  5026               	movf	___flmul@temp^0,w,c
  5991  0026E8  261C               	addwf	___flmul@grs^0,f,c
  5992  0026EA  5027               	movf	(___flmul@temp+1)^0,w,c
  5993  0026EC  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5994  0026EE  0E00               	movlw	0
  5995  0026F0  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5996  0026F2  0E00               	movlw	0
  5997  0026F4  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5998  0026F6  5015               	movf	(___flmul@a+2)^0,w,c
  5999  0026F8  0210               	mulwf	(___flmul@b+1)^0,c
  6000  0026FA  CFF3 F026          	movff	prodl,___flmul@temp
  6001  0026FE  CFF4 F027          	movff	prodh,___flmul@temp+1
  6002  002702  5026               	movf	___flmul@temp^0,w,c
  6003  002704  2622               	addwf	___flmul@prod^0,f,c
  6004  002706  5027               	movf	(___flmul@temp+1)^0,w,c
  6005  002708  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6006  00270A  0E00               	movlw	0
  6007  00270C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6008  00270E  0E00               	movlw	0
  6009  002710  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6010  002712  5014               	movf	(___flmul@a+1)^0,w,c
  6011  002714  0211               	mulwf	(___flmul@b+2)^0,c
  6012  002716  CFF3 F026          	movff	prodl,___flmul@temp
  6013  00271A  CFF4 F027          	movff	prodh,___flmul@temp+1
  6014  00271E  5026               	movf	___flmul@temp^0,w,c
  6015  002720  2622               	addwf	___flmul@prod^0,f,c
  6016  002722  5027               	movf	(___flmul@temp+1)^0,w,c
  6017  002724  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6018  002726  0E00               	movlw	0
  6019  002728  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6020  00272A  0E00               	movlw	0
  6021  00272C  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6022  00272E  5015               	movf	(___flmul@a+2)^0,w,c
  6023  002730  0211               	mulwf	(___flmul@b+2)^0,c
  6024  002732  CFF3 F026          	movff	prodl,___flmul@temp
  6025  002736  CFF4 F027          	movff	prodh,___flmul@temp+1
  6026  00273A  5026               	movf	___flmul@temp^0,w,c
  6027  00273C  6E17               	movwf	??___flmul^0,c
  6028  00273E  5027               	movf	(___flmul@temp+1)^0,w,c
  6029  002740  6E18               	movwf	(??___flmul+1)^0,c
  6030  002742  6A19               	clrf	(??___flmul+2)^0,c
  6031  002744  6A1A               	clrf	(??___flmul+3)^0,c
  6032  002746  C019  F01A         	movff	??___flmul+2,??___flmul+3
  6033  00274A  C018  F019         	movff	??___flmul+1,??___flmul+2
  6034  00274E  C017  F018         	movff	??___flmul,??___flmul+1
  6035  002752  6A17               	clrf	??___flmul^0,c
  6036  002754  5017               	movf	??___flmul^0,w,c
  6037  002756  2622               	addwf	___flmul@prod^0,f,c
  6038  002758  5018               	movf	(??___flmul+1)^0,w,c
  6039  00275A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6040  00275C  5019               	movf	(??___flmul+2)^0,w,c
  6041  00275E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6042  002760  501A               	movf	(??___flmul+3)^0,w,c
  6043  002762  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6044  002764  C01C  F017         	movff	___flmul@grs,??___flmul
  6045  002768  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  6046  00276C  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  6047  002770  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  6048  002774  0E19               	movlw	25
  6049  002776  EFC2  F013         	goto	u3540
  6050  00277A                     u3545:
  6051  00277A  90D8               	bcf	status,0,c
  6052  00277C  321A               	rrcf	(??___flmul+3)^0,f,c
  6053  00277E  3219               	rrcf	(??___flmul+2)^0,f,c
  6054  002780  3218               	rrcf	(??___flmul+1)^0,f,c
  6055  002782  3217               	rrcf	??___flmul^0,f,c
  6056  002784                     u3540:
  6057  002784  2EE8               	decfsz	wreg,f,c
  6058  002786  EFBD  F013         	goto	u3545
  6059  00278A  5017               	movf	??___flmul^0,w,c
  6060  00278C  2622               	addwf	___flmul@prod^0,f,c
  6061  00278E  5018               	movf	(??___flmul+1)^0,w,c
  6062  002790  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6063  002792  5019               	movf	(??___flmul+2)^0,w,c
  6064  002794  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6065  002796  501A               	movf	(??___flmul+3)^0,w,c
  6066  002798  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6067  00279A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6068  00279E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6069  0027A2  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6070  0027A6  6A1C               	clrf	___flmul@grs^0,c
  6071  0027A8  5020               	movf	___flmul@aexp^0,w,c
  6072  0027AA  C021  F017         	movff	___flmul@bexp,??___flmul
  6073  0027AE  6A18               	clrf	(??___flmul+1)^0,c
  6074  0027B0  2617               	addwf	??___flmul^0,f,c
  6075  0027B2  0E00               	movlw	0
  6076  0027B4  2218               	addwfc	(??___flmul+1)^0,f,c
  6077  0027B6  0E82               	movlw	130
  6078  0027B8  2417               	addwf	??___flmul^0,w,c
  6079  0027BA  6E26               	movwf	___flmul@temp^0,c
  6080  0027BC  0EFF               	movlw	255
  6081  0027BE  2018               	addwfc	(??___flmul+1)^0,w,c
  6082  0027C0  6E27               	movwf	(___flmul@temp+1)^0,c
  6083  0027C2  EFF8  F013         	goto	l3194
  6084  0027C6                     l3188:
  6085  0027C6  90D8               	bcf	status,0,c
  6086  0027C8  3622               	rlcf	___flmul@prod^0,f,c
  6087  0027CA  3623               	rlcf	(___flmul@prod+1)^0,f,c
  6088  0027CC  3624               	rlcf	(___flmul@prod+2)^0,f,c
  6089  0027CE  3625               	rlcf	(___flmul@prod+3)^0,f,c
  6090  0027D0  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  6091  0027D2  EFED  F013         	goto	u3551
  6092  0027D6  EFEF  F013         	goto	u3550
  6093  0027DA                     u3551:
  6094  0027DA  EFF0  F013         	goto	l967
  6095  0027DE                     u3550:
  6096  0027DE  8022               	bsf	___flmul@prod^0,0,c
  6097  0027E0                     l967:
  6098  0027E0  90D8               	bcf	status,0,c
  6099  0027E2  361C               	rlcf	___flmul@grs^0,f,c
  6100  0027E4  361D               	rlcf	(___flmul@grs+1)^0,f,c
  6101  0027E6  361E               	rlcf	(___flmul@grs+2)^0,f,c
  6102  0027E8  361F               	rlcf	(___flmul@grs+3)^0,f,c
  6103  0027EA  0626               	decf	___flmul@temp^0,f,c
  6104  0027EC  A0D8               	btfss	status,0,c
  6105  0027EE  0627               	decf	(___flmul@temp+1)^0,f,c
  6106  0027F0                     l3194:
  6107  0027F0  AE24               	btfss	(___flmul@prod+2)^0,7,c
  6108  0027F2  EFFD  F013         	goto	u3561
  6109  0027F6  EFFF  F013         	goto	u3560
  6110  0027FA                     u3561:
  6111  0027FA  EFE3  F013         	goto	l3188
  6112  0027FE                     u3560:
  6113  0027FE  0E00               	movlw	0
  6114  002800  6E20               	movwf	___flmul@aexp^0,c
  6115  002802  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  6116  002804  EF06  F014         	goto	u3571
  6117  002808  EF08  F014         	goto	u3570
  6118  00280C                     u3571:
  6119  00280C  EF2C  F014         	goto	l969
  6120  002810                     u3570:
  6121  002810  0EFF               	movlw	255
  6122  002812  141C               	andwf	___flmul@grs^0,w,c
  6123  002814  6E17               	movwf	??___flmul^0,c
  6124  002816  0EFF               	movlw	255
  6125  002818  141D               	andwf	(___flmul@grs+1)^0,w,c
  6126  00281A  6E18               	movwf	(??___flmul+1)^0,c
  6127  00281C  0EFF               	movlw	255
  6128  00281E  141E               	andwf	(___flmul@grs+2)^0,w,c
  6129  002820  6E19               	movwf	(??___flmul+2)^0,c
  6130  002822  0E7F               	movlw	127
  6131  002824  141F               	andwf	(___flmul@grs+3)^0,w,c
  6132  002826  6E1A               	movwf	(??___flmul+3)^0,c
  6133  002828  5017               	movf	??___flmul^0,w,c
  6134  00282A  1018               	iorwf	(??___flmul+1)^0,w,c
  6135  00282C  1019               	iorwf	(??___flmul+2)^0,w,c
  6136  00282E  101A               	iorwf	(??___flmul+3)^0,w,c
  6137  002830  B4D8               	btfsc	status,2,c
  6138  002832  EF1D  F014         	goto	u3581
  6139  002836  EF1F  F014         	goto	u3580
  6140  00283A                     u3581:
  6141  00283A  EF23  F014         	goto	l970
  6142  00283E                     u3580:
  6143  00283E                     l3202:
  6144  00283E  0E01               	movlw	1
  6145  002840  6E20               	movwf	___flmul@aexp^0,c
  6146  002842  EF2C  F014         	goto	l969
  6147  002846                     l970:
  6148  002846  A022               	btfss	___flmul@prod^0,0,c
  6149  002848  EF28  F014         	goto	u3591
  6150  00284C  EF2A  F014         	goto	u3590
  6151  002850                     u3591:
  6152  002850  EF2C  F014         	goto	l969
  6153  002854                     u3590:
  6154  002854  EF1F  F014         	goto	l3202
  6155  002858                     l969:
  6156  002858  5020               	movf	___flmul@aexp^0,w,c
  6157  00285A  B4D8               	btfsc	status,2,c
  6158  00285C  EF32  F014         	goto	u3601
  6159  002860  EF34  F014         	goto	u3600
  6160  002864                     u3601:
  6161  002864  EF58  F014         	goto	l3214
  6162  002868                     u3600:
  6163  002868  0E01               	movlw	1
  6164  00286A  2622               	addwf	___flmul@prod^0,f,c
  6165  00286C  0E00               	movlw	0
  6166  00286E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6167  002870  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6168  002872  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6169  002874  A025               	btfss	(___flmul@prod+3)^0,0,c
  6170  002876  EF3F  F014         	goto	u3611
  6171  00287A  EF41  F014         	goto	u3610
  6172  00287E                     u3611:
  6173  00287E  EF58  F014         	goto	l3214
  6174  002882                     u3610:
  6175  002882  C022  F017         	movff	___flmul@prod,??___flmul
  6176  002886  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  6177  00288A  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  6178  00288E  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  6179  002892  341A               	rlcf	(??___flmul+3)^0,w,c
  6180  002894  321A               	rrcf	(??___flmul+3)^0,f,c
  6181  002896  3219               	rrcf	(??___flmul+2)^0,f,c
  6182  002898  3218               	rrcf	(??___flmul+1)^0,f,c
  6183  00289A  3217               	rrcf	??___flmul^0,f,c
  6184  00289C  C017  F022         	movff	??___flmul,___flmul@prod
  6185  0028A0  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  6186  0028A4  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  6187  0028A8  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  6188  0028AC  4A26               	infsnz	___flmul@temp^0,f,c
  6189  0028AE  2A27               	incf	(___flmul@temp+1)^0,f,c
  6190  0028B0                     l3214:
  6191  0028B0  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  6192  0028B2  EF63  F014         	goto	u3621
  6193  0028B6  5027               	movf	(___flmul@temp+1)^0,w,c
  6194  0028B8  E108               	bnz	u3620
  6195  0028BA  2826               	incf	___flmul@temp^0,w,c
  6196  0028BC  A0D8               	btfss	status,0,c
  6197  0028BE  EF63  F014         	goto	u3621
  6198  0028C2  EF65  F014         	goto	u3620
  6199  0028C6                     u3621:
  6200  0028C6  EF6F  F014         	goto	l3218
  6201  0028CA                     u3620:
  6202  0028CA  0E00               	movlw	0
  6203  0028CC  6E22               	movwf	___flmul@prod^0,c
  6204  0028CE  0E00               	movlw	0
  6205  0028D0  6E23               	movwf	(___flmul@prod+1)^0,c
  6206  0028D2  0E80               	movlw	128
  6207  0028D4  6E24               	movwf	(___flmul@prod+2)^0,c
  6208  0028D6  0E7F               	movlw	127
  6209  0028D8  6E25               	movwf	(___flmul@prod+3)^0,c
  6210  0028DA  EF9D  F014         	goto	l3230
  6211  0028DE                     l3218:
  6212  0028DE  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  6213  0028E0  EF7C  F014         	goto	u3630
  6214  0028E4  5027               	movf	(___flmul@temp+1)^0,w,c
  6215  0028E6  E106               	bnz	u3631
  6216  0028E8  0426               	decf	___flmul@temp^0,w,c
  6217  0028EA  B0D8               	btfsc	status,0,c
  6218  0028EC  EF7A  F014         	goto	u3631
  6219  0028F0  EF7C  F014         	goto	u3630
  6220  0028F4                     u3631:
  6221  0028F4  EF88  F014         	goto	l977
  6222  0028F8                     u3630:
  6223  0028F8  0E00               	movlw	0
  6224  0028FA  6E22               	movwf	___flmul@prod^0,c
  6225  0028FC  0E00               	movlw	0
  6226  0028FE  6E23               	movwf	(___flmul@prod+1)^0,c
  6227  002900  0E00               	movlw	0
  6228  002902  6E24               	movwf	(___flmul@prod+2)^0,c
  6229  002904  0E00               	movlw	0
  6230  002906  6E25               	movwf	(___flmul@prod+3)^0,c
  6231  002908  0E00               	movlw	0
  6232  00290A  6E1B               	movwf	___flmul@sign^0,c
  6233  00290C  EF9D  F014         	goto	l3230
  6234  002910                     l977:
  6235  002910  C026  F021         	movff	___flmul@temp,___flmul@bexp
  6236  002914  0EFF               	movlw	255
  6237  002916  1622               	andwf	___flmul@prod^0,f,c
  6238  002918  0EFF               	movlw	255
  6239  00291A  1623               	andwf	(___flmul@prod+1)^0,f,c
  6240  00291C  0E7F               	movlw	127
  6241  00291E  1624               	andwf	(___flmul@prod+2)^0,f,c
  6242  002920  0E00               	movlw	0
  6243  002922  1625               	andwf	(___flmul@prod+3)^0,f,c
  6244  002924  A021               	btfss	___flmul@bexp^0,0,c
  6245  002926  EF97  F014         	goto	u3641
  6246  00292A  EF99  F014         	goto	u3640
  6247  00292E                     u3641:
  6248  00292E  EF9A  F014         	goto	l3228
  6249  002932                     u3640:
  6250  002932  8E24               	bsf	(___flmul@prod+2)^0,7,c
  6251  002934                     l3228:
  6252  002934  90D8               	bcf	status,0,c
  6253  002936  3021               	rrcf	___flmul@bexp^0,w,c
  6254  002938  6E25               	movwf	(___flmul@prod+3)^0,c
  6255  00293A                     l3230:
  6256  00293A  501B               	movf	___flmul@sign^0,w,c
  6257  00293C  1225               	iorwf	(___flmul@prod+3)^0,f,c
  6258  00293E  C022  F00F         	movff	___flmul@prod,?___flmul
  6259  002942  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  6260  002946  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  6261  00294A  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  6262  00294E                     l964:
  6263  00294E  0012               	return		;funcret
  6264  002950                     __end_of___flmul:
  6265                           	opt callstack 0
  6266                           
  6267 ;; *************** function ___flge *****************
  6268 ;; Defined at:
  6269 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
  6270 ;; Parameters:    Size  Location     Type
  6271 ;;  ff1             4   39[COMRAM] unsigned char 
  6272 ;;  ff2             4   43[COMRAM] unsigned char 
  6273 ;; Auto vars:     Size  Location     Type
  6274 ;;		None
  6275 ;; Return value:  Size  Location     Type
  6276 ;;		None               void
  6277 ;; Registers used:
  6278 ;;		wreg, status,2, status,0
  6279 ;; Tracked objects:
  6280 ;;		On entry : 0/0
  6281 ;;		On exit  : 0/0
  6282 ;;		Unchanged: 0/0
  6283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6284 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6286 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6287 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6288 ;;Total ram usage:       12 bytes
  6289 ;; Hardware stack levels used:    1
  6290 ;; This function calls:
  6291 ;;		Nothing
  6292 ;; This function is called by:
  6293 ;;		_efgtoa
  6294 ;; This function uses a non-reentrant model
  6295 ;;
  6296                           
  6297                           	psect	text21
  6298  003490                     __ptext21:
  6299                           	opt callstack 0
  6300  003490                     ___flge:
  6301                           	opt callstack 26
  6302  003490  0E00               	movlw	0
  6303  003492  1428               	andwf	___flge@ff1^0,w,c
  6304  003494  6E30               	movwf	??___flge^0,c
  6305  003496  0E00               	movlw	0
  6306  003498  1429               	andwf	(___flge@ff1+1)^0,w,c
  6307  00349A  6E31               	movwf	(??___flge+1)^0,c
  6308  00349C  0E80               	movlw	128
  6309  00349E  142A               	andwf	(___flge@ff1+2)^0,w,c
  6310  0034A0  6E32               	movwf	(??___flge+2)^0,c
  6311  0034A2  0E7F               	movlw	127
  6312  0034A4  142B               	andwf	(___flge@ff1+3)^0,w,c
  6313  0034A6  6E33               	movwf	(??___flge+3)^0,c
  6314  0034A8  5030               	movf	??___flge^0,w,c
  6315  0034AA  1031               	iorwf	(??___flge+1)^0,w,c
  6316  0034AC  1032               	iorwf	(??___flge+2)^0,w,c
  6317  0034AE  1033               	iorwf	(??___flge+3)^0,w,c
  6318  0034B0  A4D8               	btfss	status,2,c
  6319  0034B2  EF5D  F01A         	goto	u3801
  6320  0034B6  EF5F  F01A         	goto	u3800
  6321  0034BA                     u3801:
  6322  0034BA  EF67  F01A         	goto	l3342
  6323  0034BE                     u3800:
  6324  0034BE  0E00               	movlw	0
  6325  0034C0  6E28               	movwf	___flge@ff1^0,c
  6326  0034C2  0E00               	movlw	0
  6327  0034C4  6E29               	movwf	(___flge@ff1+1)^0,c
  6328  0034C6  0E00               	movlw	0
  6329  0034C8  6E2A               	movwf	(___flge@ff1+2)^0,c
  6330  0034CA  0E00               	movlw	0
  6331  0034CC  6E2B               	movwf	(___flge@ff1+3)^0,c
  6332  0034CE                     l3342:
  6333  0034CE  0E00               	movlw	0
  6334  0034D0  142C               	andwf	___flge@ff2^0,w,c
  6335  0034D2  6E30               	movwf	??___flge^0,c
  6336  0034D4  0E00               	movlw	0
  6337  0034D6  142D               	andwf	(___flge@ff2+1)^0,w,c
  6338  0034D8  6E31               	movwf	(??___flge+1)^0,c
  6339  0034DA  0E80               	movlw	128
  6340  0034DC  142E               	andwf	(___flge@ff2+2)^0,w,c
  6341  0034DE  6E32               	movwf	(??___flge+2)^0,c
  6342  0034E0  0E7F               	movlw	127
  6343  0034E2  142F               	andwf	(___flge@ff2+3)^0,w,c
  6344  0034E4  6E33               	movwf	(??___flge+3)^0,c
  6345  0034E6  5030               	movf	??___flge^0,w,c
  6346  0034E8  1031               	iorwf	(??___flge+1)^0,w,c
  6347  0034EA  1032               	iorwf	(??___flge+2)^0,w,c
  6348  0034EC  1033               	iorwf	(??___flge+3)^0,w,c
  6349  0034EE  A4D8               	btfss	status,2,c
  6350  0034F0  EF7C  F01A         	goto	u3811
  6351  0034F4  EF7E  F01A         	goto	u3810
  6352  0034F8                     u3811:
  6353  0034F8  EF86  F01A         	goto	l3346
  6354  0034FC                     u3810:
  6355  0034FC  0E00               	movlw	0
  6356  0034FE  6E2C               	movwf	___flge@ff2^0,c
  6357  003500  0E00               	movlw	0
  6358  003502  6E2D               	movwf	(___flge@ff2+1)^0,c
  6359  003504  0E00               	movlw	0
  6360  003506  6E2E               	movwf	(___flge@ff2+2)^0,c
  6361  003508  0E00               	movlw	0
  6362  00350A  6E2F               	movwf	(___flge@ff2+3)^0,c
  6363  00350C                     l3346:
  6364  00350C  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  6365  00350E  EF8B  F01A         	goto	u3821
  6366  003512  EF8D  F01A         	goto	u3820
  6367  003516                     u3821:
  6368  003516  EF96  F01A         	goto	l3350
  6369  00351A                     u3820:
  6370  00351A  6C28               	negf	___flge@ff1^0,c
  6371  00351C  1E29               	comf	(___flge@ff1+1)^0,f,c
  6372  00351E  B0D8               	btfsc	status,0,c
  6373  003520  2A29               	incf	(___flge@ff1+1)^0,f,c
  6374  003522  1E2A               	comf	(___flge@ff1+2)^0,f,c
  6375  003524  B0D8               	btfsc	status,0,c
  6376  003526  2A2A               	incf	(___flge@ff1+2)^0,f,c
  6377  003528  0E80               	movlw	128
  6378  00352A  562B               	subfwb	(___flge@ff1+3)^0,f,c
  6379  00352C                     l3350:
  6380  00352C  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  6381  00352E  EF9B  F01A         	goto	u3831
  6382  003532  EF9D  F01A         	goto	u3830
  6383  003536                     u3831:
  6384  003536  EFA6  F01A         	goto	l611
  6385  00353A                     u3830:
  6386  00353A  6C2C               	negf	___flge@ff2^0,c
  6387  00353C  1E2D               	comf	(___flge@ff2+1)^0,f,c
  6388  00353E  B0D8               	btfsc	status,0,c
  6389  003540  2A2D               	incf	(___flge@ff2+1)^0,f,c
  6390  003542  1E2E               	comf	(___flge@ff2+2)^0,f,c
  6391  003544  B0D8               	btfsc	status,0,c
  6392  003546  2A2E               	incf	(___flge@ff2+2)^0,f,c
  6393  003548  0E80               	movlw	128
  6394  00354A  562F               	subfwb	(___flge@ff2+3)^0,f,c
  6395  00354C                     l611:
  6396  00354C  0E00               	movlw	0
  6397  00354E  1A28               	xorwf	___flge@ff1^0,f,c
  6398  003550  0E00               	movlw	0
  6399  003552  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  6400  003554  0E00               	movlw	0
  6401  003556  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  6402  003558  0E80               	movlw	128
  6403  00355A  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  6404  00355C  0E00               	movlw	0
  6405  00355E  1A2C               	xorwf	___flge@ff2^0,f,c
  6406  003560  0E00               	movlw	0
  6407  003562  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  6408  003564  0E00               	movlw	0
  6409  003566  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  6410  003568  0E80               	movlw	128
  6411  00356A  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  6412  00356C  502C               	movf	___flge@ff2^0,w,c
  6413  00356E  5C28               	subwf	___flge@ff1^0,w,c
  6414  003570  502D               	movf	(___flge@ff2+1)^0,w,c
  6415  003572  5829               	subwfb	(___flge@ff1+1)^0,w,c
  6416  003574  502E               	movf	(___flge@ff2+2)^0,w,c
  6417  003576  582A               	subwfb	(___flge@ff1+2)^0,w,c
  6418  003578  502F               	movf	(___flge@ff2+3)^0,w,c
  6419  00357A  582B               	subwfb	(___flge@ff1+3)^0,w,c
  6420  00357C  B0D8               	btfsc	status,0,c
  6421  00357E  EFC3  F01A         	goto	u3841
  6422  003582  EFC5  F01A         	goto	u3840
  6423  003586                     u3841:
  6424  003586  EFC8  F01A         	goto	l3356
  6425  00358A                     u3840:
  6426  00358A  90D8               	bcf	status,0,c
  6427  00358C  EFC9  F01A         	goto	l616
  6428  003590                     l3356:
  6429  003590  80D8               	bsf	status,0,c
  6430  003592                     l616:
  6431  003592  0012               	return		;funcret
  6432  003594                     __end_of___flge:
  6433                           	opt callstack 0
  6434                           
  6435 ;; *************** function ___fleq *****************
  6436 ;; Defined at:
  6437 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  6438 ;; Parameters:    Size  Location     Type
  6439 ;;  ff1             4    0[COMRAM] unsigned char 
  6440 ;;  ff2             4    4[COMRAM] unsigned char 
  6441 ;; Auto vars:     Size  Location     Type
  6442 ;;		None
  6443 ;; Return value:  Size  Location     Type
  6444 ;;		None               void
  6445 ;; Registers used:
  6446 ;;		wreg, status,2, status,0
  6447 ;; Tracked objects:
  6448 ;;		On entry : 0/0
  6449 ;;		On exit  : 0/0
  6450 ;;		Unchanged: 0/0
  6451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6452 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6454 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6455 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6456 ;;Total ram usage:       12 bytes
  6457 ;; Hardware stack levels used:    1
  6458 ;; This function calls:
  6459 ;;		Nothing
  6460 ;; This function is called by:
  6461 ;;		_efgtoa
  6462 ;; This function uses a non-reentrant model
  6463 ;;
  6464                           
  6465                           	psect	text22
  6466  003A6C                     __ptext22:
  6467                           	opt callstack 0
  6468  003A6C                     ___fleq:
  6469                           	opt callstack 26
  6470  003A6C  0E00               	movlw	0
  6471  003A6E  1401               	andwf	___fleq@ff1^0,w,c
  6472  003A70  6E09               	movwf	??___fleq^0,c
  6473  003A72  0E00               	movlw	0
  6474  003A74  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6475  003A76  6E0A               	movwf	(??___fleq+1)^0,c
  6476  003A78  0E80               	movlw	128
  6477  003A7A  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6478  003A7C  6E0B               	movwf	(??___fleq+2)^0,c
  6479  003A7E  0E7F               	movlw	127
  6480  003A80  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6481  003A82  6E0C               	movwf	(??___fleq+3)^0,c
  6482  003A84  5009               	movf	??___fleq^0,w,c
  6483  003A86  100A               	iorwf	(??___fleq+1)^0,w,c
  6484  003A88  100B               	iorwf	(??___fleq+2)^0,w,c
  6485  003A8A  100C               	iorwf	(??___fleq+3)^0,w,c
  6486  003A8C  A4D8               	btfss	status,2,c
  6487  003A8E  EF4B  F01D         	goto	u3771
  6488  003A92  EF4D  F01D         	goto	u3770
  6489  003A96                     u3771:
  6490  003A96  EF55  F01D         	goto	l3326
  6491  003A9A                     u3770:
  6492  003A9A  0E00               	movlw	0
  6493  003A9C  6E01               	movwf	___fleq@ff1^0,c
  6494  003A9E  0E00               	movlw	0
  6495  003AA0  6E02               	movwf	(___fleq@ff1+1)^0,c
  6496  003AA2  0E00               	movlw	0
  6497  003AA4  6E03               	movwf	(___fleq@ff1+2)^0,c
  6498  003AA6  0E00               	movlw	0
  6499  003AA8  6E04               	movwf	(___fleq@ff1+3)^0,c
  6500  003AAA                     l3326:
  6501  003AAA  0E00               	movlw	0
  6502  003AAC  1405               	andwf	___fleq@ff2^0,w,c
  6503  003AAE  6E09               	movwf	??___fleq^0,c
  6504  003AB0  0E00               	movlw	0
  6505  003AB2  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6506  003AB4  6E0A               	movwf	(??___fleq+1)^0,c
  6507  003AB6  0E80               	movlw	128
  6508  003AB8  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6509  003ABA  6E0B               	movwf	(??___fleq+2)^0,c
  6510  003ABC  0E7F               	movlw	127
  6511  003ABE  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6512  003AC0  6E0C               	movwf	(??___fleq+3)^0,c
  6513  003AC2  5009               	movf	??___fleq^0,w,c
  6514  003AC4  100A               	iorwf	(??___fleq+1)^0,w,c
  6515  003AC6  100B               	iorwf	(??___fleq+2)^0,w,c
  6516  003AC8  100C               	iorwf	(??___fleq+3)^0,w,c
  6517  003ACA  A4D8               	btfss	status,2,c
  6518  003ACC  EF6A  F01D         	goto	u3781
  6519  003AD0  EF6C  F01D         	goto	u3780
  6520  003AD4                     u3781:
  6521  003AD4  EF74  F01D         	goto	l3330
  6522  003AD8                     u3780:
  6523  003AD8  0E00               	movlw	0
  6524  003ADA  6E05               	movwf	___fleq@ff2^0,c
  6525  003ADC  0E00               	movlw	0
  6526  003ADE  6E06               	movwf	(___fleq@ff2+1)^0,c
  6527  003AE0  0E00               	movlw	0
  6528  003AE2  6E07               	movwf	(___fleq@ff2+2)^0,c
  6529  003AE4  0E00               	movlw	0
  6530  003AE6  6E08               	movwf	(___fleq@ff2+3)^0,c
  6531  003AE8                     l3330:
  6532  003AE8  5005               	movf	___fleq@ff2^0,w,c
  6533  003AEA  1801               	xorwf	___fleq@ff1^0,w,c
  6534  003AEC  E10F               	bnz	u3790
  6535  003AEE  5006               	movf	(___fleq@ff2+1)^0,w,c
  6536  003AF0  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6537  003AF2  E10C               	bnz	u3790
  6538  003AF4  5007               	movf	(___fleq@ff2+2)^0,w,c
  6539  003AF6  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6540  003AF8  E109               	bnz	u3790
  6541  003AFA  5008               	movf	(___fleq@ff2+3)^0,w,c
  6542  003AFC  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6543  003AFE  B4D8               	btfsc	status,2,c
  6544  003B00  EF84  F01D         	goto	u3791
  6545  003B04  EF86  F01D         	goto	u3790
  6546  003B08                     u3791:
  6547  003B08  EF89  F01D         	goto	l3334
  6548  003B0C                     u3790:
  6549  003B0C  90D8               	bcf	status,0,c
  6550  003B0E  EF8A  F01D         	goto	l605
  6551  003B12                     l3334:
  6552  003B12  80D8               	bsf	status,0,c
  6553  003B14                     l605:
  6554  003B14  0012               	return		;funcret
  6555  003B16                     __end_of___fleq:
  6556                           	opt callstack 0
  6557                           
  6558 ;; *************** function ___fldiv *****************
  6559 ;; Defined at:
  6560 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
  6561 ;; Parameters:    Size  Location     Type
  6562 ;;  b               4   39[COMRAM] unsigned char 
  6563 ;;  a               4   43[COMRAM] unsigned char 
  6564 ;; Auto vars:     Size  Location     Type
  6565 ;;  grs             4   58[COMRAM] unsigned long 
  6566 ;;  rem             4   51[COMRAM] unsigned long 
  6567 ;;  new_exp         2   56[COMRAM] short 
  6568 ;;  aexp            1   63[COMRAM] unsigned char 
  6569 ;;  bexp            1   62[COMRAM] unsigned char 
  6570 ;;  sign            1   55[COMRAM] unsigned char 
  6571 ;; Return value:  Size  Location     Type
  6572 ;;                  4   39[COMRAM] unsigned char 
  6573 ;; Registers used:
  6574 ;;		wreg, status,2, status,0
  6575 ;; Tracked objects:
  6576 ;;		On entry : 0/0
  6577 ;;		On exit  : 0/0
  6578 ;;		Unchanged: 0/0
  6579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6580 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6581 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6582 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6583 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6584 ;;Total ram usage:       25 bytes
  6585 ;; Hardware stack levels used:    1
  6586 ;; This function calls:
  6587 ;;		Nothing
  6588 ;; This function is called by:
  6589 ;;		_main
  6590 ;;		_efgtoa
  6591 ;; This function uses a non-reentrant model
  6592 ;;
  6593                           
  6594                           	psect	text23
  6595  002950                     __ptext23:
  6596                           	opt callstack 0
  6597  002950                     ___fldiv:
  6598                           	opt callstack 26
  6599  002950  502B               	movf	(___fldiv@b+3)^0,w,c
  6600  002952  0B80               	andlw	128
  6601  002954  6E38               	movwf	___fldiv@sign^0,c
  6602  002956  502B               	movf	(___fldiv@b+3)^0,w,c
  6603  002958  242B               	addwf	(___fldiv@b+3)^0,w,c
  6604  00295A  6E3F               	movwf	___fldiv@bexp^0,c
  6605  00295C  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  6606  00295E  EFB3  F014         	goto	u3231
  6607  002962  EFB5  F014         	goto	u3230
  6608  002966                     u3231:
  6609  002966  EFB6  F014         	goto	l2974
  6610  00296A                     u3230:
  6611  00296A  803F               	bsf	___fldiv@bexp^0,0,c
  6612  00296C                     l2974:
  6613  00296C  503F               	movf	___fldiv@bexp^0,w,c
  6614  00296E  B4D8               	btfsc	status,2,c
  6615  002970  EFBC  F014         	goto	u3241
  6616  002974  EFBE  F014         	goto	u3240
  6617  002978                     u3241:
  6618  002978  EFD3  F014         	goto	l2984
  6619  00297C                     u3240:
  6620  00297C  283F               	incf	___fldiv@bexp^0,w,c
  6621  00297E  A4D8               	btfss	status,2,c
  6622  002980  EFC4  F014         	goto	u3251
  6623  002984  EFC6  F014         	goto	u3250
  6624  002988                     u3251:
  6625  002988  EFCE  F014         	goto	l2980
  6626  00298C                     u3250:
  6627  00298C  0E00               	movlw	0
  6628  00298E  6E28               	movwf	___fldiv@b^0,c
  6629  002990  0E00               	movlw	0
  6630  002992  6E29               	movwf	(___fldiv@b+1)^0,c
  6631  002994  0E00               	movlw	0
  6632  002996  6E2A               	movwf	(___fldiv@b+2)^0,c
  6633  002998  0E00               	movlw	0
  6634  00299A  6E2B               	movwf	(___fldiv@b+3)^0,c
  6635  00299C                     l2980:
  6636  00299C  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  6637  00299E  0E00               	movlw	0
  6638  0029A0  6E2B               	movwf	(___fldiv@b+3)^0,c
  6639  0029A2  EFDB  F014         	goto	l2986
  6640  0029A6                     l2984:
  6641  0029A6  0E00               	movlw	0
  6642  0029A8  6E28               	movwf	___fldiv@b^0,c
  6643  0029AA  0E00               	movlw	0
  6644  0029AC  6E29               	movwf	(___fldiv@b+1)^0,c
  6645  0029AE  0E00               	movlw	0
  6646  0029B0  6E2A               	movwf	(___fldiv@b+2)^0,c
  6647  0029B2  0E00               	movlw	0
  6648  0029B4  6E2B               	movwf	(___fldiv@b+3)^0,c
  6649  0029B6                     l2986:
  6650  0029B6  502F               	movf	(___fldiv@a+3)^0,w,c
  6651  0029B8  0B80               	andlw	128
  6652  0029BA  1A38               	xorwf	___fldiv@sign^0,f,c
  6653  0029BC  502F               	movf	(___fldiv@a+3)^0,w,c
  6654  0029BE  242F               	addwf	(___fldiv@a+3)^0,w,c
  6655  0029C0  6E40               	movwf	___fldiv@aexp^0,c
  6656  0029C2  AE2E               	btfss	(___fldiv@a+2)^0,7,c
  6657  0029C4  EFE6  F014         	goto	u3261
  6658  0029C8  EFE8  F014         	goto	u3260
  6659  0029CC                     u3261:
  6660  0029CC  EFE9  F014         	goto	l2994
  6661  0029D0                     u3260:
  6662  0029D0  8040               	bsf	___fldiv@aexp^0,0,c
  6663  0029D2                     l2994:
  6664  0029D2  5040               	movf	___fldiv@aexp^0,w,c
  6665  0029D4  B4D8               	btfsc	status,2,c
  6666  0029D6  EFEF  F014         	goto	u3271
  6667  0029DA  EFF1  F014         	goto	u3270
  6668  0029DE                     u3271:
  6669  0029DE  EF06  F015         	goto	l3004
  6670  0029E2                     u3270:
  6671  0029E2  2840               	incf	___fldiv@aexp^0,w,c
  6672  0029E4  A4D8               	btfss	status,2,c
  6673  0029E6  EFF7  F014         	goto	u3281
  6674  0029EA  EFF9  F014         	goto	u3280
  6675  0029EE                     u3281:
  6676  0029EE  EF01  F015         	goto	l3000
  6677  0029F2                     u3280:
  6678  0029F2  0E00               	movlw	0
  6679  0029F4  6E2C               	movwf	___fldiv@a^0,c
  6680  0029F6  0E00               	movlw	0
  6681  0029F8  6E2D               	movwf	(___fldiv@a+1)^0,c
  6682  0029FA  0E00               	movlw	0
  6683  0029FC  6E2E               	movwf	(___fldiv@a+2)^0,c
  6684  0029FE  0E00               	movlw	0
  6685  002A00  6E2F               	movwf	(___fldiv@a+3)^0,c
  6686  002A02                     l3000:
  6687  002A02  8E2E               	bsf	(___fldiv@a+2)^0,7,c
  6688  002A04  0E00               	movlw	0
  6689  002A06  6E2F               	movwf	(___fldiv@a+3)^0,c
  6690  002A08  EF0E  F015         	goto	l3006
  6691  002A0C                     l3004:
  6692  002A0C  0E00               	movlw	0
  6693  002A0E  6E2C               	movwf	___fldiv@a^0,c
  6694  002A10  0E00               	movlw	0
  6695  002A12  6E2D               	movwf	(___fldiv@a+1)^0,c
  6696  002A14  0E00               	movlw	0
  6697  002A16  6E2E               	movwf	(___fldiv@a+2)^0,c
  6698  002A18  0E00               	movlw	0
  6699  002A1A  6E2F               	movwf	(___fldiv@a+3)^0,c
  6700  002A1C                     l3006:
  6701  002A1C  502C               	movf	___fldiv@a^0,w,c
  6702  002A1E  102D               	iorwf	(___fldiv@a+1)^0,w,c
  6703  002A20  102E               	iorwf	(___fldiv@a+2)^0,w,c
  6704  002A22  102F               	iorwf	(___fldiv@a+3)^0,w,c
  6705  002A24  A4D8               	btfss	status,2,c
  6706  002A26  EF17  F015         	goto	u3291
  6707  002A2A  EF19  F015         	goto	u3290
  6708  002A2E                     u3291:
  6709  002A2E  EF31  F015         	goto	l3018
  6710  002A32                     u3290:
  6711  002A32  0E00               	movlw	0
  6712  002A34  6E28               	movwf	___fldiv@b^0,c
  6713  002A36  0E00               	movlw	0
  6714  002A38  6E29               	movwf	(___fldiv@b+1)^0,c
  6715  002A3A  0E00               	movlw	0
  6716  002A3C  6E2A               	movwf	(___fldiv@b+2)^0,c
  6717  002A3E  0E00               	movlw	0
  6718  002A40  6E2B               	movwf	(___fldiv@b+3)^0,c
  6719  002A42  0E80               	movlw	128
  6720  002A44  122A               	iorwf	(___fldiv@b+2)^0,f,c
  6721  002A46  0E7F               	movlw	127
  6722  002A48  122B               	iorwf	(___fldiv@b+3)^0,f,c
  6723  002A4A                     l3012:
  6724  002A4A  5038               	movf	___fldiv@sign^0,w,c
  6725  002A4C  122B               	iorwf	(___fldiv@b+3)^0,f,c
  6726  002A4E  C028  F028         	movff	___fldiv@b,?___fldiv
  6727  002A52  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  6728  002A56  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  6729  002A5A  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  6730  002A5E  EF74  F016         	goto	l928
  6731  002A62                     l3018:
  6732  002A62  503F               	movf	___fldiv@bexp^0,w,c
  6733  002A64  A4D8               	btfss	status,2,c
  6734  002A66  EF37  F015         	goto	u3301
  6735  002A6A  EF39  F015         	goto	u3300
  6736  002A6E                     u3301:
  6737  002A6E  EF43  F015         	goto	l3026
  6738  002A72                     u3300:
  6739  002A72  0E00               	movlw	0
  6740  002A74  6E28               	movwf	?___fldiv^0,c
  6741  002A76  0E00               	movlw	0
  6742  002A78  6E29               	movwf	(?___fldiv+1)^0,c
  6743  002A7A  0E00               	movlw	0
  6744  002A7C  6E2A               	movwf	(?___fldiv+2)^0,c
  6745  002A7E  0E00               	movlw	0
  6746  002A80  6E2B               	movwf	(?___fldiv+3)^0,c
  6747  002A82  EF74  F016         	goto	l928
  6748  002A86                     l3026:
  6749  002A86  5040               	movf	___fldiv@aexp^0,w,c
  6750  002A88  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  6751  002A8C  6A31               	clrf	(??___fldiv+1)^0,c
  6752  002A8E  5E30               	subwf	??___fldiv^0,f,c
  6753  002A90  0E00               	movlw	0
  6754  002A92  5A31               	subwfb	(??___fldiv+1)^0,f,c
  6755  002A94  0E7F               	movlw	127
  6756  002A96  2430               	addwf	??___fldiv^0,w,c
  6757  002A98  6E39               	movwf	___fldiv@new_exp^0,c
  6758  002A9A  0E00               	movlw	0
  6759  002A9C  2031               	addwfc	(??___fldiv+1)^0,w,c
  6760  002A9E  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  6761  002AA0  C028  F034         	movff	___fldiv@b,___fldiv@rem
  6762  002AA4  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  6763  002AA8  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  6764  002AAC  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  6765  002AB0  0E00               	movlw	0
  6766  002AB2  6E28               	movwf	___fldiv@b^0,c
  6767  002AB4  0E00               	movlw	0
  6768  002AB6  6E29               	movwf	(___fldiv@b+1)^0,c
  6769  002AB8  0E00               	movlw	0
  6770  002ABA  6E2A               	movwf	(___fldiv@b+2)^0,c
  6771  002ABC  0E00               	movlw	0
  6772  002ABE  6E2B               	movwf	(___fldiv@b+3)^0,c
  6773  002AC0  0E00               	movlw	0
  6774  002AC2  6E3B               	movwf	___fldiv@grs^0,c
  6775  002AC4  0E00               	movlw	0
  6776  002AC6  6E3C               	movwf	(___fldiv@grs+1)^0,c
  6777  002AC8  0E00               	movlw	0
  6778  002ACA  6E3D               	movwf	(___fldiv@grs+2)^0,c
  6779  002ACC  0E00               	movlw	0
  6780  002ACE  6E3E               	movwf	(___fldiv@grs+3)^0,c
  6781  002AD0  0E00               	movlw	0
  6782  002AD2  6E40               	movwf	___fldiv@aexp^0,c
  6783  002AD4  EFA4  F015         	goto	l930
  6784  002AD8                     l3036:
  6785  002AD8  5040               	movf	___fldiv@aexp^0,w,c
  6786  002ADA  B4D8               	btfsc	status,2,c
  6787  002ADC  EF72  F015         	goto	u3311
  6788  002AE0  EF74  F015         	goto	u3310
  6789  002AE4                     u3311:
  6790  002AE4  EF8B  F015         	goto	l3044
  6791  002AE8                     u3310:
  6792  002AE8  90D8               	bcf	status,0,c
  6793  002AEA  3634               	rlcf	___fldiv@rem^0,f,c
  6794  002AEC  3635               	rlcf	(___fldiv@rem+1)^0,f,c
  6795  002AEE  3636               	rlcf	(___fldiv@rem+2)^0,f,c
  6796  002AF0  3637               	rlcf	(___fldiv@rem+3)^0,f,c
  6797  002AF2  90D8               	bcf	status,0,c
  6798  002AF4  3628               	rlcf	___fldiv@b^0,f,c
  6799  002AF6  3629               	rlcf	(___fldiv@b+1)^0,f,c
  6800  002AF8  362A               	rlcf	(___fldiv@b+2)^0,f,c
  6801  002AFA  362B               	rlcf	(___fldiv@b+3)^0,f,c
  6802  002AFC  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  6803  002AFE  EF83  F015         	goto	u3321
  6804  002B02  EF85  F015         	goto	u3320
  6805  002B06                     u3321:
  6806  002B06  EF86  F015         	goto	l933
  6807  002B0A                     u3320:
  6808  002B0A  8028               	bsf	___fldiv@b^0,0,c
  6809  002B0C                     l933:
  6810  002B0C  90D8               	bcf	status,0,c
  6811  002B0E  363B               	rlcf	___fldiv@grs^0,f,c
  6812  002B10  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  6813  002B12  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  6814  002B14  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  6815  002B16                     l3044:
  6816  002B16  502C               	movf	___fldiv@a^0,w,c
  6817  002B18  5C34               	subwf	___fldiv@rem^0,w,c
  6818  002B1A  502D               	movf	(___fldiv@a+1)^0,w,c
  6819  002B1C  5835               	subwfb	(___fldiv@rem+1)^0,w,c
  6820  002B1E  502E               	movf	(___fldiv@a+2)^0,w,c
  6821  002B20  5836               	subwfb	(___fldiv@rem+2)^0,w,c
  6822  002B22  502F               	movf	(___fldiv@a+3)^0,w,c
  6823  002B24  5837               	subwfb	(___fldiv@rem+3)^0,w,c
  6824  002B26  A0D8               	btfss	status,0,c
  6825  002B28  EF98  F015         	goto	u3331
  6826  002B2C  EF9A  F015         	goto	u3330
  6827  002B30                     u3331:
  6828  002B30  EFA3  F015         	goto	l3050
  6829  002B34                     u3330:
  6830  002B34  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
  6831  002B36  502C               	movf	___fldiv@a^0,w,c
  6832  002B38  5E34               	subwf	___fldiv@rem^0,f,c
  6833  002B3A  502D               	movf	(___fldiv@a+1)^0,w,c
  6834  002B3C  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
  6835  002B3E  502E               	movf	(___fldiv@a+2)^0,w,c
  6836  002B40  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
  6837  002B42  502F               	movf	(___fldiv@a+3)^0,w,c
  6838  002B44  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
  6839  002B46                     l3050:
  6840  002B46  2A40               	incf	___fldiv@aexp^0,f,c
  6841  002B48                     l930:
  6842  002B48  0E19               	movlw	25
  6843  002B4A  6440               	cpfsgt	___fldiv@aexp^0,c
  6844  002B4C  EFAA  F015         	goto	u3341
  6845  002B50  EFAC  F015         	goto	u3340
  6846  002B54                     u3341:
  6847  002B54  EF6C  F015         	goto	l3036
  6848  002B58                     u3340:
  6849  002B58  5034               	movf	___fldiv@rem^0,w,c
  6850  002B5A  1035               	iorwf	(___fldiv@rem+1)^0,w,c
  6851  002B5C  1036               	iorwf	(___fldiv@rem+2)^0,w,c
  6852  002B5E  1037               	iorwf	(___fldiv@rem+3)^0,w,c
  6853  002B60  B4D8               	btfsc	status,2,c
  6854  002B62  EFB5  F015         	goto	u3351
  6855  002B66  EFB7  F015         	goto	u3350
  6856  002B6A                     u3351:
  6857  002B6A  EFCF  F015         	goto	l3062
  6858  002B6E                     u3350:
  6859  002B6E  803B               	bsf	___fldiv@grs^0,0,c
  6860  002B70  EFCF  F015         	goto	l3062
  6861  002B74                     l3056:
  6862  002B74  90D8               	bcf	status,0,c
  6863  002B76  3628               	rlcf	___fldiv@b^0,f,c
  6864  002B78  3629               	rlcf	(___fldiv@b+1)^0,f,c
  6865  002B7A  362A               	rlcf	(___fldiv@b+2)^0,f,c
  6866  002B7C  362B               	rlcf	(___fldiv@b+3)^0,f,c
  6867  002B7E  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  6868  002B80  EFC4  F015         	goto	u3361
  6869  002B84  EFC6  F015         	goto	u3360
  6870  002B88                     u3361:
  6871  002B88  EFC7  F015         	goto	l939
  6872  002B8C                     u3360:
  6873  002B8C  8028               	bsf	___fldiv@b^0,0,c
  6874  002B8E                     l939:
  6875  002B8E  90D8               	bcf	status,0,c
  6876  002B90  363B               	rlcf	___fldiv@grs^0,f,c
  6877  002B92  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  6878  002B94  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  6879  002B96  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  6880  002B98  0639               	decf	___fldiv@new_exp^0,f,c
  6881  002B9A  A0D8               	btfss	status,0,c
  6882  002B9C  063A               	decf	(___fldiv@new_exp+1)^0,f,c
  6883  002B9E                     l3062:
  6884  002B9E  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  6885  002BA0  EFD4  F015         	goto	u3371
  6886  002BA4  EFD6  F015         	goto	u3370
  6887  002BA8                     u3371:
  6888  002BA8  EFBA  F015         	goto	l3056
  6889  002BAC                     u3370:
  6890  002BAC  0E00               	movlw	0
  6891  002BAE  6E40               	movwf	___fldiv@aexp^0,c
  6892  002BB0  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  6893  002BB2  EFDD  F015         	goto	u3381
  6894  002BB6  EFDF  F015         	goto	u3380
  6895  002BBA                     u3381:
  6896  002BBA  EF03  F016         	goto	l941
  6897  002BBE                     u3380:
  6898  002BBE  0EFF               	movlw	255
  6899  002BC0  143B               	andwf	___fldiv@grs^0,w,c
  6900  002BC2  6E30               	movwf	??___fldiv^0,c
  6901  002BC4  0EFF               	movlw	255
  6902  002BC6  143C               	andwf	(___fldiv@grs+1)^0,w,c
  6903  002BC8  6E31               	movwf	(??___fldiv+1)^0,c
  6904  002BCA  0EFF               	movlw	255
  6905  002BCC  143D               	andwf	(___fldiv@grs+2)^0,w,c
  6906  002BCE  6E32               	movwf	(??___fldiv+2)^0,c
  6907  002BD0  0E7F               	movlw	127
  6908  002BD2  143E               	andwf	(___fldiv@grs+3)^0,w,c
  6909  002BD4  6E33               	movwf	(??___fldiv+3)^0,c
  6910  002BD6  5030               	movf	??___fldiv^0,w,c
  6911  002BD8  1031               	iorwf	(??___fldiv+1)^0,w,c
  6912  002BDA  1032               	iorwf	(??___fldiv+2)^0,w,c
  6913  002BDC  1033               	iorwf	(??___fldiv+3)^0,w,c
  6914  002BDE  B4D8               	btfsc	status,2,c
  6915  002BE0  EFF4  F015         	goto	u3391
  6916  002BE4  EFF6  F015         	goto	u3390
  6917  002BE8                     u3391:
  6918  002BE8  EFFA  F015         	goto	l942
  6919  002BEC                     u3390:
  6920  002BEC                     l3070:
  6921  002BEC  0E01               	movlw	1
  6922  002BEE  6E40               	movwf	___fldiv@aexp^0,c
  6923  002BF0  EF03  F016         	goto	l941
  6924  002BF4                     l942:
  6925  002BF4  A028               	btfss	___fldiv@b^0,0,c
  6926  002BF6  EFFF  F015         	goto	u3401
  6927  002BFA  EF01  F016         	goto	u3400
  6928  002BFE                     u3401:
  6929  002BFE  EF03  F016         	goto	l941
  6930  002C02                     u3400:
  6931  002C02  EFF6  F015         	goto	l3070
  6932  002C06                     l941:
  6933  002C06  5040               	movf	___fldiv@aexp^0,w,c
  6934  002C08  B4D8               	btfsc	status,2,c
  6935  002C0A  EF09  F016         	goto	u3411
  6936  002C0E  EF0B  F016         	goto	u3410
  6937  002C12                     u3411:
  6938  002C12  EF2F  F016         	goto	l3082
  6939  002C16                     u3410:
  6940  002C16  0E01               	movlw	1
  6941  002C18  2628               	addwf	___fldiv@b^0,f,c
  6942  002C1A  0E00               	movlw	0
  6943  002C1C  2229               	addwfc	(___fldiv@b+1)^0,f,c
  6944  002C1E  222A               	addwfc	(___fldiv@b+2)^0,f,c
  6945  002C20  222B               	addwfc	(___fldiv@b+3)^0,f,c
  6946  002C22  A02B               	btfss	(___fldiv@b+3)^0,0,c
  6947  002C24  EF16  F016         	goto	u3421
  6948  002C28  EF18  F016         	goto	u3420
  6949  002C2C                     u3421:
  6950  002C2C  EF2F  F016         	goto	l3082
  6951  002C30                     u3420:
  6952  002C30  C028  F030         	movff	___fldiv@b,??___fldiv
  6953  002C34  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  6954  002C38  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  6955  002C3C  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  6956  002C40  3433               	rlcf	(??___fldiv+3)^0,w,c
  6957  002C42  3233               	rrcf	(??___fldiv+3)^0,f,c
  6958  002C44  3232               	rrcf	(??___fldiv+2)^0,f,c
  6959  002C46  3231               	rrcf	(??___fldiv+1)^0,f,c
  6960  002C48  3230               	rrcf	??___fldiv^0,f,c
  6961  002C4A  C030  F028         	movff	??___fldiv,___fldiv@b
  6962  002C4E  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  6963  002C52  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  6964  002C56  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  6965  002C5A  4A39               	infsnz	___fldiv@new_exp^0,f,c
  6966  002C5C  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
  6967  002C5E                     l3082:
  6968  002C5E  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6969  002C60  EF3A  F016         	goto	u3431
  6970  002C64  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  6971  002C66  E108               	bnz	u3430
  6972  002C68  2839               	incf	___fldiv@new_exp^0,w,c
  6973  002C6A  A0D8               	btfss	status,0,c
  6974  002C6C  EF3A  F016         	goto	u3431
  6975  002C70  EF3C  F016         	goto	u3430
  6976  002C74                     u3431:
  6977  002C74  EF47  F016         	goto	l3086
  6978  002C78                     u3430:
  6979  002C78  0E00               	movlw	0
  6980  002C7A  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  6981  002C7C  6839               	setf	___fldiv@new_exp^0,c
  6982  002C7E  0E00               	movlw	0
  6983  002C80  6E28               	movwf	___fldiv@b^0,c
  6984  002C82  0E00               	movlw	0
  6985  002C84  6E29               	movwf	(___fldiv@b+1)^0,c
  6986  002C86  0E00               	movlw	0
  6987  002C88  6E2A               	movwf	(___fldiv@b+2)^0,c
  6988  002C8A  0E00               	movlw	0
  6989  002C8C  6E2B               	movwf	(___fldiv@b+3)^0,c
  6990  002C8E                     l3086:
  6991  002C8E  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6992  002C90  EF54  F016         	goto	u3440
  6993  002C94  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  6994  002C96  E106               	bnz	u3441
  6995  002C98  0439               	decf	___fldiv@new_exp^0,w,c
  6996  002C9A  B0D8               	btfsc	status,0,c
  6997  002C9C  EF52  F016         	goto	u3441
  6998  002CA0  EF54  F016         	goto	u3440
  6999  002CA4                     u3441:
  7000  002CA4  EF62  F016         	goto	l3090
  7001  002CA8                     u3440:
  7002  002CA8  0E00               	movlw	0
  7003  002CAA  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  7004  002CAC  0E00               	movlw	0
  7005  002CAE  6E39               	movwf	___fldiv@new_exp^0,c
  7006  002CB0  0E00               	movlw	0
  7007  002CB2  6E28               	movwf	___fldiv@b^0,c
  7008  002CB4  0E00               	movlw	0
  7009  002CB6  6E29               	movwf	(___fldiv@b+1)^0,c
  7010  002CB8  0E00               	movlw	0
  7011  002CBA  6E2A               	movwf	(___fldiv@b+2)^0,c
  7012  002CBC  0E00               	movlw	0
  7013  002CBE  6E2B               	movwf	(___fldiv@b+3)^0,c
  7014  002CC0  0E00               	movlw	0
  7015  002CC2  6E38               	movwf	___fldiv@sign^0,c
  7016  002CC4                     l3090:
  7017  002CC4  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  7018  002CC8  A03F               	btfss	___fldiv@bexp^0,0,c
  7019  002CCA  EF69  F016         	goto	u3451
  7020  002CCE  EF6B  F016         	goto	u3450
  7021  002CD2                     u3451:
  7022  002CD2  EF6E  F016         	goto	l3096
  7023  002CD6                     u3450:
  7024  002CD6  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  7025  002CD8  EF6F  F016         	goto	l3098
  7026  002CDC                     l3096:
  7027  002CDC  9E2A               	bcf	(___fldiv@b+2)^0,7,c
  7028  002CDE                     l3098:
  7029  002CDE  90D8               	bcf	status,0,c
  7030  002CE0  303F               	rrcf	___fldiv@bexp^0,w,c
  7031  002CE2  6E2B               	movwf	(___fldiv@b+3)^0,c
  7032  002CE4  EF25  F015         	goto	l3012
  7033  002CE8                     l928:
  7034  002CE8  0012               	return		;funcret
  7035  002CEA                     __end_of___fldiv:
  7036                           	opt callstack 0
  7037                           
  7038 ;; *************** function ___awmod *****************
  7039 ;; Defined at:
  7040 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  7041 ;; Parameters:    Size  Location     Type
  7042 ;;  dividend        2    0[COMRAM] int 
  7043 ;;  divisor         2    2[COMRAM] int 
  7044 ;; Auto vars:     Size  Location     Type
  7045 ;;  sign            1    5[COMRAM] unsigned char 
  7046 ;;  counter         1    4[COMRAM] unsigned char 
  7047 ;; Return value:  Size  Location     Type
  7048 ;;                  2    0[COMRAM] int 
  7049 ;; Registers used:
  7050 ;;		wreg, status,2, status,0
  7051 ;; Tracked objects:
  7052 ;;		On entry : 0/0
  7053 ;;		On exit  : 0/0
  7054 ;;		Unchanged: 0/0
  7055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7056 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7057 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7059 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7060 ;;Total ram usage:        6 bytes
  7061 ;; Hardware stack levels used:    1
  7062 ;; This function calls:
  7063 ;;		Nothing
  7064 ;; This function is called by:
  7065 ;;		_efgtoa
  7066 ;; This function uses a non-reentrant model
  7067 ;;
  7068                           
  7069                           	psect	text24
  7070  0039BC                     __ptext24:
  7071                           	opt callstack 0
  7072  0039BC                     ___awmod:
  7073                           	opt callstack 26
  7074  0039BC  0E00               	movlw	0
  7075  0039BE  6E06               	movwf	___awmod@sign^0,c
  7076  0039C0  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  7077  0039C2  EFE7  F01C         	goto	u3710
  7078  0039C6  EFE5  F01C         	goto	u3711
  7079  0039CA                     u3711:
  7080  0039CA  EFED  F01C         	goto	l3294
  7081  0039CE                     u3710:
  7082  0039CE  6C01               	negf	___awmod@dividend^0,c
  7083  0039D0  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7084  0039D2  B0D8               	btfsc	status,0,c
  7085  0039D4  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7086  0039D6  0E01               	movlw	1
  7087  0039D8  6E06               	movwf	___awmod@sign^0,c
  7088  0039DA                     l3294:
  7089  0039DA  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7090  0039DC  EFF4  F01C         	goto	u3720
  7091  0039E0  EFF2  F01C         	goto	u3721
  7092  0039E4                     u3721:
  7093  0039E4  EFF8  F01C         	goto	l3298
  7094  0039E8                     u3720:
  7095  0039E8  6C03               	negf	___awmod@divisor^0,c
  7096  0039EA  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7097  0039EC  B0D8               	btfsc	status,0,c
  7098  0039EE  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7099  0039F0                     l3298:
  7100  0039F0  5003               	movf	___awmod@divisor^0,w,c
  7101  0039F2  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7102  0039F4  B4D8               	btfsc	status,2,c
  7103  0039F6  EFFF  F01C         	goto	u3731
  7104  0039FA  EF01  F01D         	goto	u3730
  7105  0039FE                     u3731:
  7106  0039FE  EF25  F01D         	goto	l3314
  7107  003A02                     u3730:
  7108  003A02  0E01               	movlw	1
  7109  003A04  6E05               	movwf	___awmod@counter^0,c
  7110  003A06  EF09  F01D         	goto	l3304
  7111  003A0A                     l3302:
  7112  003A0A  90D8               	bcf	status,0,c
  7113  003A0C  3603               	rlcf	___awmod@divisor^0,f,c
  7114  003A0E  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7115  003A10  2A05               	incf	___awmod@counter^0,f,c
  7116  003A12                     l3304:
  7117  003A12  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7118  003A14  EF0E  F01D         	goto	u3741
  7119  003A18  EF10  F01D         	goto	u3740
  7120  003A1C                     u3741:
  7121  003A1C  EF05  F01D         	goto	l3302
  7122  003A20                     u3740:
  7123  003A20                     l3306:
  7124  003A20  5003               	movf	___awmod@divisor^0,w,c
  7125  003A22  5C01               	subwf	___awmod@dividend^0,w,c
  7126  003A24  5004               	movf	(___awmod@divisor+1)^0,w,c
  7127  003A26  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7128  003A28  A0D8               	btfss	status,0,c
  7129  003A2A  EF19  F01D         	goto	u3751
  7130  003A2E  EF1B  F01D         	goto	u3750
  7131  003A32                     u3751:
  7132  003A32  EF1F  F01D         	goto	l3310
  7133  003A36                     u3750:
  7134  003A36  5003               	movf	___awmod@divisor^0,w,c
  7135  003A38  5E01               	subwf	___awmod@dividend^0,f,c
  7136  003A3A  5004               	movf	(___awmod@divisor+1)^0,w,c
  7137  003A3C  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7138  003A3E                     l3310:
  7139  003A3E  90D8               	bcf	status,0,c
  7140  003A40  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7141  003A42  3203               	rrcf	___awmod@divisor^0,f,c
  7142  003A44  2E05               	decfsz	___awmod@counter^0,f,c
  7143  003A46  EF10  F01D         	goto	l3306
  7144  003A4A                     l3314:
  7145  003A4A  5006               	movf	___awmod@sign^0,w,c
  7146  003A4C  B4D8               	btfsc	status,2,c
  7147  003A4E  EF2B  F01D         	goto	u3761
  7148  003A52  EF2D  F01D         	goto	u3760
  7149  003A56                     u3761:
  7150  003A56  EF31  F01D         	goto	l3318
  7151  003A5A                     u3760:
  7152  003A5A  6C01               	negf	___awmod@dividend^0,c
  7153  003A5C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7154  003A5E  B0D8               	btfsc	status,0,c
  7155  003A60  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7156  003A62                     l3318:
  7157  003A62  C001  F001         	movff	___awmod@dividend,?___awmod
  7158  003A66  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7159  003A6A  0012               	return		;funcret
  7160  003A6C                     __end_of___awmod:
  7161                           	opt callstack 0
  7162                           
  7163 ;; *************** function ___awdiv *****************
  7164 ;; Defined at:
  7165 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  7166 ;; Parameters:    Size  Location     Type
  7167 ;;  dividend        2    0[COMRAM] int 
  7168 ;;  divisor         2    2[COMRAM] int 
  7169 ;; Auto vars:     Size  Location     Type
  7170 ;;  quotient        2    6[COMRAM] int 
  7171 ;;  sign            1    5[COMRAM] unsigned char 
  7172 ;;  counter         1    4[COMRAM] unsigned char 
  7173 ;; Return value:  Size  Location     Type
  7174 ;;                  2    0[COMRAM] int 
  7175 ;; Registers used:
  7176 ;;		wreg, status,2, status,0
  7177 ;; Tracked objects:
  7178 ;;		On entry : 0/0
  7179 ;;		On exit  : 0/0
  7180 ;;		Unchanged: 0/0
  7181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7182 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7183 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7185 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7186 ;;Total ram usage:        8 bytes
  7187 ;; Hardware stack levels used:    1
  7188 ;; This function calls:
  7189 ;;		Nothing
  7190 ;; This function is called by:
  7191 ;;		_efgtoa
  7192 ;; This function uses a non-reentrant model
  7193 ;;
  7194                           
  7195                           	psect	text25
  7196  0038F8                     __ptext25:
  7197                           	opt callstack 0
  7198  0038F8                     ___awdiv:
  7199                           	opt callstack 26
  7200  0038F8  0E00               	movlw	0
  7201  0038FA  6E06               	movwf	___awdiv@sign^0,c
  7202  0038FC  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7203  0038FE  EF85  F01C         	goto	u3650
  7204  003902  EF83  F01C         	goto	u3651
  7205  003906                     u3651:
  7206  003906  EF8B  F01C         	goto	l3250
  7207  00390A                     u3650:
  7208  00390A  6C03               	negf	___awdiv@divisor^0,c
  7209  00390C  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7210  00390E  B0D8               	btfsc	status,0,c
  7211  003910  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7212  003912  0E01               	movlw	1
  7213  003914  6E06               	movwf	___awdiv@sign^0,c
  7214  003916                     l3250:
  7215  003916  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7216  003918  EF92  F01C         	goto	u3660
  7217  00391C  EF90  F01C         	goto	u3661
  7218  003920                     u3661:
  7219  003920  EF98  F01C         	goto	l3256
  7220  003924                     u3660:
  7221  003924  6C01               	negf	___awdiv@dividend^0,c
  7222  003926  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7223  003928  B0D8               	btfsc	status,0,c
  7224  00392A  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7225  00392C  0E01               	movlw	1
  7226  00392E  1A06               	xorwf	___awdiv@sign^0,f,c
  7227  003930                     l3256:
  7228  003930  0E00               	movlw	0
  7229  003932  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7230  003934  0E00               	movlw	0
  7231  003936  6E07               	movwf	___awdiv@quotient^0,c
  7232  003938  5003               	movf	___awdiv@divisor^0,w,c
  7233  00393A  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7234  00393C  B4D8               	btfsc	status,2,c
  7235  00393E  EFA3  F01C         	goto	u3671
  7236  003942  EFA5  F01C         	goto	u3670
  7237  003946                     u3671:
  7238  003946  EFCD  F01C         	goto	l3278
  7239  00394A                     u3670:
  7240  00394A  0E01               	movlw	1
  7241  00394C  6E05               	movwf	___awdiv@counter^0,c
  7242  00394E  EFAD  F01C         	goto	l3264
  7243  003952                     l3262:
  7244  003952  90D8               	bcf	status,0,c
  7245  003954  3603               	rlcf	___awdiv@divisor^0,f,c
  7246  003956  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7247  003958  2A05               	incf	___awdiv@counter^0,f,c
  7248  00395A                     l3264:
  7249  00395A  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7250  00395C  EFB2  F01C         	goto	u3681
  7251  003960  EFB4  F01C         	goto	u3680
  7252  003964                     u3681:
  7253  003964  EFA9  F01C         	goto	l3262
  7254  003968                     u3680:
  7255  003968                     l3266:
  7256  003968  90D8               	bcf	status,0,c
  7257  00396A  3607               	rlcf	___awdiv@quotient^0,f,c
  7258  00396C  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7259  00396E  5003               	movf	___awdiv@divisor^0,w,c
  7260  003970  5C01               	subwf	___awdiv@dividend^0,w,c
  7261  003972  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7262  003974  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7263  003976  A0D8               	btfss	status,0,c
  7264  003978  EFC0  F01C         	goto	u3691
  7265  00397C  EFC2  F01C         	goto	u3690
  7266  003980                     u3691:
  7267  003980  EFC7  F01C         	goto	l3274
  7268  003984                     u3690:
  7269  003984  5003               	movf	___awdiv@divisor^0,w,c
  7270  003986  5E01               	subwf	___awdiv@dividend^0,f,c
  7271  003988  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7272  00398A  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7273  00398C  8007               	bsf	___awdiv@quotient^0,0,c
  7274  00398E                     l3274:
  7275  00398E  90D8               	bcf	status,0,c
  7276  003990  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7277  003992  3203               	rrcf	___awdiv@divisor^0,f,c
  7278  003994  2E05               	decfsz	___awdiv@counter^0,f,c
  7279  003996  EFB4  F01C         	goto	l3266
  7280  00399A                     l3278:
  7281  00399A  5006               	movf	___awdiv@sign^0,w,c
  7282  00399C  B4D8               	btfsc	status,2,c
  7283  00399E  EFD3  F01C         	goto	u3701
  7284  0039A2  EFD5  F01C         	goto	u3700
  7285  0039A6                     u3701:
  7286  0039A6  EFD9  F01C         	goto	l3282
  7287  0039AA                     u3700:
  7288  0039AA  6C07               	negf	___awdiv@quotient^0,c
  7289  0039AC  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7290  0039AE  B0D8               	btfsc	status,0,c
  7291  0039B0  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7292  0039B2                     l3282:
  7293  0039B2  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7294  0039B6  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7295  0039BA  0012               	return		;funcret
  7296  0039BC                     __end_of___awdiv:
  7297                           	opt callstack 0
  7298                           
  7299 ;; *************** function _atoi *****************
  7300 ;; Defined at:
  7301 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  7302 ;; Parameters:    Size  Location     Type
  7303 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7304 ;;		 -> STR_4(6), 
  7305 ;; Auto vars:     Size  Location     Type
  7306 ;;  n               2   20[COMRAM] int 
  7307 ;;  neg             2   13[COMRAM] int 
  7308 ;; Return value:  Size  Location     Type
  7309 ;;                  2    7[COMRAM] int 
  7310 ;; Registers used:
  7311 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7312 ;; Tracked objects:
  7313 ;;		On entry : 0/0
  7314 ;;		On exit  : 0/0
  7315 ;;		Unchanged: 0/0
  7316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7317 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7318 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7319 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7320 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7321 ;;Total ram usage:       15 bytes
  7322 ;; Hardware stack levels used:    1
  7323 ;; Hardware stack levels required when called:    1
  7324 ;; This function calls:
  7325 ;;		___wmul
  7326 ;;		_isdigit
  7327 ;;		_isspace
  7328 ;; This function is called by:
  7329 ;;		_vfpfcnvrt
  7330 ;; This function uses a non-reentrant model
  7331 ;;
  7332                           
  7333                           	psect	text26
  7334  0030B0                     __ptext26:
  7335                           	opt callstack 0
  7336  0030B0                     _atoi:
  7337                           	opt callstack 26
  7338  0030B0  0E00               	movlw	0
  7339  0030B2  6E16               	movwf	(atoi@n+1)^0,c
  7340  0030B4  0E00               	movlw	0
  7341  0030B6  6E15               	movwf	atoi@n^0,c
  7342  0030B8  0E00               	movlw	0
  7343  0030BA  6E0F               	movwf	(atoi@neg+1)^0,c
  7344  0030BC  0E00               	movlw	0
  7345  0030BE  6E0E               	movwf	atoi@neg^0,c
  7346  0030C0  EF64  F018         	goto	l3726
  7347  0030C4                     l3724:
  7348  0030C4  4A08               	infsnz	atoi@s^0,f,c
  7349  0030C6  2A09               	incf	(atoi@s+1)^0,f,c
  7350  0030C8                     l3726:
  7351  0030C8  0E01               	movlw	1
  7352  0030CA  6E14               	movwf	_atoi$1055^0,c
  7353  0030CC  C008  FFF6         	movff	atoi@s,tblptrl
  7354  0030D0  C009  FFF7         	movff	atoi@s+1,tblptrh
  7355  0030D4                     	if	0	;tblptru may be non-zero
  7356  0030D4                     	endif
  7357  0030D4                     	if	0	;tblptru may be non-zero
  7358  0030D4                     	endif
  7359  0030D4  0008               	tblrd		*
  7360  0030D6  50F5               	movf	tablat,w,c
  7361  0030D8  0A20               	xorlw	32
  7362  0030DA  B4D8               	btfsc	status,2,c
  7363  0030DC  EF72  F018         	goto	u4471
  7364  0030E0  EF74  F018         	goto	u4470
  7365  0030E4                     u4471:
  7366  0030E4  EF91  F018         	goto	l3734
  7367  0030E8                     u4470:
  7368  0030E8  0EF7               	movlw	247
  7369  0030EA  6E0A               	movwf	??_atoi^0,c
  7370  0030EC  0EFF               	movlw	255
  7371  0030EE  6E0B               	movwf	(??_atoi+1)^0,c
  7372  0030F0  C008  FFF6         	movff	atoi@s,tblptrl
  7373  0030F4  C009  FFF7         	movff	atoi@s+1,tblptrh
  7374  0030F8                     	if	0	;tblptru may be non-zero
  7375  0030F8                     	endif
  7376  0030F8                     	if	0	;tblptru may be non-zero
  7377  0030F8                     	endif
  7378  0030F8  0008               	tblrd		*
  7379  0030FA  50F5               	movf	tablat,w,c
  7380  0030FC  6E0C               	movwf	(??_atoi+2)^0,c
  7381  0030FE  6A0D               	clrf	(??_atoi+3)^0,c
  7382  003100  500A               	movf	??_atoi^0,w,c
  7383  003102  260C               	addwf	(??_atoi+2)^0,f,c
  7384  003104  500B               	movf	(??_atoi+1)^0,w,c
  7385  003106  220D               	addwfc	(??_atoi+3)^0,f,c
  7386  003108  500D               	movf	(??_atoi+3)^0,w,c
  7387  00310A  E109               	bnz	u4480
  7388  00310C  0E05               	movlw	5
  7389  00310E  5C0C               	subwf	(??_atoi+2)^0,w,c
  7390  003110  A0D8               	btfss	status,0,c
  7391  003112  EF8D  F018         	goto	u4481
  7392  003116  EF8F  F018         	goto	u4480
  7393  00311A                     u4481:
  7394  00311A  EF91  F018         	goto	l3734
  7395  00311E                     u4480:
  7396  00311E  0E00               	movlw	0
  7397  003120  6E14               	movwf	_atoi$1055^0,c
  7398  003122                     l3734:
  7399  003122  C014  F010         	movff	_atoi$1055,_atoi$1054
  7400  003126  6A11               	clrf	(_atoi$1054+1)^0,c
  7401  003128  5010               	movf	_atoi$1054^0,w,c
  7402  00312A  1011               	iorwf	(_atoi$1054+1)^0,w,c
  7403  00312C  A4D8               	btfss	status,2,c
  7404  00312E  EF9B  F018         	goto	u4491
  7405  003132  EF9D  F018         	goto	u4490
  7406  003136                     u4491:
  7407  003136  EF62  F018         	goto	l3724
  7408  00313A                     u4490:
  7409  00313A  EFA7  F018         	goto	l3744
  7410  00313E                     l3740:
  7411  00313E  0E00               	movlw	0
  7412  003140  6E0F               	movwf	(atoi@neg+1)^0,c
  7413  003142  0E01               	movlw	1
  7414  003144  6E0E               	movwf	atoi@neg^0,c
  7415  003146                     l3742:
  7416  003146  4A08               	infsnz	atoi@s^0,f,c
  7417  003148  2A09               	incf	(atoi@s+1)^0,f,c
  7418  00314A  EFDC  F018         	goto	l3750
  7419  00314E                     l3744:
  7420  00314E  C008  FFF6         	movff	atoi@s,tblptrl
  7421  003152  C009  FFF7         	movff	atoi@s+1,tblptrh
  7422  003156                     	if	0	;tblptru may be non-zero
  7423  003156                     	endif
  7424  003156                     	if	0	;tblptru may be non-zero
  7425  003156                     	endif
  7426  003156  0008               	tblrd		*
  7427  003158  50F5               	movf	tablat,w,c
  7428  00315A  6E0A               	movwf	??_atoi^0,c
  7429  00315C  6A0B               	clrf	(??_atoi+1)^0,c
  7430                           
  7431                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7432                           ; Switch size 1, requested type "simple"
  7433                           ; Number of cases is 1, Range of values is 0 to 0
  7434                           ; switch strategies available:
  7435                           ; Name         Instructions Cycles
  7436                           ; simple_byte            4     3 (average)
  7437                           ;	Chosen strategy is simple_byte
  7438  00315E  500B               	movf	(??_atoi+1)^0,w,c
  7439  003160  0A00               	xorlw	0	; case 0
  7440  003162  B4D8               	btfsc	status,2,c
  7441  003164  EFB6  F018         	goto	l4096
  7442  003168  EFDC  F018         	goto	l3750
  7443  00316C                     l4096:
  7444                           
  7445                           ; Switch size 1, requested type "simple"
  7446                           ; Number of cases is 2, Range of values is 43 to 45
  7447                           ; switch strategies available:
  7448                           ; Name         Instructions Cycles
  7449                           ; simple_byte            7     4 (average)
  7450                           ;	Chosen strategy is simple_byte
  7451  00316C  500A               	movf	??_atoi^0,w,c
  7452  00316E  0A2B               	xorlw	43	; case 43
  7453  003170  B4D8               	btfsc	status,2,c
  7454  003172  EFA3  F018         	goto	l3742
  7455  003176  0A06               	xorlw	6	; case 45
  7456  003178  B4D8               	btfsc	status,2,c
  7457  00317A  EF9F  F018         	goto	l3740
  7458  00317E  EFDC  F018         	goto	l3750
  7459  003182                     l3746:
  7460  003182  C015  F001         	movff	atoi@n,___wmul@multiplier
  7461  003186  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7462  00318A  0E00               	movlw	0
  7463  00318C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7464  00318E  0E0A               	movlw	10
  7465  003190  6E03               	movwf	___wmul@multiplicand^0,c
  7466  003192  EC1C  F020         	call	___wmul	;wreg free
  7467  003196  C008  FFF6         	movff	atoi@s,tblptrl
  7468  00319A  C009  FFF7         	movff	atoi@s+1,tblptrh
  7469  00319E                     	if	0	;tblptru may be non-zero
  7470  00319E                     	endif
  7471  00319E                     	if	0	;tblptru may be non-zero
  7472  00319E                     	endif
  7473  00319E  0008               	tblrd		*
  7474  0031A0  50F5               	movf	tablat,w,c
  7475  0031A2  5E01               	subwf	?___wmul^0,f,c
  7476  0031A4  0E00               	movlw	0
  7477  0031A6  5A02               	subwfb	(?___wmul+1)^0,f,c
  7478  0031A8  0E30               	movlw	48
  7479  0031AA  2401               	addwf	?___wmul^0,w,c
  7480  0031AC  6E15               	movwf	atoi@n^0,c
  7481  0031AE  0E00               	movlw	0
  7482  0031B0  2002               	addwfc	(?___wmul+1)^0,w,c
  7483  0031B2  6E16               	movwf	(atoi@n+1)^0,c
  7484  0031B4  EFA3  F018         	goto	l3742
  7485  0031B8                     l3750:
  7486  0031B8  0ED0               	movlw	208
  7487  0031BA  6E0A               	movwf	??_atoi^0,c
  7488  0031BC  0EFF               	movlw	255
  7489  0031BE  6E0B               	movwf	(??_atoi+1)^0,c
  7490  0031C0  C008  FFF6         	movff	atoi@s,tblptrl
  7491  0031C4  C009  FFF7         	movff	atoi@s+1,tblptrh
  7492  0031C8                     	if	0	;tblptru may be non-zero
  7493  0031C8                     	endif
  7494  0031C8                     	if	0	;tblptru may be non-zero
  7495  0031C8                     	endif
  7496  0031C8  0008               	tblrd		*
  7497  0031CA  50F5               	movf	tablat,w,c
  7498  0031CC  6E0C               	movwf	(??_atoi+2)^0,c
  7499  0031CE  6A0D               	clrf	(??_atoi+3)^0,c
  7500  0031D0  500A               	movf	??_atoi^0,w,c
  7501  0031D2  260C               	addwf	(??_atoi+2)^0,f,c
  7502  0031D4  500B               	movf	(??_atoi+1)^0,w,c
  7503  0031D6  220D               	addwfc	(??_atoi+3)^0,f,c
  7504  0031D8  500D               	movf	(??_atoi+3)^0,w,c
  7505  0031DA  E10A               	bnz	u4500
  7506  0031DC  0E0A               	movlw	10
  7507  0031DE  5C0C               	subwf	(??_atoi+2)^0,w,c
  7508  0031E0  A0D8               	btfss	status,0,c
  7509  0031E2  EFF5  F018         	goto	u4501
  7510  0031E6  EFF8  F018         	goto	u4500
  7511  0031EA                     u4501:
  7512  0031EA  0E01               	movlw	1
  7513  0031EC  EFF9  F018         	goto	u4510
  7514  0031F0                     u4500:
  7515  0031F0  0E00               	movlw	0
  7516  0031F2                     u4510:
  7517  0031F2  6E12               	movwf	_atoi$1056^0,c
  7518  0031F4  6A13               	clrf	(_atoi$1056+1)^0,c
  7519  0031F6  5012               	movf	_atoi$1056^0,w,c
  7520  0031F8  1013               	iorwf	(_atoi$1056+1)^0,w,c
  7521  0031FA  A4D8               	btfss	status,2,c
  7522  0031FC  EF02  F019         	goto	u4521
  7523  003200  EF04  F019         	goto	u4520
  7524  003204                     u4521:
  7525  003204  EFC1  F018         	goto	l3746
  7526  003208                     u4520:
  7527  003208  500E               	movf	atoi@neg^0,w,c
  7528  00320A  100F               	iorwf	(atoi@neg+1)^0,w,c
  7529  00320C  A4D8               	btfss	status,2,c
  7530  00320E  EF0B  F019         	goto	u4531
  7531  003212  EF0D  F019         	goto	u4530
  7532  003216                     u4531:
  7533  003216  EF1B  F019         	goto	l1056
  7534  00321A                     u4530:
  7535  00321A  C015  F00A         	movff	atoi@n,??_atoi
  7536  00321E  C016  F00B         	movff	atoi@n+1,??_atoi+1
  7537  003222  1E0A               	comf	??_atoi^0,f,c
  7538  003224  1E0B               	comf	(??_atoi+1)^0,f,c
  7539  003226  4A0A               	infsnz	??_atoi^0,f,c
  7540  003228  2A0B               	incf	(??_atoi+1)^0,f,c
  7541  00322A  C00A  F008         	movff	??_atoi,?_atoi
  7542  00322E  C00B  F009         	movff	??_atoi+1,?_atoi+1
  7543  003232  EF1F  F019         	goto	l1059
  7544  003236                     l1056:
  7545  003236  C015  F008         	movff	atoi@n,?_atoi
  7546  00323A  C016  F009         	movff	atoi@n+1,?_atoi+1
  7547  00323E                     l1059:
  7548  00323E  0012               	return		;funcret
  7549  003240                     __end_of_atoi:
  7550                           	opt callstack 0
  7551                           
  7552 ;; *************** function _isspace *****************
  7553 ;; Defined at:
  7554 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  7555 ;; Parameters:    Size  Location     Type
  7556 ;;  c               2    0[COMRAM] int 
  7557 ;; Auto vars:     Size  Location     Type
  7558 ;;		None
  7559 ;; Return value:  Size  Location     Type
  7560 ;;                  2    0[COMRAM] int 
  7561 ;; Registers used:
  7562 ;;		wreg, status,2, status,0
  7563 ;; Tracked objects:
  7564 ;;		On entry : 0/0
  7565 ;;		On exit  : 0/0
  7566 ;;		Unchanged: 0/0
  7567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7568 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7569 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7570 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7571 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7572 ;;Total ram usage:        7 bytes
  7573 ;; Hardware stack levels used:    1
  7574 ;; This function calls:
  7575 ;;		Nothing
  7576 ;; This function is called by:
  7577 ;;		_atoi
  7578 ;; This function uses a non-reentrant model
  7579 ;;
  7580                           
  7581                           	psect	text27
  7582  003D74                     __ptext27:
  7583                           	opt callstack 0
  7584  003D74                     _isspace:
  7585                           	opt callstack 26
  7586  003D74  0E01               	movlw	1
  7587  003D76  6E07               	movwf	_isspace$1085^0,c
  7588  003D78  0E20               	movlw	32
  7589  003D7A  1801               	xorwf	isspace@c^0,w,c
  7590  003D7C  1002               	iorwf	(isspace@c+1)^0,w,c
  7591  003D7E  B4D8               	btfsc	status,2,c
  7592  003D80  EFC4  F01E         	goto	u3931
  7593  003D84  EFC6  F01E         	goto	u3930
  7594  003D88                     u3931:
  7595  003D88  EFDF  F01E         	goto	l3420
  7596  003D8C                     u3930:
  7597  003D8C  0EF7               	movlw	247
  7598  003D8E  6E03               	movwf	??_isspace^0,c
  7599  003D90  0EFF               	movlw	255
  7600  003D92  6E04               	movwf	(??_isspace+1)^0,c
  7601  003D94  C001  F005         	movff	isspace@c,??_isspace+2
  7602  003D98  C002  F006         	movff	isspace@c+1,??_isspace+3
  7603  003D9C  5003               	movf	??_isspace^0,w,c
  7604  003D9E  2605               	addwf	(??_isspace+2)^0,f,c
  7605  003DA0  5004               	movf	(??_isspace+1)^0,w,c
  7606  003DA2  2206               	addwfc	(??_isspace+3)^0,f,c
  7607  003DA4  5006               	movf	(??_isspace+3)^0,w,c
  7608  003DA6  E109               	bnz	u3940
  7609  003DA8  0E05               	movlw	5
  7610  003DAA  5C05               	subwf	(??_isspace+2)^0,w,c
  7611  003DAC  A0D8               	btfss	status,0,c
  7612  003DAE  EFDB  F01E         	goto	u3941
  7613  003DB2  EFDD  F01E         	goto	u3940
  7614  003DB6                     u3941:
  7615  003DB6  EFDF  F01E         	goto	l3420
  7616  003DBA                     u3940:
  7617  003DBA  0E00               	movlw	0
  7618  003DBC  6E07               	movwf	_isspace$1085^0,c
  7619  003DBE                     l3420:
  7620  003DBE  C007  F001         	movff	_isspace$1085,?_isspace
  7621  003DC2  6A02               	clrf	(?_isspace+1)^0,c
  7622  003DC4  0012               	return		;funcret
  7623  003DC6                     __end_of_isspace:
  7624                           	opt callstack 0
  7625                           
  7626 ;; *************** function _isdigit *****************
  7627 ;; Defined at:
  7628 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  7629 ;; Parameters:    Size  Location     Type
  7630 ;;  c               2    0[COMRAM] int 
  7631 ;; Auto vars:     Size  Location     Type
  7632 ;;		None
  7633 ;; Return value:  Size  Location     Type
  7634 ;;                  2    0[COMRAM] int 
  7635 ;; Registers used:
  7636 ;;		wreg, status,2, status,0
  7637 ;; Tracked objects:
  7638 ;;		On entry : 0/0
  7639 ;;		On exit  : 0/0
  7640 ;;		Unchanged: 0/0
  7641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7642 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7644 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7645 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7646 ;;Total ram usage:        6 bytes
  7647 ;; Hardware stack levels used:    1
  7648 ;; This function calls:
  7649 ;;		Nothing
  7650 ;; This function is called by:
  7651 ;;		_vfpfcnvrt
  7652 ;;		_atoi
  7653 ;; This function uses a non-reentrant model
  7654 ;;
  7655                           
  7656                           	psect	text28
  7657  003F72                     __ptext28:
  7658                           	opt callstack 0
  7659  003F72                     _isdigit:
  7660                           	opt callstack 27
  7661  003F72  0ED0               	movlw	208
  7662  003F74  6E03               	movwf	??_isdigit^0,c
  7663  003F76  0EFF               	movlw	255
  7664  003F78  6E04               	movwf	(??_isdigit+1)^0,c
  7665  003F7A  C001  F005         	movff	isdigit@c,??_isdigit+2
  7666  003F7E  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  7667  003F82  5003               	movf	??_isdigit^0,w,c
  7668  003F84  2605               	addwf	(??_isdigit+2)^0,f,c
  7669  003F86  5004               	movf	(??_isdigit+1)^0,w,c
  7670  003F88  2206               	addwfc	(??_isdigit+3)^0,f,c
  7671  003F8A  5006               	movf	(??_isdigit+3)^0,w,c
  7672  003F8C  E10A               	bnz	u3210
  7673  003F8E  0E0A               	movlw	10
  7674  003F90  5C05               	subwf	(??_isdigit+2)^0,w,c
  7675  003F92  A0D8               	btfss	status,0,c
  7676  003F94  EFCE  F01F         	goto	u3211
  7677  003F98  EFD1  F01F         	goto	u3210
  7678  003F9C                     u3211:
  7679  003F9C  0E01               	movlw	1
  7680  003F9E  EFD2  F01F         	goto	u3220
  7681  003FA2                     u3210:
  7682  003FA2  0E00               	movlw	0
  7683  003FA4                     u3220:
  7684  003FA4  6E01               	movwf	?_isdigit^0,c
  7685  003FA6  6A02               	clrf	(?_isdigit+1)^0,c
  7686  003FA8  0012               	return		;funcret
  7687  003FAA                     __end_of_isdigit:
  7688                           	opt callstack 0
  7689                           
  7690 ;; *************** function ___wmul *****************
  7691 ;; Defined at:
  7692 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  7693 ;; Parameters:    Size  Location     Type
  7694 ;;  multiplier      2    0[COMRAM] unsigned int 
  7695 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7696 ;; Auto vars:     Size  Location     Type
  7697 ;;  product         2    4[COMRAM] unsigned int 
  7698 ;; Return value:  Size  Location     Type
  7699 ;;                  2    0[COMRAM] unsigned int 
  7700 ;; Registers used:
  7701 ;;		wreg, status,2, status,0, prodl, prodh
  7702 ;; Tracked objects:
  7703 ;;		On entry : 0/0
  7704 ;;		On exit  : 0/0
  7705 ;;		Unchanged: 0/0
  7706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7707 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7708 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7710 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7711 ;;Total ram usage:        6 bytes
  7712 ;; Hardware stack levels used:    1
  7713 ;; This function calls:
  7714 ;;		Nothing
  7715 ;; This function is called by:
  7716 ;;		_atoi
  7717 ;; This function uses a non-reentrant model
  7718 ;;
  7719                           
  7720                           	psect	text29
  7721  004038                     __ptext29:
  7722                           	opt callstack 0
  7723  004038                     ___wmul:
  7724                           	opt callstack 26
  7725  004038  5001               	movf	___wmul@multiplier^0,w,c
  7726  00403A  0203               	mulwf	___wmul@multiplicand^0,c
  7727  00403C  CFF3 F005          	movff	prodl,___wmul@product
  7728  004040  CFF4 F006          	movff	prodh,___wmul@product+1
  7729  004044  5001               	movf	___wmul@multiplier^0,w,c
  7730  004046  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7731  004048  50F3               	movf	243,w,c
  7732  00404A  2606               	addwf	(___wmul@product+1)^0,f,c
  7733  00404C  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7734  00404E  0203               	mulwf	___wmul@multiplicand^0,c
  7735  004050  50F3               	movf	243,w,c
  7736  004052  2606               	addwf	(___wmul@product+1)^0,f,c
  7737  004054  C005  F001         	movff	___wmul@product,?___wmul
  7738  004058  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7739  00405C  0012               	return		;funcret
  7740  00405E                     __end_of___wmul:
  7741                           	opt callstack 0
  7742                           
  7743 ;; *************** function ___xxtofl *****************
  7744 ;; Defined at:
  7745 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  7746 ;; Parameters:    Size  Location     Type
  7747 ;;  sign            1    wreg     unsigned char 
  7748 ;;  val             4    0[COMRAM] long 
  7749 ;; Auto vars:     Size  Location     Type
  7750 ;;  sign            1    8[COMRAM] unsigned char 
  7751 ;;  arg             4   10[COMRAM] unsigned long 
  7752 ;;  exp             1    9[COMRAM] unsigned char 
  7753 ;; Return value:  Size  Location     Type
  7754 ;;                  4    0[COMRAM] unsigned char 
  7755 ;; Registers used:
  7756 ;;		wreg, status,2, status,0
  7757 ;; Tracked objects:
  7758 ;;		On entry : 0/0
  7759 ;;		On exit  : 0/0
  7760 ;;		Unchanged: 0/0
  7761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7762 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7763 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7764 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7765 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7766 ;;Total ram usage:       14 bytes
  7767 ;; Hardware stack levels used:    1
  7768 ;; This function calls:
  7769 ;;		Nothing
  7770 ;; This function is called by:
  7771 ;;		_main
  7772 ;; This function uses a non-reentrant model
  7773 ;;
  7774                           
  7775                           	psect	text30
  7776  002EFC                     __ptext30:
  7777                           	opt callstack 0
  7778  002EFC                     ___xxtofl:
  7779                           	opt callstack 30
  7780                           
  7781                           ;incstack = 0
  7782                           ;___xxtofl@sign stored from wreg
  7783  002EFC  6E09               	movwf	___xxtofl@sign^0,c
  7784  002EFE  5009               	movf	___xxtofl@sign^0,w,c
  7785  002F00  B4D8               	btfsc	status,2,c
  7786  002F02  EF85  F017         	goto	u4831
  7787  002F06  EF87  F017         	goto	u4830
  7788  002F0A                     u4831:
  7789  002F0A  EFA9  F017         	goto	l1001
  7790  002F0E                     u4830:
  7791  002F0E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7792  002F10  EF8E  F017         	goto	u4840
  7793  002F14  EF8C  F017         	goto	u4841
  7794  002F18                     u4841:
  7795  002F18  EFA9  F017         	goto	l1001
  7796  002F1C                     u4840:
  7797  002F1C  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7798  002F20  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7799  002F24  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7800  002F28  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7801  002F2C  1E05               	comf	??___xxtofl^0,f,c
  7802  002F2E  1E06               	comf	(??___xxtofl+1)^0,f,c
  7803  002F30  1E07               	comf	(??___xxtofl+2)^0,f,c
  7804  002F32  1E08               	comf	(??___xxtofl+3)^0,f,c
  7805  002F34  2A05               	incf	??___xxtofl^0,f,c
  7806  002F36  0E00               	movlw	0
  7807  002F38  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7808  002F3A  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7809  002F3C  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7810  002F3E  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7811  002F42  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7812  002F46  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7813  002F4A  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7814  002F4E  EFB1  F017         	goto	l3998
  7815  002F52                     l1001:
  7816  002F52  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7817  002F56  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7818  002F5A  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7819  002F5E  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7820  002F62                     l3998:
  7821  002F62  5001               	movf	___xxtofl@val^0,w,c
  7822  002F64  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7823  002F66  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7824  002F68  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7825  002F6A  A4D8               	btfss	status,2,c
  7826  002F6C  EFBA  F017         	goto	u4851
  7827  002F70  EFBC  F017         	goto	u4850
  7828  002F74                     u4851:
  7829  002F74  EFC6  F017         	goto	l4004
  7830  002F78                     u4850:
  7831  002F78  0E00               	movlw	0
  7832  002F7A  6E01               	movwf	?___xxtofl^0,c
  7833  002F7C  0E00               	movlw	0
  7834  002F7E  6E02               	movwf	(?___xxtofl+1)^0,c
  7835  002F80  0E00               	movlw	0
  7836  002F82  6E03               	movwf	(?___xxtofl+2)^0,c
  7837  002F84  0E00               	movlw	0
  7838  002F86  6E04               	movwf	(?___xxtofl+3)^0,c
  7839  002F88  EF57  F018         	goto	l1004
  7840  002F8C                     l4004:
  7841  002F8C  0E96               	movlw	150
  7842  002F8E  6E0A               	movwf	___xxtofl@exp^0,c
  7843  002F90  EFD0  F017         	goto	l4008
  7844  002F94                     l4006:
  7845  002F94  2A0A               	incf	___xxtofl@exp^0,f,c
  7846  002F96  90D8               	bcf	status,0,c
  7847  002F98  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7848  002F9A  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7849  002F9C  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7850  002F9E  320B               	rrcf	___xxtofl@arg^0,f,c
  7851  002FA0                     l4008:
  7852  002FA0  0E00               	movlw	0
  7853  002FA2  140B               	andwf	___xxtofl@arg^0,w,c
  7854  002FA4  6E05               	movwf	??___xxtofl^0,c
  7855  002FA6  0E00               	movlw	0
  7856  002FA8  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7857  002FAA  6E06               	movwf	(??___xxtofl+1)^0,c
  7858  002FAC  0E00               	movlw	0
  7859  002FAE  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7860  002FB0  6E07               	movwf	(??___xxtofl+2)^0,c
  7861  002FB2  0EFE               	movlw	254
  7862  002FB4  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7863  002FB6  6E08               	movwf	(??___xxtofl+3)^0,c
  7864  002FB8  5005               	movf	??___xxtofl^0,w,c
  7865  002FBA  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7866  002FBC  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7867  002FBE  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7868  002FC0  A4D8               	btfss	status,2,c
  7869  002FC2  EFE5  F017         	goto	u4861
  7870  002FC6  EFE7  F017         	goto	u4860
  7871  002FCA                     u4861:
  7872  002FCA  EFCA  F017         	goto	l4006
  7873  002FCE                     u4860:
  7874  002FCE  EFF5  F017         	goto	l1008
  7875  002FD2                     l4010:
  7876  002FD2  2A0A               	incf	___xxtofl@exp^0,f,c
  7877  002FD4  0E01               	movlw	1
  7878  002FD6  260B               	addwf	___xxtofl@arg^0,f,c
  7879  002FD8  0E00               	movlw	0
  7880  002FDA  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7881  002FDC  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7882  002FDE  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7883  002FE0  90D8               	bcf	status,0,c
  7884  002FE2  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7885  002FE4  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7886  002FE6  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7887  002FE8  320B               	rrcf	___xxtofl@arg^0,f,c
  7888  002FEA                     l1008:
  7889  002FEA  0E00               	movlw	0
  7890  002FEC  140B               	andwf	___xxtofl@arg^0,w,c
  7891  002FEE  6E05               	movwf	??___xxtofl^0,c
  7892  002FF0  0E00               	movlw	0
  7893  002FF2  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7894  002FF4  6E06               	movwf	(??___xxtofl+1)^0,c
  7895  002FF6  0E00               	movlw	0
  7896  002FF8  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7897  002FFA  6E07               	movwf	(??___xxtofl+2)^0,c
  7898  002FFC  0EFF               	movlw	255
  7899  002FFE  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7900  003000  6E08               	movwf	(??___xxtofl+3)^0,c
  7901  003002  5005               	movf	??___xxtofl^0,w,c
  7902  003004  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7903  003006  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7904  003008  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7905  00300A  A4D8               	btfss	status,2,c
  7906  00300C  EF0A  F018         	goto	u4871
  7907  003010  EF0C  F018         	goto	u4870
  7908  003014                     u4871:
  7909  003014  EFE9  F017         	goto	l4010
  7910  003018                     u4870:
  7911  003018  EF14  F018         	goto	l4018
  7912  00301C                     l4016:
  7913  00301C  060A               	decf	___xxtofl@exp^0,f,c
  7914  00301E  90D8               	bcf	status,0,c
  7915  003020  360B               	rlcf	___xxtofl@arg^0,f,c
  7916  003022  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7917  003024  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7918  003026  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7919  003028                     l4018:
  7920  003028  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7921  00302A  EF19  F018         	goto	u4881
  7922  00302E  EF1B  F018         	goto	u4880
  7923  003032                     u4881:
  7924  003032  EF23  F018         	goto	l1015
  7925  003036                     u4880:
  7926  003036  0E02               	movlw	2
  7927  003038  600A               	cpfslt	___xxtofl@exp^0,c
  7928  00303A  EF21  F018         	goto	u4891
  7929  00303E  EF23  F018         	goto	u4890
  7930  003042                     u4891:
  7931  003042  EF0E  F018         	goto	l4016
  7932  003046                     u4890:
  7933  003046                     l1015:
  7934  003046  B00A               	btfsc	___xxtofl@exp^0,0,c
  7935  003048  EF28  F018         	goto	u4901
  7936  00304C  EF2A  F018         	goto	u4900
  7937  003050                     u4901:
  7938  003050  EF2B  F018         	goto	l4024
  7939  003054                     u4900:
  7940  003054  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7941  003056                     l4024:
  7942  003056  90D8               	bcf	status,0,c
  7943  003058  320A               	rrcf	___xxtofl@exp^0,f,c
  7944  00305A  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7945  00305E  6A06               	clrf	(??___xxtofl+1)^0,c
  7946  003060  6A07               	clrf	(??___xxtofl+2)^0,c
  7947  003062  6A08               	clrf	(??___xxtofl+3)^0,c
  7948  003064  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7949  003068  6A07               	clrf	(??___xxtofl+2)^0,c
  7950  00306A  6A06               	clrf	(??___xxtofl+1)^0,c
  7951  00306C  6A05               	clrf	??___xxtofl^0,c
  7952  00306E  5005               	movf	??___xxtofl^0,w,c
  7953  003070  120B               	iorwf	___xxtofl@arg^0,f,c
  7954  003072  5006               	movf	(??___xxtofl+1)^0,w,c
  7955  003074  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7956  003076  5007               	movf	(??___xxtofl+2)^0,w,c
  7957  003078  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7958  00307A  5008               	movf	(??___xxtofl+3)^0,w,c
  7959  00307C  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7960  00307E  5009               	movf	___xxtofl@sign^0,w,c
  7961  003080  B4D8               	btfsc	status,2,c
  7962  003082  EF45  F018         	goto	u4911
  7963  003086  EF47  F018         	goto	u4910
  7964  00308A                     u4911:
  7965  00308A  EF4F  F018         	goto	l4034
  7966  00308E                     u4910:
  7967  00308E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7968  003090  EF4E  F018         	goto	u4920
  7969  003094  EF4C  F018         	goto	u4921
  7970  003098                     u4921:
  7971  003098  EF4F  F018         	goto	l4034
  7972  00309C                     u4920:
  7973  00309C  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7974  00309E                     l4034:
  7975  00309E  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7976  0030A2  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7977  0030A6  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7978  0030AA  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7979  0030AE                     l1004:
  7980  0030AE  0012               	return		;funcret
  7981  0030B0                     __end_of___xxtofl:
  7982                           	opt callstack 0
  7983                           
  7984 ;; *************** function _SYSTEM_Initialize *****************
  7985 ;; Defined at:
  7986 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7987 ;; Parameters:    Size  Location     Type
  7988 ;;		None
  7989 ;; Auto vars:     Size  Location     Type
  7990 ;;		None
  7991 ;; Return value:  Size  Location     Type
  7992 ;;                  1    wreg      void 
  7993 ;; Registers used:
  7994 ;;		wreg, status,2, cstack
  7995 ;; Tracked objects:
  7996 ;;		On entry : 0/0
  7997 ;;		On exit  : 0/0
  7998 ;;		Unchanged: 0/0
  7999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8004 ;;Total ram usage:        0 bytes
  8005 ;; Hardware stack levels used:    1
  8006 ;; Hardware stack levels required when called:    1
  8007 ;; This function calls:
  8008 ;;		_ADC_Initialize
  8009 ;;		_OSCILLATOR_Initialize
  8010 ;;		_PIN_MANAGER_Initialize
  8011 ;; This function is called by:
  8012 ;;		_main
  8013 ;; This function uses a non-reentrant model
  8014 ;;
  8015                           
  8016                           	psect	text31
  8017  0040D6                     __ptext31:
  8018                           	opt callstack 0
  8019  0040D6                     _SYSTEM_Initialize:
  8020                           	opt callstack 29
  8021  0040D6                     
  8022                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  8023  0040D6  EC28  F01F         	call	_PIN_MANAGER_Initialize	;wreg free
  8024                           
  8025                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  8026  0040DA  EC72  F020         	call	_OSCILLATOR_Initialize	;wreg free
  8027                           
  8028                           ;mcc_generated_files/mcc.c: 55:     ADC_Initialize();
  8029  0040DE  EC4C  F020         	call	_ADC_Initialize	;wreg free
  8030  0040E2  0012               	return		;funcret
  8031  0040E4                     __end_of_SYSTEM_Initialize:
  8032                           	opt callstack 0
  8033                           
  8034 ;; *************** function _PIN_MANAGER_Initialize *****************
  8035 ;; Defined at:
  8036 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8037 ;; Parameters:    Size  Location     Type
  8038 ;;		None
  8039 ;; Auto vars:     Size  Location     Type
  8040 ;;		None
  8041 ;; Return value:  Size  Location     Type
  8042 ;;                  1    wreg      void 
  8043 ;; Registers used:
  8044 ;;		wreg, status,2
  8045 ;; Tracked objects:
  8046 ;;		On entry : 0/0
  8047 ;;		On exit  : 0/0
  8048 ;;		Unchanged: 0/0
  8049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8054 ;;Total ram usage:        0 bytes
  8055 ;; Hardware stack levels used:    1
  8056 ;; This function calls:
  8057 ;;		Nothing
  8058 ;; This function is called by:
  8059 ;;		_SYSTEM_Initialize
  8060 ;; This function uses a non-reentrant model
  8061 ;;
  8062                           
  8063                           	psect	text32
  8064  003E50                     __ptext32:
  8065                           	opt callstack 0
  8066  003E50                     _PIN_MANAGER_Initialize:
  8067                           	opt callstack 29
  8068  003E50                     
  8069                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  8070  003E50  0E00               	movlw	0
  8071  003E52  6E8D               	movwf	141,c	;volatile
  8072                           
  8073                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  8074  003E54  0E00               	movlw	0
  8075  003E56  6E8C               	movwf	140,c	;volatile
  8076                           
  8077                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  8078  003E58  0E00               	movlw	0
  8079  003E5A  6E89               	movwf	137,c	;volatile
  8080                           
  8081                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  8082  003E5C  0E00               	movlw	0
  8083  003E5E  6E8A               	movwf	138,c	;volatile
  8084                           
  8085                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  8086  003E60  0E00               	movlw	0
  8087  003E62  6E8B               	movwf	139,c	;volatile
  8088                           
  8089                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  8090  003E64  0E07               	movlw	7
  8091  003E66  6E96               	movwf	150,c	;volatile
  8092  003E68                     
  8093                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  8094  003E68  6892               	setf	146,c	;volatile
  8095                           
  8096                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0x00;
  8097  003E6A  0E00               	movlw	0
  8098  003E6C  6E93               	movwf	147,c	;volatile
  8099  003E6E                     
  8100                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
  8101  003E6E  6894               	setf	148,c	;volatile
  8102  003E70                     
  8103                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  8104  003E70  6895               	setf	149,c	;volatile
  8105  003E72                     
  8106                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  8107  003E72  010F               	movlb	15	; () banked
  8108  003E74  693B               	setf	59,b	;volatile
  8109                           
  8110                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFC;
  8111  003E76  0EFC               	movlw	252
  8112  003E78  6F3A               	movwf	58,b	;volatile
  8113                           
  8114                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x00;
  8115  003E7A  0E00               	movlw	0
  8116  003E7C  6F39               	movwf	57,b	;volatile
  8117                           
  8118                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  8119  003E7E  0E07               	movlw	7
  8120  003E80  6F3C               	movwf	60,b	;volatile
  8121                           
  8122                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x2F;
  8123  003E82  0E2F               	movlw	47
  8124  003E84  6F38               	movwf	56,b	;volatile
  8125                           
  8126                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
  8127  003E86  0E00               	movlw	0
  8128  003E88  6E61               	movwf	97,c	;volatile
  8129  003E8A                     
  8130                           ; BSR set to: 15
  8131                           ;mcc_generated_files/pin_manager.c: 88:     INTCON2bits.nRBPU = 1;
  8132  003E8A  8EF1               	bsf	241,7,c	;volatile
  8133  003E8C                     
  8134                           ; BSR set to: 15
  8135  003E8C  0012               	return		;funcret
  8136  003E8E                     __end_of_PIN_MANAGER_Initialize:
  8137                           	opt callstack 0
  8138                           
  8139 ;; *************** function _OSCILLATOR_Initialize *****************
  8140 ;; Defined at:
  8141 ;;		line 58 in file "mcc_generated_files/mcc.c"
  8142 ;; Parameters:    Size  Location     Type
  8143 ;;		None
  8144 ;; Auto vars:     Size  Location     Type
  8145 ;;		None
  8146 ;; Return value:  Size  Location     Type
  8147 ;;                  1    wreg      void 
  8148 ;; Registers used:
  8149 ;;		wreg, status,2
  8150 ;; Tracked objects:
  8151 ;;		On entry : 0/0
  8152 ;;		On exit  : 0/0
  8153 ;;		Unchanged: 0/0
  8154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8159 ;;Total ram usage:        0 bytes
  8160 ;; Hardware stack levels used:    1
  8161 ;; This function calls:
  8162 ;;		Nothing
  8163 ;; This function is called by:
  8164 ;;		_SYSTEM_Initialize
  8165 ;; This function uses a non-reentrant model
  8166 ;;
  8167                           
  8168                           	psect	text33
  8169  0040E4                     __ptext33:
  8170                           	opt callstack 0
  8171  0040E4                     _OSCILLATOR_Initialize:
  8172                           	opt callstack 29
  8173  0040E4                     
  8174                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x60;
  8175  0040E4  0E60               	movlw	96
  8176  0040E6  6ED3               	movwf	211,c	;volatile
  8177                           
  8178                           ;mcc_generated_files/mcc.c: 63:     OSCCON2 = 0x04;
  8179  0040E8  0E04               	movlw	4
  8180  0040EA  6ED2               	movwf	210,c	;volatile
  8181                           
  8182                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  8183  0040EC  0E00               	movlw	0
  8184  0040EE  6E9B               	movwf	155,c	;volatile
  8185  0040F0  0012               	return		;funcret
  8186  0040F2                     __end_of_OSCILLATOR_Initialize:
  8187                           	opt callstack 0
  8188                           
  8189 ;; *************** function _ADC_Initialize *****************
  8190 ;; Defined at:
  8191 ;;		line 60 in file "mcc_generated_files/adc.c"
  8192 ;; Parameters:    Size  Location     Type
  8193 ;;		None
  8194 ;; Auto vars:     Size  Location     Type
  8195 ;;		None
  8196 ;; Return value:  Size  Location     Type
  8197 ;;                  1    wreg      void 
  8198 ;; Registers used:
  8199 ;;		wreg, status,2
  8200 ;; Tracked objects:
  8201 ;;		On entry : 0/0
  8202 ;;		On exit  : 0/0
  8203 ;;		Unchanged: 0/0
  8204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8209 ;;Total ram usage:        0 bytes
  8210 ;; Hardware stack levels used:    1
  8211 ;; This function calls:
  8212 ;;		Nothing
  8213 ;; This function is called by:
  8214 ;;		_SYSTEM_Initialize
  8215 ;; This function uses a non-reentrant model
  8216 ;;
  8217                           
  8218                           	psect	text34
  8219  004098                     __ptext34:
  8220                           	opt callstack 0
  8221  004098                     _ADC_Initialize:
  8222                           	opt callstack 29
  8223  004098                     
  8224                           ;mcc_generated_files/adc.c: 65:     ADCON0 = 0x01;
  8225  004098  0E01               	movlw	1
  8226  00409A  6EC2               	movwf	194,c	;volatile
  8227                           
  8228                           ;mcc_generated_files/adc.c: 68:     ADCON1 = 0x00;
  8229  00409C  0E00               	movlw	0
  8230  00409E  6EC1               	movwf	193,c	;volatile
  8231                           
  8232                           ;mcc_generated_files/adc.c: 71:     ADCON2 = 0x88;
  8233  0040A0  0E88               	movlw	136
  8234  0040A2  6EC0               	movwf	192,c	;volatile
  8235                           
  8236                           ;mcc_generated_files/adc.c: 74:     ADRESL = 0x00;
  8237  0040A4  0E00               	movlw	0
  8238  0040A6  6EC3               	movwf	195,c	;volatile
  8239                           
  8240                           ;mcc_generated_files/adc.c: 77:     ADRESH = 0x00;
  8241  0040A8  0E00               	movlw	0
  8242  0040AA  6EC4               	movwf	196,c	;volatile
  8243  0040AC  0012               	return		;funcret
  8244  0040AE                     __end_of_ADC_Initialize:
  8245                           	opt callstack 0
  8246                           
  8247 ;; *************** function _LCD_Initialize *****************
  8248 ;; Defined at:
  8249 ;;		line 46 in file "lcd.c"
  8250 ;; Parameters:    Size  Location     Type
  8251 ;;		None
  8252 ;; Auto vars:     Size  Location     Type
  8253 ;;		None
  8254 ;; Return value:  Size  Location     Type
  8255 ;;                  1    wreg      void 
  8256 ;; Registers used:
  8257 ;;		wreg, status,2, status,0, cstack
  8258 ;; Tracked objects:
  8259 ;;		On entry : 0/0
  8260 ;;		On exit  : 0/0
  8261 ;;		Unchanged: 0/0
  8262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8265 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8266 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8267 ;;Total ram usage:        1 bytes
  8268 ;; Hardware stack levels used:    1
  8269 ;; Hardware stack levels required when called:    2
  8270 ;; This function calls:
  8271 ;;		_LCDPutCmd
  8272 ;; This function is called by:
  8273 ;;		_main
  8274 ;; This function uses a non-reentrant model
  8275 ;;
  8276                           
  8277                           	psect	text35
  8278  003E8E                     __ptext35:
  8279                           	opt callstack 0
  8280  003E8E                     _LCD_Initialize:
  8281                           	opt callstack 28
  8282  003E8E                     
  8283                           ;lcd.c: 49:     PORTB = 0;
  8284  003E8E  0E00               	movlw	0
  8285  003E90  6E81               	movwf	129,c	;volatile
  8286                           
  8287                           ;lcd.c: 51:     TRISB= 0x00;
  8288  003E92  0E00               	movlw	0
  8289  003E94  6E93               	movwf	147,c	;volatile
  8290  003E96                     
  8291                           ;lcd.c: 54:     PORTBbits.RB7 = 1;
  8292  003E96  8E81               	bsf	129,7,c	;volatile
  8293  003E98                     
  8294                           ;lcd.c: 57:     _delay((unsigned long)((15)*(8000000/4000.0)));
  8295  003E98  0E27               	movlw	39
  8296  003E9A  6E05               	movwf	??_LCD_Initialize^0,c
  8297  003E9C  0EF5               	movlw	245
  8298  003E9E                     u4957:
  8299  003E9E  2EE8               	decfsz	wreg,f,c
  8300  003EA0  D7FE               	bra	u4957
  8301  003EA2  2E05               	decfsz	??_LCD_Initialize^0,f,c
  8302  003EA4  D7FC               	bra	u4957
  8303  003EA6  F000               	nop	
  8304  003EA8                     
  8305                           ;lcd.c: 60:     LCDPutCmd(0x32);
  8306  003EA8  0E32               	movlw	50
  8307  003EAA  EC64  F01F         	call	_LCDPutCmd
  8308  003EAE                     
  8309                           ;lcd.c: 63:     LCDPutCmd(0x28);
  8310  003EAE  0E28               	movlw	40
  8311  003EB0  EC64  F01F         	call	_LCDPutCmd
  8312  003EB4                     
  8313                           ;lcd.c: 66:     LCDPutCmd(0x0C);
  8314  003EB4  0E0C               	movlw	12
  8315  003EB6  EC64  F01F         	call	_LCDPutCmd
  8316  003EBA                     
  8317                           ;lcd.c: 68:     LCDPutCmd(0x01);
  8318  003EBA  0E01               	movlw	1
  8319  003EBC  EC64  F01F         	call	_LCDPutCmd
  8320  003EC0                     
  8321                           ;lcd.c: 71:     LCDPutCmd(0x06);
  8322  003EC0  0E06               	movlw	6
  8323  003EC2  EC64  F01F         	call	_LCDPutCmd
  8324  003EC6  0012               	return		;funcret
  8325  003EC8                     __end_of_LCD_Initialize:
  8326                           	opt callstack 0
  8327                           
  8328 ;; *************** function _LCDPutStr *****************
  8329 ;; Defined at:
  8330 ;;		line 135 in file "lcd.c"
  8331 ;; Parameters:    Size  Location     Type
  8332 ;;  str             2    4[COMRAM] PTR const unsigned char 
  8333 ;;		 -> STR_5(3), Buffer(20), STR_3(10), STR_2(16), 
  8334 ;;		 -> STR_1(15), 
  8335 ;; Auto vars:     Size  Location     Type
  8336 ;;  i               1    8[COMRAM] unsigned char 
  8337 ;; Return value:  Size  Location     Type
  8338 ;;                  1    wreg      void 
  8339 ;; Registers used:
  8340 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8341 ;; Tracked objects:
  8342 ;;		On entry : 0/0
  8343 ;;		On exit  : 0/0
  8344 ;;		Unchanged: 0/0
  8345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8346 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8347 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8348 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8349 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8350 ;;Total ram usage:        5 bytes
  8351 ;; Hardware stack levels used:    1
  8352 ;; Hardware stack levels required when called:    2
  8353 ;; This function calls:
  8354 ;;		_LCDPutChar
  8355 ;; This function is called by:
  8356 ;;		_main
  8357 ;; This function uses a non-reentrant model
  8358 ;;
  8359                           
  8360                           	psect	text36
  8361  003B16                     __ptext36:
  8362                           	opt callstack 0
  8363  003B16                     _LCDPutStr:
  8364                           	opt callstack 28
  8365  003B16                     
  8366                           ;lcd.c: 135: void LCDPutStr(const char *str);lcd.c: 136: {;lcd.c: 137:     uint8_t i=0;
  8367  003B16  0E00               	movlw	0
  8368  003B18  6E09               	movwf	LCDPutStr@i^0,c
  8369                           
  8370                           ;lcd.c: 140:     while (str[i])
  8371  003B1A  EFA9  F01D         	goto	l3948
  8372  003B1E                     l3944:
  8373                           
  8374                           ;lcd.c: 141:     {;lcd.c: 143:         LCDPutChar(str[i++]);
  8375  003B1E  5009               	movf	LCDPutStr@i^0,w,c
  8376  003B20  2405               	addwf	LCDPutStr@str^0,w,c
  8377  003B22  6E07               	movwf	??_LCDPutStr^0,c
  8378  003B24  0E00               	movlw	0
  8379  003B26  2006               	addwfc	(LCDPutStr@str+1)^0,w,c
  8380  003B28  6E08               	movwf	(??_LCDPutStr+1)^0,c
  8381  003B2A  C007  FFF6         	movff	??_LCDPutStr,tblptrl
  8382  003B2E  C008  FFF7         	movff	??_LCDPutStr+1,tblptrh
  8383  003B32  0E00               	movlw	low (__smallconst shr (0+16))
  8384  003B34  6EF8               	movwf	tblptru,c
  8385  003B36  0E0F               	movlw	(high __ramtop+-1)
  8386  003B38  64F7               	cpfsgt	tblptrh,c
  8387  003B3A  D003               	bra	u4757
  8388  003B3C  0008               	tblrd		*
  8389  003B3E  50F5               	movf	tablat,w,c
  8390  003B40  D005               	bra	u4750
  8391  003B42                     u4757:
  8392  003B42  CFF6 FFE1          	movff	tblptrl,fsr1l
  8393  003B46  CFF7 FFE2          	movff	tblptrh,fsr1h
  8394  003B4A  50E7               	movf	indf1,w,c
  8395  003B4C                     u4750:
  8396  003B4C  ECF0  F01F         	call	_LCDPutChar
  8397  003B50  2A09               	incf	LCDPutStr@i^0,f,c
  8398  003B52                     l3948:
  8399                           
  8400                           ;lcd.c: 140:     while (str[i])
  8401  003B52  5009               	movf	LCDPutStr@i^0,w,c
  8402  003B54  2405               	addwf	LCDPutStr@str^0,w,c
  8403  003B56  6E07               	movwf	??_LCDPutStr^0,c
  8404  003B58  0E00               	movlw	0
  8405  003B5A  2006               	addwfc	(LCDPutStr@str+1)^0,w,c
  8406  003B5C  6E08               	movwf	(??_LCDPutStr+1)^0,c
  8407  003B5E  C007  FFF6         	movff	??_LCDPutStr,tblptrl
  8408  003B62  C008  FFF7         	movff	??_LCDPutStr+1,tblptrh
  8409  003B66  0E00               	movlw	low (__smallconst shr (0+16))
  8410  003B68  6EF8               	movwf	tblptru,c
  8411  003B6A  0E0F               	movlw	(high __ramtop+-1)
  8412  003B6C  64F7               	cpfsgt	tblptrh,c
  8413  003B6E  D003               	bra	u4767
  8414  003B70  0008               	tblrd		*
  8415  003B72  50F5               	movf	tablat,w,c
  8416  003B74  D005               	bra	u4760
  8417  003B76                     u4767:
  8418  003B76  CFF6 FFE1          	movff	tblptrl,fsr1l
  8419  003B7A  CFF7 FFE2          	movff	tblptrh,fsr1h
  8420  003B7E  50E7               	movf	indf1,w,c
  8421  003B80                     u4760:
  8422  003B80  0900               	iorlw	0
  8423  003B82  A4D8               	btfss	status,2,c
  8424  003B84  EFC6  F01D         	goto	u4771
  8425  003B88  EFC8  F01D         	goto	u4770
  8426  003B8C                     u4771:
  8427  003B8C  EF8F  F01D         	goto	l3944
  8428  003B90                     u4770:
  8429  003B90  0012               	return		;funcret
  8430  003B92                     __end_of_LCDPutStr:
  8431                           	opt callstack 0
  8432                           
  8433 ;; *************** function _LCDPutChar *****************
  8434 ;; Defined at:
  8435 ;;		line 103 in file "lcd.c"
  8436 ;; Parameters:    Size  Location     Type
  8437 ;;  ch              1    wreg     unsigned char 
  8438 ;; Auto vars:     Size  Location     Type
  8439 ;;  ch              1    3[COMRAM] unsigned char 
  8440 ;; Return value:  Size  Location     Type
  8441 ;;                  1    wreg      void 
  8442 ;; Registers used:
  8443 ;;		wreg, status,2, status,0, cstack
  8444 ;; Tracked objects:
  8445 ;;		On entry : 0/0
  8446 ;;		On exit  : 0/0
  8447 ;;		Unchanged: 0/0
  8448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8450 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8451 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8452 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8453 ;;Total ram usage:        2 bytes
  8454 ;; Hardware stack levels used:    1
  8455 ;; Hardware stack levels required when called:    1
  8456 ;; This function calls:
  8457 ;;		_LCDWriteNibble
  8458 ;; This function is called by:
  8459 ;;		_LCDPutStr
  8460 ;; This function uses a non-reentrant model
  8461 ;;
  8462                           
  8463                           	psect	text37
  8464  003FE0                     __ptext37:
  8465                           	opt callstack 0
  8466  003FE0                     _LCDPutChar:
  8467                           	opt callstack 28
  8468                           
  8469                           ;incstack = 0
  8470                           ;LCDPutChar@ch stored from wreg
  8471  003FE0  6E04               	movwf	LCDPutChar@ch^0,c
  8472  003FE2                     
  8473                           ;lcd.c: 103: void LCDPutChar(uint8_t ch);lcd.c: 104: {;lcd.c: 105:     _delay((unsigned 
      +                          long)((5)*(8000000/4000.0)));
  8474  003FE2  0E0D               	movlw	13
  8475  003FE4  6E03               	movwf	??_LCDPutChar^0,c
  8476  003FE6  0EFC               	movlw	252
  8477  003FE8                     u4967:
  8478  003FE8  2EE8               	decfsz	wreg,f,c
  8479  003FEA  D7FE               	bra	u4967
  8480  003FEC  2E03               	decfsz	??_LCDPutChar^0,f,c
  8481  003FEE  D7FC               	bra	u4967
  8482  003FF0                     
  8483                           ;lcd.c: 108:     LCDWriteNibble(ch,1);
  8484  003FF0  0E01               	movlw	1
  8485  003FF2  6E01               	movwf	LCDWriteNibble@rs^0,c
  8486  003FF4  5004               	movf	LCDPutChar@ch^0,w,c
  8487  003FF6  EC06  F020         	call	_LCDWriteNibble
  8488  003FFA                     
  8489                           ;lcd.c: 111:     ch = (ch << 4);
  8490  003FFA  3804               	swapf	LCDPutChar@ch^0,w,c
  8491  003FFC  0BF0               	andlw	240
  8492  003FFE  6E04               	movwf	LCDPutChar@ch^0,c
  8493  004000                     
  8494                           ;lcd.c: 114:     LCDWriteNibble(ch,1);
  8495  004000  0E01               	movlw	1
  8496  004002  6E01               	movwf	LCDWriteNibble@rs^0,c
  8497  004004  5004               	movf	LCDPutChar@ch^0,w,c
  8498  004006  EC06  F020         	call	_LCDWriteNibble
  8499  00400A  0012               	return		;funcret
  8500  00400C                     __end_of_LCDPutChar:
  8501                           	opt callstack 0
  8502                           
  8503 ;; *************** function _LCDGoto *****************
  8504 ;; Defined at:
  8505 ;;		line 148 in file "lcd.c"
  8506 ;; Parameters:    Size  Location     Type
  8507 ;;  pos             1    wreg     unsigned char 
  8508 ;;  ln              1    4[COMRAM] unsigned char 
  8509 ;; Auto vars:     Size  Location     Type
  8510 ;;  pos             1    9[COMRAM] unsigned char 
  8511 ;; Return value:  Size  Location     Type
  8512 ;;                  1    wreg      void 
  8513 ;; Registers used:
  8514 ;;		wreg, status,2, status,0, cstack
  8515 ;; Tracked objects:
  8516 ;;		On entry : 0/0
  8517 ;;		On exit  : 0/0
  8518 ;;		Unchanged: 0/0
  8519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8520 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8521 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8522 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8523 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8524 ;;Total ram usage:        6 bytes
  8525 ;; Hardware stack levels used:    1
  8526 ;; Hardware stack levels required when called:    2
  8527 ;; This function calls:
  8528 ;;		_LCDPutCmd
  8529 ;; This function is called by:
  8530 ;;		_main
  8531 ;; This function uses a non-reentrant model
  8532 ;;
  8533                           
  8534                           	psect	text38
  8535  003B92                     __ptext38:
  8536                           	opt callstack 0
  8537  003B92                     _LCDGoto:
  8538                           	opt callstack 28
  8539                           
  8540                           ;incstack = 0
  8541                           ;LCDGoto@pos stored from wreg
  8542  003B92  6E0A               	movwf	LCDGoto@pos^0,c
  8543  003B94                     
  8544                           ;lcd.c: 148: void LCDGoto(uint8_t pos,uint8_t ln);lcd.c: 149: {;lcd.c: 151:     if ((ln 
      +                          > (2 -1)) || (pos > (16 -1)))
  8545  003B94  0E02               	movlw	2
  8546  003B96  6005               	cpfslt	LCDGoto@ln^0,c
  8547  003B98  EFD0  F01D         	goto	u4781
  8548  003B9C  EFD2  F01D         	goto	u4780
  8549  003BA0                     u4781:
  8550  003BA0  EF00  F01E         	goto	l34
  8551  003BA4                     u4780:
  8552  003BA4  0E0F               	movlw	15
  8553  003BA6  640A               	cpfsgt	LCDGoto@pos^0,c
  8554  003BA8  EFD8  F01D         	goto	u4791
  8555  003BAC  EFDA  F01D         	goto	u4790
  8556  003BB0                     u4791:
  8557  003BB0  EFDC  F01D         	goto	l3954
  8558  003BB4                     u4790:
  8559  003BB4  EF00  F01E         	goto	l34
  8560  003BB8                     l3954:
  8561                           
  8562                           ;lcd.c: 158:     LCDPutCmd((ln == 1) ? (0xC0 | pos) : (0x80 | pos));
  8563  003BB8  0405               	decf	LCDGoto@ln^0,w,c
  8564  003BBA  B4D8               	btfsc	status,2,c
  8565  003BBC  EFE2  F01D         	goto	u4801
  8566  003BC0  EFE4  F01D         	goto	u4800
  8567  003BC4                     u4801:
  8568  003BC4  EFEE  F01D         	goto	l3958
  8569  003BC8                     u4800:
  8570  003BC8  0E80               	movlw	128
  8571  003BCA  C00A  F006         	movff	LCDGoto@pos,??_LCDGoto
  8572  003BCE  6A07               	clrf	(??_LCDGoto+1)^0,c
  8573  003BD0  1006               	iorwf	??_LCDGoto^0,w,c
  8574  003BD2  6E08               	movwf	_LCDGoto$181^0,c
  8575  003BD4  5007               	movf	(??_LCDGoto+1)^0,w,c
  8576  003BD6  6E09               	movwf	(_LCDGoto$181+1)^0,c
  8577  003BD8  EFF6  F01D         	goto	l3960
  8578  003BDC                     l3958:
  8579  003BDC  0EC0               	movlw	192
  8580  003BDE  C00A  F006         	movff	LCDGoto@pos,??_LCDGoto
  8581  003BE2  6A07               	clrf	(??_LCDGoto+1)^0,c
  8582  003BE4  1006               	iorwf	??_LCDGoto^0,w,c
  8583  003BE6  6E08               	movwf	_LCDGoto$181^0,c
  8584  003BE8  5007               	movf	(??_LCDGoto+1)^0,w,c
  8585  003BEA  6E09               	movwf	(_LCDGoto$181+1)^0,c
  8586  003BEC                     l3960:
  8587  003BEC  5008               	movf	_LCDGoto$181^0,w,c
  8588  003BEE  EC64  F01F         	call	_LCDPutCmd
  8589  003BF2                     
  8590                           ;lcd.c: 161:     _delay((unsigned long)((5)*(8000000/4000.0)));
  8591  003BF2  0E0D               	movlw	13
  8592  003BF4  6E06               	movwf	??_LCDGoto^0,c
  8593  003BF6  0EFC               	movlw	252
  8594  003BF8                     u4977:
  8595  003BF8  2EE8               	decfsz	wreg,f,c
  8596  003BFA  D7FE               	bra	u4977
  8597  003BFC  2E06               	decfsz	??_LCDGoto^0,f,c
  8598  003BFE  D7FC               	bra	u4977
  8599  003C00                     l34:
  8600  003C00  0012               	return		;funcret
  8601  003C02                     __end_of_LCDGoto:
  8602                           	opt callstack 0
  8603                           
  8604 ;; *************** function _LCDPutCmd *****************
  8605 ;; Defined at:
  8606 ;;		line 118 in file "lcd.c"
  8607 ;; Parameters:    Size  Location     Type
  8608 ;;  ch              1    wreg     unsigned char 
  8609 ;; Auto vars:     Size  Location     Type
  8610 ;;  ch              1    3[COMRAM] unsigned char 
  8611 ;; Return value:  Size  Location     Type
  8612 ;;                  1    wreg      void 
  8613 ;; Registers used:
  8614 ;;		wreg, status,2, status,0, cstack
  8615 ;; Tracked objects:
  8616 ;;		On entry : 0/0
  8617 ;;		On exit  : 0/0
  8618 ;;		Unchanged: 0/0
  8619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8621 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8622 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8623 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8624 ;;Total ram usage:        2 bytes
  8625 ;; Hardware stack levels used:    1
  8626 ;; Hardware stack levels required when called:    1
  8627 ;; This function calls:
  8628 ;;		_LCDWriteNibble
  8629 ;; This function is called by:
  8630 ;;		_LCD_Initialize
  8631 ;;		_LCDGoto
  8632 ;;		_main
  8633 ;; This function uses a non-reentrant model
  8634 ;;
  8635                           
  8636                           	psect	text39
  8637  003EC8                     __ptext39:
  8638                           	opt callstack 0
  8639  003EC8                     _LCDPutCmd:
  8640                           	opt callstack 28
  8641                           
  8642                           ;incstack = 0
  8643                           ;LCDPutCmd@ch stored from wreg
  8644  003EC8  6E04               	movwf	LCDPutCmd@ch^0,c
  8645  003ECA                     
  8646                           ;lcd.c: 118: void LCDPutCmd(uint8_t ch);lcd.c: 119: {;lcd.c: 120:     _delay((unsigned l
      +                          ong)((5)*(8000000/4000.0)));
  8647  003ECA  0E0D               	movlw	13
  8648  003ECC  6E03               	movwf	??_LCDPutCmd^0,c
  8649  003ECE  0EFC               	movlw	252
  8650  003ED0                     u4987:
  8651  003ED0  2EE8               	decfsz	wreg,f,c
  8652  003ED2  D7FE               	bra	u4987
  8653  003ED4  2E03               	decfsz	??_LCDPutCmd^0,f,c
  8654  003ED6  D7FC               	bra	u4987
  8655  003ED8                     
  8656                           ;lcd.c: 123:     LCDWriteNibble(ch,0);
  8657  003ED8  0E00               	movlw	0
  8658  003EDA  6E01               	movwf	LCDWriteNibble@rs^0,c
  8659  003EDC  5004               	movf	LCDPutCmd@ch^0,w,c
  8660  003EDE  EC06  F020         	call	_LCDWriteNibble
  8661  003EE2                     
  8662                           ;lcd.c: 126:     ch = (ch << 4);
  8663  003EE2  3804               	swapf	LCDPutCmd@ch^0,w,c
  8664  003EE4  0BF0               	andlw	240
  8665  003EE6  6E04               	movwf	LCDPutCmd@ch^0,c
  8666  003EE8                     
  8667                           ;lcd.c: 128:     _delay((unsigned long)((1)*(8000000/4000.0)));
  8668  003EE8  0E03               	movlw	3
  8669  003EEA  6E03               	movwf	??_LCDPutCmd^0,c
  8670  003EEC  0E98               	movlw	152
  8671  003EEE                     u4997:
  8672  003EEE  2EE8               	decfsz	wreg,f,c
  8673  003EF0  D7FE               	bra	u4997
  8674  003EF2  2E03               	decfsz	??_LCDPutCmd^0,f,c
  8675  003EF4  D7FC               	bra	u4997
  8676  003EF6                     
  8677                           ;lcd.c: 131:     LCDWriteNibble(ch,0);
  8678  003EF6  0E00               	movlw	0
  8679  003EF8  6E01               	movwf	LCDWriteNibble@rs^0,c
  8680  003EFA  5004               	movf	LCDPutCmd@ch^0,w,c
  8681  003EFC  EC06  F020         	call	_LCDWriteNibble
  8682  003F00  0012               	return		;funcret
  8683  003F02                     __end_of_LCDPutCmd:
  8684                           	opt callstack 0
  8685                           
  8686 ;; *************** function _LCDWriteNibble *****************
  8687 ;; Defined at:
  8688 ;;		line 76 in file "lcd.c"
  8689 ;; Parameters:    Size  Location     Type
  8690 ;;  ch              1    wreg     unsigned char 
  8691 ;;  rs              1    0[COMRAM] unsigned char 
  8692 ;; Auto vars:     Size  Location     Type
  8693 ;;  ch              1    1[COMRAM] unsigned char 
  8694 ;; Return value:  Size  Location     Type
  8695 ;;                  1    wreg      void 
  8696 ;; Registers used:
  8697 ;;		wreg, status,2, status,0
  8698 ;; Tracked objects:
  8699 ;;		On entry : 0/0
  8700 ;;		On exit  : 0/0
  8701 ;;		Unchanged: 0/0
  8702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8703 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8704 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8706 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8707 ;;Total ram usage:        2 bytes
  8708 ;; Hardware stack levels used:    1
  8709 ;; This function calls:
  8710 ;;		Nothing
  8711 ;; This function is called by:
  8712 ;;		_LCDPutChar
  8713 ;;		_LCDPutCmd
  8714 ;; This function uses a non-reentrant model
  8715 ;;
  8716                           
  8717                           	psect	text40
  8718  00400C                     __ptext40:
  8719                           	opt callstack 0
  8720  00400C                     _LCDWriteNibble:
  8721                           	opt callstack 28
  8722                           
  8723                           ;incstack = 0
  8724                           ;LCDWriteNibble@ch stored from wreg
  8725  00400C  6E02               	movwf	LCDWriteNibble@ch^0,c
  8726  00400E                     
  8727                           ;lcd.c: 76: void LCDWriteNibble(uint8_t ch,uint8_t rs);lcd.c: 77: {;lcd.c: 79:     ch = 
      +                          (ch >> 4);
  8728  00400E  3802               	swapf	LCDWriteNibble@ch^0,w,c
  8729  004010  0B0F               	andlw	15
  8730  004012  6E02               	movwf	LCDWriteNibble@ch^0,c
  8731                           
  8732                           ;lcd.c: 82:     ch = (ch & 0x0F);
  8733  004014  5002               	movf	LCDWriteNibble@ch^0,w,c
  8734  004016  0B0F               	andlw	15
  8735  004018  6E02               	movwf	LCDWriteNibble@ch^0,c
  8736                           
  8737                           ;lcd.c: 85:     PORTB = (PORTB & 0xF0);
  8738  00401A  5081               	movf	129,w,c	;volatile
  8739  00401C  0BF0               	andlw	240
  8740  00401E  6E81               	movwf	129,c	;volatile
  8741                           
  8742                           ;lcd.c: 88:     PORTB = (PORTB | ch);
  8743  004020  5081               	movf	129,w,c	;volatile
  8744  004022  1002               	iorwf	LCDWriteNibble@ch^0,w,c
  8745  004024  6E81               	movwf	129,c	;volatile
  8746  004026                     
  8747                           ;lcd.c: 91:     PORTBbits.RB4 = rs;
  8748  004026  B001               	btfsc	LCDWriteNibble@rs^0,0,c
  8749  004028  D002               	bra	u4595
  8750  00402A  9881               	bcf	129,4,c	;volatile
  8751  00402C  D001               	bra	u4596
  8752  00402E                     u4595:
  8753  00402E  8881               	bsf	129,4,c	;volatile
  8754  004030                     u4596:
  8755  004030                     
  8756                           ;lcd.c: 94:     PORTBbits.RB5 = 0;
  8757  004030  9A81               	bcf	129,5,c	;volatile
  8758  004032                     
  8759                           ;lcd.c: 97:     PORTBbits.RB6 = 1;
  8760  004032  8C81               	bsf	129,6,c	;volatile
  8761  004034                     
  8762                           ;lcd.c: 100:     PORTBbits.RB6 = 0;
  8763  004034  9C81               	bcf	129,6,c	;volatile
  8764  004036  0012               	return		;funcret
  8765  004038                     __end_of_LCDWriteNibble:
  8766                           	opt callstack 0
  8767                           
  8768 ;; *************** function _ADC_StartConversion *****************
  8769 ;; Defined at:
  8770 ;;		line 89 in file "mcc_generated_files/adc.c"
  8771 ;; Parameters:    Size  Location     Type
  8772 ;;		None
  8773 ;; Auto vars:     Size  Location     Type
  8774 ;;		None
  8775 ;; Return value:  Size  Location     Type
  8776 ;;                  1    wreg      void 
  8777 ;; Registers used:
  8778 ;;		None
  8779 ;; Tracked objects:
  8780 ;;		On entry : 0/0
  8781 ;;		On exit  : 0/0
  8782 ;;		Unchanged: 0/0
  8783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8788 ;;Total ram usage:        0 bytes
  8789 ;; Hardware stack levels used:    1
  8790 ;; This function calls:
  8791 ;;		Nothing
  8792 ;; This function is called by:
  8793 ;;		_main
  8794 ;; This function uses a non-reentrant model
  8795 ;;
  8796                           
  8797                           	psect	text41
  8798  0040F2                     __ptext41:
  8799                           	opt callstack 0
  8800  0040F2                     _ADC_StartConversion:
  8801                           	opt callstack 30
  8802  0040F2                     
  8803                           ;mcc_generated_files/adc.c: 92:     ADCON0bits.GO_nDONE = 1;
  8804  0040F2  82C2               	bsf	194,1,c	;volatile
  8805  0040F4  0012               	return		;funcret
  8806  0040F6                     __end_of_ADC_StartConversion:
  8807                           	opt callstack 0
  8808                           
  8809 ;; *************** function _ADC_SelectChannel *****************
  8810 ;; Defined at:
  8811 ;;		line 81 in file "mcc_generated_files/adc.c"
  8812 ;; Parameters:    Size  Location     Type
  8813 ;;  channel         1    wreg     enum E5999
  8814 ;; Auto vars:     Size  Location     Type
  8815 ;;  channel         1    1[COMRAM] enum E5999
  8816 ;; Return value:  Size  Location     Type
  8817 ;;                  1    wreg      void 
  8818 ;; Registers used:
  8819 ;;		wreg, status,2, status,0
  8820 ;; Tracked objects:
  8821 ;;		On entry : 0/0
  8822 ;;		On exit  : 0/0
  8823 ;;		Unchanged: 0/0
  8824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8826 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8827 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8828 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8829 ;;Total ram usage:        2 bytes
  8830 ;; Hardware stack levels used:    1
  8831 ;; This function calls:
  8832 ;;		Nothing
  8833 ;; This function is called by:
  8834 ;;		_main
  8835 ;; This function uses a non-reentrant model
  8836 ;;
  8837                           
  8838                           	psect	text42
  8839  004080                     __ptext42:
  8840                           	opt callstack 0
  8841  004080                     _ADC_SelectChannel:
  8842                           	opt callstack 30
  8843                           
  8844                           ;incstack = 0
  8845                           ;ADC_SelectChannel@channel stored from wreg
  8846  004080  6E02               	movwf	ADC_SelectChannel@channel^0,c
  8847  004082                     
  8848                           ;mcc_generated_files/adc.c: 81: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 82: {;mcc_generated_files/adc.c: 84:     ADCON0bits.CHS = channel;
  8849  004082  C002  F001         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
  8850  004086  4601               	rlncf	??_ADC_SelectChannel^0,f,c
  8851  004088  4601               	rlncf	??_ADC_SelectChannel^0,f,c
  8852  00408A  50C2               	movf	194,w,c	;volatile
  8853  00408C  1801               	xorwf	??_ADC_SelectChannel^0,w,c
  8854  00408E  0B83               	andlw	-125
  8855  004090  1801               	xorwf	??_ADC_SelectChannel^0,w,c
  8856  004092  6EC2               	movwf	194,c	;volatile
  8857  004094                     
  8858                           ;mcc_generated_files/adc.c: 86:     ADCON0bits.ADON = 1;
  8859  004094  80C2               	bsf	194,0,c	;volatile
  8860  004096  0012               	return		;funcret
  8861  004098                     __end_of_ADC_SelectChannel:
  8862                           	opt callstack 0
  8863                           
  8864 ;; *************** function _ADC_IsConversionDone *****************
  8865 ;; Defined at:
  8866 ;;		line 96 in file "mcc_generated_files/adc.c"
  8867 ;; Parameters:    Size  Location     Type
  8868 ;;		None
  8869 ;; Auto vars:     Size  Location     Type
  8870 ;;		None
  8871 ;; Return value:  Size  Location     Type
  8872 ;;                  1    wreg      _Bool 
  8873 ;; Registers used:
  8874 ;;		wreg
  8875 ;; Tracked objects:
  8876 ;;		On entry : 0/0
  8877 ;;		On exit  : 0/0
  8878 ;;		Unchanged: 0/0
  8879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8884 ;;Total ram usage:        0 bytes
  8885 ;; Hardware stack levels used:    1
  8886 ;; This function calls:
  8887 ;;		Nothing
  8888 ;; This function is called by:
  8889 ;;		_main
  8890 ;; This function uses a non-reentrant model
  8891 ;;
  8892                           
  8893                           	psect	text43
  8894  0040AE                     __ptext43:
  8895                           	opt callstack 0
  8896  0040AE                     _ADC_IsConversionDone:
  8897                           	opt callstack 30
  8898  0040AE                     
  8899                           ;mcc_generated_files/adc.c: 99:     return ((_Bool)(!ADCON0bits.GO_nDONE));
  8900  0040AE  A2C2               	btfss	194,1,c	;volatile
  8901  0040B0  EF5C  F020         	goto	u4811
  8902  0040B4  EF5F  F020         	goto	u4810
  8903  0040B8                     u4811:
  8904  0040B8  0E01               	movlw	1
  8905  0040BA  EF60  F020         	goto	u4820
  8906  0040BE                     u4810:
  8907  0040BE  0E00               	movlw	0
  8908  0040C0                     u4820:
  8909  0040C0  0012               	return		;funcret
  8910  0040C2                     __end_of_ADC_IsConversionDone:
  8911                           	opt callstack 0
  8912                           
  8913 ;; *************** function _ADC_GetConversionResult *****************
  8914 ;; Defined at:
  8915 ;;		line 102 in file "mcc_generated_files/adc.c"
  8916 ;; Parameters:    Size  Location     Type
  8917 ;;		None
  8918 ;; Auto vars:     Size  Location     Type
  8919 ;;		None
  8920 ;; Return value:  Size  Location     Type
  8921 ;;                  2    0[COMRAM] unsigned short 
  8922 ;; Registers used:
  8923 ;;		wreg, status,2, status,0
  8924 ;; Tracked objects:
  8925 ;;		On entry : 0/0
  8926 ;;		On exit  : 0/0
  8927 ;;		Unchanged: 0/0
  8928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8929 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8931 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8932 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8933 ;;Total ram usage:        4 bytes
  8934 ;; Hardware stack levels used:    1
  8935 ;; This function calls:
  8936 ;;		Nothing
  8937 ;; This function is called by:
  8938 ;;		_main
  8939 ;; This function uses a non-reentrant model
  8940 ;;
  8941                           
  8942                           	psect	text44
  8943  0040C2                     __ptext44:
  8944                           	opt callstack 0
  8945  0040C2                     _ADC_GetConversionResult:
  8946                           	opt callstack 30
  8947  0040C2                     
  8948                           ;mcc_generated_files/adc.c: 105:      return ((adc_result_t)((ADRESH << 8) + ADRESL));
  8949  0040C2  50C4               	movf	196,w,c	;volatile
  8950  0040C4  6E04               	movwf	(??_ADC_GetConversionResult+1)^0,c
  8951  0040C6  6A03               	clrf	??_ADC_GetConversionResult^0,c
  8952  0040C8  50C3               	movf	195,w,c	;volatile
  8953  0040CA  2403               	addwf	??_ADC_GetConversionResult^0,w,c
  8954  0040CC  6E01               	movwf	?_ADC_GetConversionResult^0,c
  8955  0040CE  0E00               	movlw	0
  8956  0040D0  2004               	addwfc	(??_ADC_GetConversionResult+1)^0,w,c
  8957  0040D2  6E02               	movwf	(?_ADC_GetConversionResult+1)^0,c
  8958  0040D4  0012               	return		;funcret
  8959  0040D6                     __end_of_ADC_GetConversionResult:
  8960                           	opt callstack 0
  8961                           
  8962                           	psect	rparam
  8963  0000                     tosu	equ	0xFFF
  8964                           tosh	equ	0xFFE
  8965                           tosl	equ	0xFFD
  8966                           stkptr	equ	0xFFC
  8967                           pclatu	equ	0xFFB
  8968                           pclath	equ	0xFFA
  8969                           pcl	equ	0xFF9
  8970                           tblptru	equ	0xFF8
  8971                           tblptrh	equ	0xFF7
  8972                           tblptrl	equ	0xFF6
  8973                           tablat	equ	0xFF5
  8974                           prodh	equ	0xFF4
  8975                           prodl	equ	0xFF3
  8976                           indf0	equ	0xFEF
  8977                           postinc0	equ	0xFEE
  8978                           postdec0	equ	0xFED
  8979                           preinc0	equ	0xFEC
  8980                           plusw0	equ	0xFEB
  8981                           fsr0h	equ	0xFEA
  8982                           fsr0l	equ	0xFE9
  8983                           wreg	equ	0xFE8
  8984                           indf1	equ	0xFE7
  8985                           postinc1	equ	0xFE6
  8986                           postdec1	equ	0xFE5
  8987                           preinc1	equ	0xFE4
  8988                           plusw1	equ	0xFE3
  8989                           fsr1h	equ	0xFE2
  8990                           fsr1l	equ	0xFE1
  8991                           bsr	equ	0xFE0
  8992                           indf2	equ	0xFDF
  8993                           postinc2	equ	0xFDE
  8994                           postdec2	equ	0xFDD
  8995                           preinc2	equ	0xFDC
  8996                           plusw2	equ	0xFDB
  8997                           fsr2h	equ	0xFDA
  8998                           fsr2l	equ	0xFD9
  8999                           status	equ	0xFD8


Data Sizes:
    Strings     69
    Constant    0
    Data        0
    BSS         122
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    107     149
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_16(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_16(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_4(CODE[6]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> Buffer(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> Buffer(BANK0[20]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1098_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> Buffer(BANK0[20]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> Buffer(BANK0[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_4(CODE[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_4(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_4(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    LCDPutStr@str	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_5(CODE[3]), Buffer(BANK0[20]), STR_3(CODE[10]), STR_2(CODE[16]), 
		 -> STR_1(CODE[15]), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _atoi->_isspace
    _LCD_Initialize->_LCDPutCmd
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_LCDWriteNibble
    _LCDGoto->_LCDPutCmd
    _LCDPutCmd->_LCDWriteNibble

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   35556
                                            105 BANK0      2     2      0
            _ADC_GetConversionResult
               _ADC_IsConversionDone
                  _ADC_SelectChannel
                _ADC_StartConversion
                            _LCDGoto
                          _LCDPutCmd
                          _LCDPutStr
                     _LCD_Initialize
                  _SYSTEM_Initialize
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   27873
                                             87 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   27516
                                             79 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   27144
                                             91 COMRAM     4     4      0
                                             61 BANK0     18    12      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   21845
                                             84 COMRAM     7     0      7
                                              0 BANK0     61    61      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             64 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2504
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     638
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2159
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1152
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Initialize                                       1     1      0     461
                                              4 COMRAM     1     1      0
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (1) _LCDPutStr                                            5     3      2     931
                                              4 COMRAM     5     3      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (2) _LCDPutChar                                           2     2      0     461
                                              2 COMRAM     2     2      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (1) _LCDGoto                                              6     5      1     747
                                              4 COMRAM     6     5      1
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (2) _LCDPutCmd                                            2     2      0     461
                                              2 COMRAM     2     2      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (3) _LCDWriteNibble                                       2     1      1     394
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_SelectChannel                                    2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversionResult                              4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversionResult
   _ADC_IsConversionDone
   _ADC_SelectChannel
   _ADC_StartConversion
   _LCDGoto
     _LCDPutCmd
       _LCDWriteNibble
   _LCDPutCmd
     _LCDWriteNibble
   _LCDPutStr
     _LCDPutChar
       _LCDWriteNibble
   _LCD_Initialize
     _LCDPutCmd
       _LCDWriteNibble
   _SYSTEM_Initialize
     _ADC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   ___fldiv
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fleq
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6B      95       5       93.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     144      12        0.0%
DATA                 0      0     144       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Nov 12 17:10:42 2019

                    ___fldiv@aexp 0040                      ___fldiv@bexp 003F  
                  _LCD_Initialize 3E8E                      ___fldiv@sign 0038  
                              l13 3EC6                                l22 3F00  
                              l16 4036                                l34 3C00  
                              l19 400A                       ?_LCDPutChar 0001  
                              l28 3B90                                l61 40F4  
                              l55 40AC                                l64 40C0  
                              l58 4096                                l67 40D4  
                    ___awdiv@sign 0006               ___wmul@multiplicand 0003  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                    __CFG_CP2$OFF 000000                      __CFG_CP3$OFF 000000  
                     __CFG_LVP$ON 000000                               l130 40E2  
                             l133 40F0                               l221 38F6  
                             l216 3878                               l219 38BA  
                             l172 3E8C                               l342 3C5A  
                             l239 1BF6                               l343 3C62  
                             l336 246A                               l257 1434  
                             l329 2524                               l346 405C  
                             l611 354C                               l283 17CC  
                             l620 3F70                               l605 3B14  
                             l616 3592                               l643 348E  
                             l900 1FD0                               l901 1FBE  
                             l590 3A6A                               l577 39BA  
                             l930 2B48                               l916 3E0A  
                             l941 2C06                               l933 2B0C  
                             l942 2BF4                               l928 2CE8  
                             l960 25EA                               l970 2846  
                             l874 1DE6                               l939 2B8E  
                             l891 1F00                               l883 20B6  
                             l875 1DD4                               l964 294E  
                             l876 1D9A                               l967 27E0  
                             l977 2910                               l969 2858  
                    __CFG_CPB$OFF 000000                      __CFG_CPD$OFF 000000  
                             _pad 3832                      ___awmod@sign 0006  
                             wreg 000FE8                      ___flmul@aexp 0020  
                    ___flmul@bexp 0021                      ___flmul@sign 001B  
                    ___flmul@temp 0026                      ___flmul@prod 0022  
                 __end_of_LCDGoto 3C02                      ___fltol@exp1 000A  
                            l1001 2F52                              l1004 30AE  
                            l1015 3046                              l1008 2FEA  
                            l1104 3830                              l1112 3E4E  
                            l1122 40F6                              l1027 3690  
                            l1134 3FDE                              l1119 3D72  
                            l1056 3236                              l3000 2A02  
                            l1128 3D20                              l1065 2EFA  
                            l1153 3CC2                              l3010 2A42  
                            l3002 2A04                              l1138 3766  
                            l1075 3FA8                              l1083 3DC4  
                            l1059 323E                              l3020 2A72  
                            l3012 2A4A                              l3004 2A0C  
                            l1068 2E3E                              l1148 3CBA  
                            l3030 2AB0                              l3022 2A72  
                            l3014 2A4E                              l3006 2A1C  
                            l3110 2540                              l4000 2F78  
                            l3040 2AFC                              l3032 2AC0  
                            l3008 2A32                              l3200 2810  
                            l3120 2578                              l3112 2542  
                            l1089 3F38                              l4010 2FD2  
                            l3050 2B46                              l3042 2B0A  
                            l3034 2AD0                              l3026 2A86  
                            l3018 2A62                              l3210 2882  
                            l3202 283E                              l3130 25A4  
                            l3122 2588                              l3114 2552  
                            l3106 2526                              l4020 3036  
                            l4012 2FD4                              l4004 2F8C  
                            l3300 3A02                              l3060 2B8C  
                            l3052 2B58                              l3044 2B16  
                            l3036 2AD8                              l3028 2AA0  
                            l3220 28F8                              l3212 28AC  
                            l3140 25FA                              l3132 25B4  
                            l3124 258E                              l3116 2562  
                            l3108 2532                              l4030 308E  
                            l4022 3054                              l4014 2FE0  
                            l4006 2F94                              l3310 3A3E  
                            l3302 3A0A                              l3070 2BEC  
                            l3054 2B6E                              l3062 2B9E  
                            l3046 2B34                              l3038 2AE8  
                            l3222 2914                              l3230 293A  
                            l3206 2868                              l3214 28B0  
                            l3150 2634                              l3142 260A  
                            l3134 25C4                              l3126 2594  
                            l3118 2572                              l4032 309C  
                            l4024 3056                              l4016 301C  
                            l4008 2FA0                              l3312 3A44  
                            l3304 3A12                              l3080 2C5A  
                            l3064 2BAC                              l3056 2B74  
                            l3048 2B36                              l3232 293E  
                            l3224 2924                              l3216 28CA  
                            l3208 2874                              l3160 2686  
                            l3152 264A                              l3136 25D4  
                            l3128 25A2                              l3400 3442  
                            l4040 3244                              l4034 309E  
                            l4026 305A                              l4018 3028  
                            l3250 3916                              l3242 38F8  
                            l3306 3A20                              l3314 3A4A  
                            l3090 2CC4                              l3074 2C16  
                            l3082 2C5E                              l3066 2BB0  
                            l3058 2B7E                              l3330 3AE8  
                            l3322 3A6C                              l3226 2932  
                            l3218 28DE                              l3170 26CC  
                            l3162 2694                              l3154 2656  
                            l3146 261E                              l3138 25DA  
                            l3402 344E                              l4050 3270  
                            l4042 3248                              l4028 307E  
                            l3420 3DBE                              l3412 3D74  
                            l3260 394A                              l3252 3924  
                            l3244 38FC                              l3316 3A5A  
                            l3308 3A36                              l3092 2CC8  
                            l3084 2C78                              l3076 2C22  
                            l3068 2BBE                              l3332 3B0C  
                            l3324 3A9A                              l3340 34BE  
                            l3228 2934                              l3180 273A  
                            l3172 26E6                              l3164 26A0  
                            l3156 266E                              l3148 262A  
                            l2700 1C8E                              l3236 3DC6  
                            l3404 345E                              l3500 1306  
                            l4060 32A4                              l4052 328A  
                            l4044 324E                              l3414 3D78  
                            l3270 3984                              l3262 3952  
                            l3254 392C                              l3246 390A  
                            l3318 3A62                              l3094 2CD6  
                            l3086 2C8E                              l3078 2C30  
                            l3334 3B12                              l3326 3AAA  
                            l3350 352C                              l3342 34CE  
                            l3190 27D0                              l3182 2764  
                            l3174 26F6                              l3166 26B0  
                            l3158 267A                              l2702 1C9E  
                            l2710 1CC8                              l3238 3DD6  
                            l3406 346E                              l3510 13DE  
                            l3502 1360                              l3430 1070  
                            l4070 3360                              l4062 32B8  
                            l4054 3290                              l4046 325A  
                            l4038 3240                              l3416 3D8C  
                            l3280 39AA                              l3272 398C  
                            l3264 395A                              l3256 3930  
                            l3248 3912                              l3096 2CDC  
                            l3088 2CA8                              l3328 3AD8  
                            l3352 353A                              l3344 34FC  
                            l3192 27DE                              l3184 279A  
                            l3176 2712                              l3168 26BC  
                            l3360 3F3A                              l2800 1ED0  
                            l2720 1D00                              l2712 1CD8  
                            l2704 1CAE                              l3408 347E  
                            l2640 3796                              l3600 185C  
                            l3520 1428                              l3512 13E2  
                            l3504 1394                              l3440 10C0  
                            l3432 1078                              l3424 1048  
                            l4072 336C                              l4064 32C4  
                            l4056 329A                              l4048 3264  
                            l3418 3DBA                              l3282 39B2  
                            l3274 398E                              l3266 3968  
                            l3258 3938                              l3290 39CE  
                            l3098 2CDE                              l3354 358A  
                            l3346 350C                              l3338 3490  
                            l3194 27F0                              l3186 27A8  
                            l3178 271E                              l3362 3F50  
                            l2802 1EE0                              l2730 1D14  
                            l2722 1D04                              l2714 1CEA  
                            l2706 1CBE                              l3370 33A0  
                            l2642 37B4                              l2634 3768  
                            l2650 3E18                              l3610 18A8  
                            l3602 186E                              l3530 1464  
                            l3514 13F4                              l3522 1440  
                            l3506 139C                              l3450 10F8  
                            l3442 10CE                              l3434 109C  
                            l3426 1052                              l4074 3378  
                            l4066 332E                              l4058 32A0  
                            l3276 3994                              l3268 396E  
                            l3292 39D6                              l3356 3590  
                            l3348 351A                              l3196 27FE  
                            l3188 27C6                              l3364 3F60  
                            l2820 1F62                              l2812 1F3A  
                            l2804 1EF0                              l2740 1D28  
                            l2732 1D18                              l2724 1D08  
                            l2716 1CF8                              l2708 1CC0  
                            l3380 33F0                              l2900 361A  
                            l2644 37EA                              l2636 377A  
                            l2652 3E2A                              l2660 3FBA  
                            l3700 1B60                              l3620 18DC  
                            l3612 18B6                              l3604 1880  
                            l3540 14CA                              l3532 1480  
                            l3516 1406                              l3508 13CE  
                            l3460 115E                              l3452 10FC  
                            l3444 10E0                              l3436 10A6  
                            l3428 1062                              l4068 333A  
                            l3278 399A                              l3294 39DA  
                            l3286 39BC                              l3198 2802  
                            l2822 1F6A                              l2814 1F44  
                            l2806 1F16                              l2830 1F8E  
                            l2750 1D3C                              l2742 1D2C  
                            l2734 1D1C                              l2726 1D0C  
                            l2718 1CFC                              l2670 1BF8  
                            l3390 341A                              l3382 33F4  
                            l3374 33B4                              l2902 3626  
                            l2638 378C                              l2654 3E2E  
                            l2662 3FD2                              l3710 1BB8  
                            l3702 1B66                              l3630 190E  
                            l3622 18EC                              l3614 18C6  
                            l3606 188E                              l3550 1512  
                            l3542 14DC                              l3534 14B6  
                            l3518 140E                              l3462 1170  
                            l3446 10EC                              l3454 1102  
                            l3438 10AE                              l4096 316C  
                            l3296 39E8                              l3288 39C0  
                            l2840 1FE0                              l2832 1F92  
                            l2824 1F6E                              l2816 1F52  
                            l2808 1F26                              l2760 1DB4  
                            l2752 1D66                              l2744 1D30  
                            l2736 1D20                              l2728 1D10  
                            l2680 1C34                              l2672 1C04  
                            l3392 3424                              l3384 3402  
                            l3376 33DE                              l3368 338A  
                            l2912 3688                              l2648 3E0C  
                            l2656 3FAA                              l2920 3C64  
                            l3712 1BC0                              l3640 19B6  
                            l3632 1920                              l3624 18F0  
                            l3616 18CA                              l3608 1896  
                            l3560 155A                              l3552 1520  
                            l3544 14EE                              l3536 14BE  
                            l3528 1452                              l3480 1244  
                            l3464 118C                              l3456 1128  
                            l3472 11D6                              l3448 10F4  
                            l3800 20FC                              l3730 30E8  
                            l3722 30B0                              l3298 39F0  
                            l2850 2046                              l2842 1FEC  
                            l2834 1FA0                              l2826 1F7E  
                            l2818 1F54                              l2770 1DF4  
                            l2762 1DB8                              l2754 1D82  
                            l2746 1D34                              l2738 1D24  
                            l2690 1C64                              l2682 1C44  
                            l2674 1C12                              l3394 342E  
                            l3378 33E0                              l2906 3632  
                            l2930 2CEA                              l2658 3FB6  
                            l2666 3F02                              l3714 1BD0  
                            l3706 1B9A                              l3650 1A0E  
                            l3642 19BE                              l3634 1924  
                            l3626 18F6                              l3618 18D0  
                            l3570 166E                              l3562 156A  
                            l3554 1538                              l3546 14FC  
                            l3538 14C2                              l3482 1260  
                            l3474 11FC                              l3490 127C  
                            l3466 11A4                              l3810 215E  
                            l3802 2100                              l3900 4000  
                            l3740 313E                              l3732 311E  
                            l3724 30C4                              l2860 208E  
                            l2852 2056                              l2844 1FFA  
                            l2836 1FB6                              l2828 1F80  
                            l2780 1E36                              l2772 1E04  
                            l2764 1DC6                              l2756 1D92  
                            l2748 1D38                              l2692 1C76  
                            l2684 1C46                              l2676 1C14  
                            l2908 3644                              l2932 2D0A  
                            l2916 3CC4                              l2924 3C9A  
                            l3716 1BD6                              l3708 1BAC  
                            l3660 1A52                              l3652 1A1C  
                            l3628 18FC                              l3636 192A  
                            l3644 19C2                              l3580 170E  
                            l3564 157E                              l3572 1674  
                            l3556 154A                              l3548 1500  
                            l3492 1296                              l3468 11AE  
                            l3820 220E                              l3812 2198  
                            l3804 2124                              l3902 4098  
                            l3910 3E70                              l3750 31B8  
                            l3742 3146                              l3734 3122  
                            l3726 30C8                              l2862 2090  
                            l2854 2076                              l2846 2034  
                            l2790 1E64                              l2782 1E44  
                            l2766 1DC8                              l2758 1DA8  
                            l2694 1C78                              l2678 1C24  
                            l2686 1C4E                              l2950 2EB2  
                            l2942 2DF2                              l2934 2D60  
                            l2918 3CD4                              l2926 3CAC  
                            l3670 1A88                              l3662 1A5A  
                            l3654 1A2C                              l3646 19E0  
                            l3638 1982                              l3590 17A4  
                            l3582 1740                              l3574 1692  
                            l3566 15E2                              l3558 1552  
                            l3478 1232                              l3830 2294  
                            l3814 21B8                              l3806 212C  
                            l3822 2220                              ?_pad 0011  
                            l3912 3E72                              l3904 3E50  
                            l3744 314E                              l3728 30CC  
                            l2864 2096                              l2856 207A  
                            l2848 2036                              l2792 1E6E  
                            l2784 1E50                              l2776 1E18  
                            l2768 1DD2                              l2696 1C7E  
                            l2688 1C5E                              l2952 2EDA  
                            l2944 2E2E                              l2936 2D74  
                            l2880 3870                              l2872 3832  
                            l3680 1AE4                              l3672 1A90  
                            l3664 1A6A                              l3656 1A30  
                            l3648 19FC                              l3592 17B8  
                            l3584 1750                              l3576 16C6  
                            l3568 163A                              l3496 12CC  
                            l3840 232C                              l3832 22C6  
                            l3824 2242                              l3816 21C6  
                            l3808 213A                              l3920 3C0A  
                            l3930 3E98                              l3914 3E8A  
                            l3906 3E68                              l2962 4038  
                            l3754 31F6                              l3746 3182  
                            l3738 3128                              l2970 295C  
                            l2866 20A4                              l2858 2088  
                            l2786 1E54                              l2778 1E28  
                            l2794 1E74                              l2698 1C8C  
                            l2954 2EEA                              l2938 2D82  
                            l2946 2E62                              l2890 38DE  
                            l2882 3884                              l2874 3842  
                            l3690 1B24                              l3682 1AEC  
                            l3674 1A9C                              l3666 1A72  
                            l3658 1A40                              l3594 17C4  
                            l3586 1760                              l3578 16F8  
                            l3498 1300                              l3770 36C8  
                            l3850 23F4                              l3834 22D8  
                            l3826 2252                              l3922 3C18  
                            l3940 3EC0                              l3932 3EA8  
                            l3916 40E4                              l3908 3E6E  
                            l2964 4054                              l3756 3208  
                            l2980 299C                              l2972 296A  
                            l2868 20A6                              l2796 1E9A  
                            l2788 1E62                              l2948 2E9E  
                            l2884 3898                              l2876 3856  
                            l3692 1B36                              l3676 1AA2  
                            l3684 1AF2                              l3668 1A80  
                            l3596 17E8                              l3588 1794  
                            l3780 3744                              l3772 36D6  
                            l3764 3692                              l3852 2406  
                            l3860 247E                              l3836 22EE  
                            l3844 2358                              l3828 2284  
                            l3924 3C3E                              l3790 4032  
                            l3950 3B94                              l3942 3B16  
                            l3934 3EAE                              l3926 3E8E  
                            l2958 3F72                              l3758 321A  
                            l2990 29C2                              l2982 299E  
                            l2974 296C                              l2798 1ECE  
                            l2894 3594                              l2886 389C  
                            l2878 3864                              l3694 1B42  
                            l3686 1B04                              l3678 1AC8  
                            l3598 184C                              l3774 36EE  
                            l3766 36BC                              l3862 24A2  
                            l3870 24D2                              l3854 243A  
                            l3846 2386                              l3838 22FC  
                            l3918 3C02                              l3792 4034  
                            l3784 400E                              l3960 3BEC  
                            l3952 3BA4                              l3944 3B1E  
                            l3936 3EB4                              l3928 3E96  
                            l2992 29D0                              l2976 297C  
                            l2984 29A6                              l2968 2950  
                            l2896 35B4                              l2888 38CA  
                            l3696 1B4A                              l3688 1B1E  
                            l3776 370A                              l3872 24E0  
                            l3864 24B0                              l3970 40AE  
                            l3786 4026                              l3890 3EE8  
                            l3962 3BF2                              l3954 3BB8  
                            l3946 3B50                              l3938 3EBA  
                            l2994 29D2                              l2986 29B6  
                            l2978 298C                              l2898 35F2  
                            l3698 1B5A                              l3778 371C  
                            l3866 24C4                              l3794 20B8  
                            l3964 4082                              l3788 4030  
                            l3892 3EF6                              l3884 3ECA  
                            l3956 3BC8                              l3948 3B52  
                            l2996 29E2                              l2988 29BC  
                            l3796 20DC                              l3876 24EE  
                            l3980 3D22                              l3974 40C2  
                            l3966 4094                              l3886 3ED8  
                            l3958 3BDC                              l3894 3FE2  
                            l2998 29F2                              l3878 2512  
                            l3798 20EA                              l3982 3D34  
                            l3968 40F2                              l3888 3EE2  
                            l3896 3FF0                              l3992 2EFE  
                            l3984 3D3C                              l3898 3FFA  
                            l3978 40D6                              l3994 2F0E  
                            l3986 3D44                              l3996 2F1C  
                            l3988 3D60                              l3998 2F62  
                            STR_1 1011                              STR_2 1001  
                            STR_3 1020                              STR_4 102A  
                            STR_5 1043                              STR_6 1030  
                            STR_7 1038                              u3000 35F2  
                            u3001 35EE                              u3010 361A  
                            u3011 3616                              u3020 3644  
                            u3100 3CAC                              u3021 3640  
                            u3101 3CA8                              _LATA 000F89  
                            u3110 2D32                              _LATB 000F8A  
                            _LATC 000F8B                              u3040 367E  
                            u3200 2EDA                              u3120 2D60  
                            u4000 1158                              _LATD 000F8C  
                            u3041 3678                              u3201 2ED6  
                            u3121 2D5C                              u4001 1152  
                            _LATE 000F8D                              u3210 3FA2  
                            u3050 3680                              u3130 2D82  
                            u4010 115A                              u3211 3F9C  
                            u3035 3656                              u3131 2D7E  
                            u3115 2D28                              u3220 3FA4  
                            u3300 2A72                              u2500 37B4  
                            u3060 3D0E                              u4100 13F4  
                            u4020 1170                              u3301 2A6E  
                            u2501 37B0                              u4101 13F0  
                            u4021 116C                              u3310 2AE8  
                            u3230 296A                              u3150 2DEE  
                            u2510 37EA                              u3070 3D20  
                            u4110 1406                              u4030 11FC  
                            u3311 2AE4                              u3231 2966  
                            u3151 2DEA                              u2511 37E6  
                            u3071 3D1C                              u4111 1402  
                            u4031 11F8                              u3400 2C02  
                            u3320 2B0A                              u3240 297C  
                            u2600 1C8C                              u3160 2E12  
                            u2520 3E4E                              u3080 3C94  
                            u4200 1512                              u4120 1428  
                            u4040 122C                              u3401 2BFE  
                            u3321 2B06                              u3241 2978  
                            u2601 1C88                              u3145 2D96  
                            u2521 3E4A                              u3081 3C8E  
                            u4201 150E                              u4121 1424  
                            u4041 1226                              u3410 2C16  
                            u3330 2B34                              u3250 298C  
                            u2610 1C9E                              u3170 2E2E  
                            u3146 2DA0                              u2530 3FD2  
                            u3090 3C96                              u4210 1520  
                            u4130 144E                              u4050 122E  
                            u3411 2C12                              u3331 2B30  
                            u3251 2988                              u2611 1C9A  
                            u3171 2E2A                              u3147 2DB0  
                            u2531 3FCE                              u3067 3D04  
                            u4211 151C                              u4131 144A  
                            u3420 2C30                              u3340 2B58  
                            u3260 29D0                              u3500 25B4  
                            u2700 1DE6                              u2620 1CAE  
                            u3180 2E82                              u2540 3F32  
                            u4300 1880                              u4220 154A  
                            u4140 1464                              u4060 1244  
                            u3421 2C2C                              u3341 2B54  
                            u3261 29CC                              u3501 25B0  
                            u2701 1DE2                              u2621 1CAA  
                            u3165 2E08                              u2541 3F2C  
                            u4301 187C                              u4221 1546  
                            u4141 1460                              u4061 1240  
                            u3430 2C78                              u3350 2B6E  
                            u3270 29E2                              u3510 25C4  
                            u2710 1DF4                              u2630 1CEA  
                            u3190 2E9E                              u2550 3F34  
                            u4310 188E                              u4230 1692  
                            u4150 1480                              u4070 12C8  
                            u3431 2C74                              u3351 2B6A  
                            u3271 29DE                              u3511 25C0  
                            u2711 1DF0                              u2631 1CE6  
                            u3191 2E9A                              u4311 188A  
                            u4231 168E                              u4151 147C  
                            u4071 12C4                              u3440 2CA8  
                            u3360 2B8C                              u3280 29F2  
                            u3600 2868                              u3520 25FA  
                            u2800 1F52                              u2720 1E04  
                            u2640 1CF8                              u2560 1C12  
                            u2480 377A                              u4400 1A80  
                            u4320 18A8                              u4240 16F8  
                            u4160 14B6                              u4080 135C  
                            u3441 2CA4                              u3361 2B88  
                            u3281 29EE                              u3601 2864  
                            u3521 25F6                              u2801 1F4E  
                            u2721 1E00                              u2641 1CF4  
                            u2561 1C0E                              u3185 2E78  
                            u2481 3776                              u4401 1A7C  
                            u4321 18A4                              u4241 16F4  
                            u4161 14B2                              u4081 1358  
                            u3450 2CD6                              u3370 2BAC  
                            u3290 2A32                              u3610 2882  
                            u3530 260A                              u2810 1F62  
                            u2730 1E36                              u2650 1D66  
                            u2570 1C24                              u2490 378C  
                            u4410 1B04                              u4330 18B6  
                            u4250 1740                              u4170 14DC  
                            u4090 13CE                              u3451 2CD2  
                            u3371 2BA8                              u3291 2A2E  
                            u3611 287E                              u3531 2606  
                            u2811 1F5E                              u2731 1E32  
                            u2651 1D62                              u2571 1C20  
                            u2491 3788                              u4411 1B00  
                            u4331 18B2                              u4251 173C  
                            u4171 14D8                              u4091 13CA  
                            u4500 31F0                              u3700 39AA  
                            u3380 2BBE                              u3620 28CA  
                            u3540 2784                              u3460 2540  
                            u2900 2046                              u2820 1F7E  
                            u2740 1E44                              u2660 1D7E  
                            u2580 1C34                              u4420 1B1E  
                            u4340 190E                              u4260 1750  
                            u4180 14EE                              u4501 31EA  
                            u3701 39A6                              u3381 2BBA  
                            u3621 28C6                              u3461 253C  
                            u2901 2042                              u2821 1F7A  
                            u2741 1E40                              u2661 1D78  
                            u2581 1C30                              u4421 1B1A  
                            u4341 190A                              u4261 174C  
                            u4181 14EA                              u4510 31F2  
                            u3710 39CE                              u3390 2BEC  
                            u3630 28F8                              u3550 27DE  
                            u3470 2552                              u2910 2056  
                            u2830 1F8E                              u2750 1E62  
                            u2670 1D80                              u2590 1C76  
                            u4430 1B36                              u4350 19E0  
                            u4270 17B8                              u4190 14FC  
                            u3711 39CA                              u3391 2BE8  
                            u3631 28F4                              u3551 27DA  
                            u3471 254E                              u2911 2052  
                            u2831 1F8A                              u2751 1E5E  
                            u2591 1C72                              u4431 1B32  
                            u4351 19DC                              u4271 17B4  
                            u4191 14F8                              u4520 3208  
                            u3720 39E8                              u3800 34BE  
                            u3640 2932                              u3560 27FE  
                            u3480 2562                              u2920 2076  
                            u2840 1FA0                              u2760 1E9A  
                            u2680 1DA8                              u4440 1B94  
                            u4360 19FC                              u4280 185C  
                            u4600 20DC                              u4521 3204  
                            u3721 39E4                              u3801 34BA  
                            u3641 292E                              u3561 27FA  
                            u3545 277A                              u3481 255E  
                            u2921 2072                              u2841 1F9C  
                            u2761 1E96                              u2681 1DA4  
                            u4441 1B8E                              u4361 19F8  
                            u4281 1858                              u4601 20D8  
                            u4530 321A                              u3650 390A  
                            u3730 3A02                              u3810 34FC  
                            u3570 2810                              u3490 25A2  
                            u2930 2088                              u2850 1FB6  
                            u2770 1EE0                              u2690 1DC6  
                            u4450 1B96                              u4370 1A0E  
                            u4290 186E                              u4610 2124  
                            u4531 3216                              u3651 3906  
                            u3731 39FE                              u3811 34F8  
                            u3571 280C                              u3491 259E  
                            u2931 2084                              u2851 1FB2  
                            u2771 1EDC                              u2691 1DC2  
                            u4371 1A0A                              u4291 186A  
                            u4611 2120                              u3660 3924  
                            u3740 3A20                              u3820 351A  
                            u3580 283E                              u2940 20A4  
                            u2860 1FCC                              u2780 1F16  
                            u3900 343E                              u4460 1BAC  
                            u4380 1A1C                              u4540 36BC  
                            u4700 23EC                              u4620 215E  
                            u3661 3920                              u3741 3A1C  
                            u3821 3516                              u3581 283A  
                            u2941 20A0                              u2861 1FC8  
                            u2781 1F12                              u3901 343A  
                            u4461 1BA8                              u4381 1A18  
                            u4541 36B8                              u4701 23E6  
                            u4621 215A                              u4470 30E8  
                            u3670 394A                              u3750 3A36  
                            u3830 353A                              u3590 2854  
                            u2870 1FE0                              u2790 1F26  
                            u3910 345E                              u2950 3842  
                            u4390 1A52                              u4550 36EE  
                            u4710 23EE                              u4630 2206  
                            u4471 30E4                              u3671 3946  
                            u3751 3A32                              u3831 3536  
                            u3591 2850                              u2871 1FDC  
                            u2791 1F22                              u3911 345A  
                            u2951 383E                              u4391 1A4E  
                            u4551 36EA                              u4631 2200  
                            u4800 3BC8                              u4480 311E  
                            u3680 3968                              u3760 3A5A  
                            u3840 358A                              u2880 1FFA  
                            u3920 346E                              u2960 3864  
                            u4560 370A                              u4720 2406  
                            u4640 2208                              u4801 3BC4  
                            u4481 311A                              u3681 3964  
                            u3761 3A56                              u3841 3586  
                            u2881 1FF6                              u3921 346A  
                            u2961 3860                              u4561 3706  
                            u4721 2402                              u4810 40BE  
                            u3930 3D8C                              u4490 313A  
                            u3690 3984                              u3770 3A9A  
                            u3850 3F50                              u2890 2034  
                            u2970 38BA                              u4570 371C  
                            u4730 24A2                              u4650 2220  
                            u4811 40B8                              u3931 3D88  
                            u4491 3136                              u3691 3980  
                            u3771 3A96                              u3851 3F4C  
                            u2891 2030                              u2971 38B6  
                            u4571 3718                              u4731 249E  
                            u4651 221C                              u4820 40C0  
                            u4900 3054                              u3940 3DBA  
                            u3780 3AD8                              u3860 33A0  
                            u2980 38CA                              u4580 3744  
                            u4660 2252                              u4740 3C5A  
                            u4901 3050                              u3941 3DB6  
                            u3781 3AD4                              u3861 339C  
                            u2981 38C6                              u4581 3740  
                            u4661 224E                              u4741 3C56  
                            u4750 3B4C                              u4910 308E  
                            u4830 2F0E                              u3790 3B0C  
                            u3870 33D4                              u2990 35D4  
                            u3950 1070                              u4670 2294  
                            u4911 308A                              u4831 2F0A  
                            u3791 3B08                              u3951 106C  
                            u4671 2290                              u4760 3B80  
                            u4920 309C                              u4840 2F1C  
                            u3880 3402                              u3960 10C0  
                            u4680 22D8                              u4921 3098  
                            u4841 2F18                              u3881 33FE  
                            u3961 10BC                              u4681 22D4  
                            u4770 3B90                              u4850 2F78  
                            u3890 3416                              u3970 10CE  
                            u4690 2386                              u4930 32B8  
                            u4595 402E                              u4771 3B8C  
                            u4851 2F74                              u3891 3412  
                            u3875 33CA                              u2995 35CA  
                            u3971 10CA                              u4691 2382  
                            u4931 32B4                              u4596 4030  
                            u4780 3BA4                              u4860 2FCE  
                            u3980 10E0                              u4781 3BA0  
                            u4757 3B42                              u4861 2FCA  
                            u3981 10DC                              u4790 3BB4  
                            u4870 3018                              u3990 1128  
                            u4791 3BB0                              u4767 3B76  
                            u4871 3014                              u3991 1124  
                            u4880 3036                              u4881 3032  
                            u4890 3046                              u4891 3042  
                            u4947 327C                              u4957 3E9E  
                            u4967 3FE8                              u4977 3BF8  
                            u4987 3ED0                              u4997 3EEE  
                            _WPUB 000F61                              _dbuf 0100  
                            _atoi 30B0                              _main 3240  
                            _prec 00DB                              _nout 00D7  
                            pad@i 0018                              pad@p 0015  
                            fsr1h 000FE2                              fsr2h 000FDA  
                            indf1 000FE7                              indf2 000FDF  
                            fsr1l 000FE1                              pad@w 001A  
                            fsr2l 000FD9                     __CFG_BORV$190 000000  
                   ___fpclassifyf 3594                __size_of_LCDPutCmd 003A  
                            prodh 000FF4                              prodl 000FF3  
                            start 0000                __size_of_LCDPutStr 007C  
                   __CFG_IESO$OFF 000000                   ___fldiv@new_exp 0039  
                    _tolower$1170 000D            __end_of_LCD_Initialize 3EC8  
                    ___param_bank 000000                             ??_pad 0017  
                     LCDPutCmd@ch 0004    __size_of_OSCILLATOR_Initialize 000E  
   __end_of_OSCILLATOR_Initialize 40F2                     ___fltol@sign1 0009  
                           ?_atoi 0008                   __end_of___fladd 20B8  
                           ?_main 0001                   __end_of___fldiv 2CEA  
                 __end_of___awdiv 39BC                   __end_of___flneg 3F72  
                           STR_10 1034                             STR_11 103C  
                           STR_14 1040                             STR_16 1040  
                 __end_of___awmod 3A6C                   __end_of___flmul 2950  
                 __end_of___flsub 3E0C                   __end_of___fltol 3490  
                 ___awdiv@divisor 0003                    __CFG_DEBUG$OFF 000000  
                 ___awdiv@counter 0005                      vfpfcnvrt@fmt 009F  
                           _PORTB 000F81                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                             _TRISE 000F96  
__size_of_ADC_GetConversionResult 0014                     __CFG_WRT0$OFF 000000  
                   __CFG_WRT1$OFF 000000                     __CFG_WRT2$OFF 000000  
                   __CFG_WRT3$OFF 000000                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                    __CFG_EBTR1$OFF 000000  
                  __CFG_EBTR2$OFF 000000                    __CFG_EBTR3$OFF 000000  
                   __CFG_WRTB$OFF 000000                     __CFG_WRTC$OFF 000000  
                   __CFG_WRTD$OFF 000000                    __CFG_EBTRB$OFF 000000  
                           _flags 00DD                             _fputc 3768  
                           _fputs 3E0C                   __end_of_isdigit 3FAA  
              __CFG_MCLRE$EXTMCLR 000000                             atoi@n 0015  
                           pad@fp 0011                             atoi@s 0008  
                           _width 00D9                             _putch 40F6  
                 __end_of_isspace 3DC6                   __end_of_isupper 3F3A  
                           tablat 000FF5               __size_of_LCDPutChar 002C  
                           status 000FD8                   __end_of_sprintf 3D74  
                  ?___fpclassifyf 0001                   __end_of_tolower 3CC4  
                  __CFG_HFOFST$ON 000000                   __end_of_strncmp 3768  
                 ?_LCD_Initialize 0001                   __initialization 405E  
                    __end_of_atoi 3240                      __end_of_main 338A  
                          ??_atoi 000A                            ??_main 00C9  
                   __activetblptr 000002                         ??_LCDGoto 0006  
               __end_of_LCDPutCmd 3F02                      LCDPutChar@ch 0004  
               __end_of_LCDPutStr 3B92     __size_of_ADC_IsConversionDone 0014  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0                            ?_fputc 0001  
                          ?_fputs 000A                            _ADRESH 000FC4  
                          _ADRESL 000FC3                  ___awdiv@dividend 0001  
                          _ANSELA 000F38                            ?_putch 0001  
                          _ANSELB 000F39                            _ANSELC 000F3A  
                          _ANSELD 000F3B                            _ANSELE 000F3C  
                  __CFG_WDTEN$OFF 000000                            _OSCCON 000FD3  
                    LCDPutStr@str 0005                  __end_of___xxtofl 30B0  
                  _LCDWriteNibble 400C                            _Buffer 00E1  
                  __CFG_XINST$OFF 000000                      vfprintf@cfmt 00B5  
                          ___flge 3490                            ___fleq 3A6C  
                       ??___fladd 0009                            ___wmul 4038  
                       ??___fldiv 0030                         ??___awdiv 0005  
                       ??___flneg 0005                    __CFG_STVREN$ON 000000  
                       ??___awmod 0005                         ??___flmul 0017  
                       ??___flsub 0030                         ??___fltol 0005  
                          _efgtoa 1048                            _floorf 2CEA  
                          clear_0 4064                            clear_1 4070  
                ___awdiv@quotient 0007                   ___awmod@divisor 0003  
                 ___awmod@counter 0005                            pad@buf 0013  
                          _strcpy 3CC4                            _strlen 3FAA  
                          fputc@c 0001                            fputs@c 000E  
                          fputs@i 000F                            fputs@s 000A  
                       ??_isdigit 0003                   ___fpclassifyf@e 0009  
                 ___fpclassifyf@u 000B                   ___fpclassifyf@x 0001  
                    __mediumconst 0000                         ??_isspace 0003  
                          tblptrh 000FF7                         ??_isupper 0003  
                          tblptrl 000FF6                            tblptru 000FF8  
                          putch@c 0001                  __end_of_vfprintf 3C64  
                       ??_sprintf 0060                         ??_tolower 0009  
                       ??_strncmp 0007                        ___flge@ff1 0028  
                      ___flge@ff2 002C                   ??___fpclassifyf 0005  
                    ___xxtofl@arg 000B                      ___xxtofl@exp 000A  
               _SYSTEM_Initialize 40D6                      ___xxtofl@val 0001  
                      ___fleq@ff1 0001                        ___fleq@ff2 0005  
          __end_of_LCDWriteNibble 4038                        __accesstop 0060  
         __end_of__initialization 4076                   __CFG_PBADEN$OFF 000000  
                      ___flneg@f1 0001                ?_SYSTEM_Initialize 0001  
                   ___rparam_used 000001                        ___fltol@f1 0001  
                       LCDGoto@ln 0005      __size_of_ADC_StartConversion 0004  
                  __pcstackCOMRAM 0001               ??_SYSTEM_Initialize 0001  
                   __end_of_fputc 3832                      ??_LCDPutChar 0003  
                   __end_of_fputs 3E50                     __end_of_putch 40F8  
         _ADC_GetConversionResult 40C2                           ??_fputc 0005  
       __end_of_SYSTEM_Initialize 40E4                           ??_fputs 000E  
                         ??_putch 0001                        __pbssBANK0 00CB  
                      __pbssBANK1 0100                   __CFG_PLLCFG$OFF 000000  
                 ?_LCDWriteNibble 0001                __end_of_LCDPutChar 400C  
                      _efgtoa$553 0069                        _efgtoa$554 006B  
                      _efgtoa$563 006F                        _efgtoa$564 0071  
                      _efgtoa$565 0073                        _efgtoa$559 006D  
              __CFG_CCP2MX$PORTC1 000000                   _converted_Value 00DF  
                         ?___flge 0028                           ?___fleq 0001  
                         ?___wmul 0001                __CFG_CCP3MX$PORTB5 000000  
                         ?_efgtoa 0055                           ?_floorf 0041  
         __size_of_ADC_Initialize 0016                           ?_strcpy 0001  
                         ?_strlen 0001                           _LCDGoto 3B92  
                       ?___xxtofl 0001                           _OSCCON2 000FD2  
              __size_of_vfpfcnvrt 046E                           _OSCTUNE 000F9B  
                ??_LCD_Initialize 0005                   __CFG_PWRTEN$OFF 000000  
                         __Hparam 0000                           __Lparam 0000  
                 __size_of___flge 0104                   __size_of___fleq 00AA  
                         ___fladd 1BF8                           ___fldiv 2950  
                         ___awdiv 38F8                           ___flneg 3F3A  
                         ___awmod 39BC                           ___flmul 2526  
                         _Voltage 00D3                           ___flsub 3DC6  
                         ___fltol 338A                   __size_of___wmul 0026  
                       ?_vfprintf 00AF                      __psmallconst 1000  
                 __size_of_efgtoa 0BB0         ??_ADC_GetConversionResult 0003  
                 __size_of_floorf 0212                           __pcinit 405E  
                         __ramtop 1000                           __ptext0 3240  
                         __ptext1 3D22                           __ptext2 3C02  
                         __ptext3 20B8                           __ptext4 3692  
                         __ptext5 1048                           __ptext6 3C64  
                         __ptext7 3F02                           __ptext8 3CC4  
                         __ptext9 3832                   __size_of_strcpy 005E  
                 __size_of_strlen 0036             _OSCILLATOR_Initialize 40E4  
                    __size_of_pad 00C6                           _isdigit 3F72  
                      ??___xxtofl 0005                  ___awmod@dividend 0001  
        ??_PIN_MANAGER_Initialize 0001                           _isspace 3D74  
                         _isupper 3F02                           efgtoa@c 005B  
                         efgtoa@d 007D                           efgtoa@e 0095  
                         efgtoa@f 0057                           efgtoa@g 0091  
                         efgtoa@h 0087                           efgtoa@i 008F  
                         efgtoa@l 008B                           efgtoa@m 0079  
                         efgtoa@n 0097                           efgtoa@p 0081  
                         efgtoa@t 0075                           efgtoa@u 0099  
                         efgtoa@w 0084                           atoi@neg 000E  
                       _LCDPutCmd 3EC8        __size_of_SYSTEM_Initialize 000E  
                         _sprintf 3D22                           _tolower 3C64  
                       _LCDPutStr 3B16                           _strncmp 3692  
            end_of_initialization 4076                           floorf@e 004F  
                         floorf@m 004B                           floorf@u 0051  
                         floorf@x 0041                           fputc@fp 0003  
                   __Lmediumconst 0000                           fputs@fp 000C  
    __end_of_ADC_IsConversionDone 40C2                 __end_of_vfpfcnvrt 2526  
                      efgtoa@mode 0086                        efgtoa@sign 007F  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
                      ??_vfprintf 0060                           strcpy@d 0009  
                         strlen@a 0003                           strcpy@s 0007  
                         strlen@s 0001                         _PORTBbits 000F81  
                     ___fladd@grs 0010                     ___xxtofl@sign 0009  
             _ADC_StartConversion 40F2                       ___fldiv@grs 003B  
                     ___fldiv@rem 0034                        ?_LCDPutCmd 0001  
                      ?_LCDPutStr 0005                       ___flmul@grs 001C  
                      LCDGoto@pos 000A              ?_ADC_StartConversion 0001  
                  __end_of___flge 3594                    __end_of___fleq 3B16  
                     vfpfcnvrt@ap 00A1                       vfpfcnvrt@ct 00AB  
                     vfpfcnvrt@fp 009D                        LCDPutStr@i 0009  
                  __end_of___wmul 405E                    __end_of_efgtoa 1BF8  
                  _ADC_Initialize 4098                    __end_of_floorf 2EFC  
          ?_OSCILLATOR_Initialize 0001                        floorf@F524 00CB  
                  __end_of_strcpy 3D22                    __end_of_strlen 3FE0  
             start_initialization 405E   __size_of_PIN_MANAGER_Initialize 003E  
                ??_LCDWriteNibble 0002                       __end_of_pad 38F8  
           __end_of___fpclassifyf 3692             ??_ADC_StartConversion 0001  
                     vfprintf@fmt 00B1                          ??___flge 0030  
                        ??___fleq 0009                          ??___wmul 0005  
                        ??_efgtoa 0060            __end_of_ADC_Initialize 40AE  
                        ??_floorf 0045                          ??_strcpy 0005  
                        ??_strlen 0003                         ___fladd@a 0005  
                       ___fladd@b 0001                          ?_LCDGoto 0005  
                       ___fldiv@a 002C                         ___fldiv@b 0028  
                       ___flmul@a 0013                         ___flmul@b 000F  
                       ___flsub@a 002C                         ___flsub@b 0028  
                   __pcstackBANK0 0060              _ADC_IsConversionDone 40AE  
               __size_of___xxtofl 01B4                       ??_LCDPutCmd 0003  
                     ??_LCDPutStr 0007                         _atoi$1054 0010  
                       _atoi$1055 0014                         _atoi$1056 0012  
          _PIN_MANAGER_Initialize 3E50                 _ADC_SelectChannel 4080  
                        ?___fladd 0001                          ?___fldiv 0028  
                        ?___awdiv 0001                          ?___flneg 0001  
                        ?___awmod 0001                          ?___flmul 000F  
                        ?___flsub 0028                          ?___fltol 0001  
                 ?_ADC_Initialize 0001                ?_ADC_SelectChannel 0001  
                LCDWriteNibble@ch 0002                  LCDWriteNibble@rs 0001  
                __CFG_PRICLKEN$ON 000000                 __size_of_vfprintf 0062  
                     __smallconst 1000                          ?_isdigit 0001  
             ??_ADC_SelectChannel 0001             ?_ADC_IsConversionDone 0001  
                        ?_isspace 0001                          ?_isupper 0001  
                        ?_sprintf 00B7                          ?_tolower 0007  
                  __size_of_fputc 00CA                    __size_of_fputs 0044  
                        ?_strncmp 0001                    __size_of_putch 0002  
                  ___wmul@product 0005                       _LCDGoto$181 0008  
       __end_of_ADC_SelectChannel 4098                  __CFG_WDTPS$32768 000000  
                       _vfpfcnvrt 20B8                        _ADCON0bits 000FC2  
               ___wmul@multiplier 0001          ADC_SelectChannel@channel 0002  
                __size_of_LCDGoto 0070                      _isspace$1085 0007  
                      vfpfcnvrt@c 00AE                        vfpfcnvrt@f 00A7  
                     _INTCON2bits 000FF1                          __Hrparam 0000  
                      vfprintf@ap 00B3                          __Lrparam 0000  
                      vfprintf@fp 00AF          ?_ADC_GetConversionResult 0001  
              __CFG_BOREN$SBORDIS 000000                 __CFG_P2BMX$PORTD2 000000  
         ??_OSCILLATOR_Initialize 0001           __size_of_LCD_Initialize 003A  
                __size_of___fladd 04C0                  __size_of___fldiv 039A  
                __size_of___awdiv 00C4                  __size_of___flneg 0038  
                __size_of___awmod 00B0                  __size_of___flmul 042A  
                __size_of___flsub 0046                  __size_of___fltol 0106  
                      ?_vfpfcnvrt 009D                ___fpclassifyf@F463 00CF  
          ??_ADC_IsConversionDone 0001                        sprintf@fmt 00B9  
                        ___xxtofl 2EFC                  __size_of_isdigit 0038  
                __size_of_isspace 0052                          __ptext10 3FAA  
                        __ptext11 3E0C                          __ptext20 2526  
                        __ptext12 3768                          __ptext21 3490  
                        __ptext13 40F6                          __ptext30 2EFC  
                        __ptext22 3A6C                          __ptext14 2CEA  
                        __ptext31 40D6                          __ptext23 2950  
                        __ptext15 3594                          __ptext40 400C  
                        __ptext32 3E50                          __ptext24 39BC  
                        __ptext16 338A                          __ptext41 40F2  
                        __ptext33 40E4                          __ptext25 38F8  
                        __ptext17 3DC6                          __ptext42 4080  
                        __ptext34 4098                          __ptext26 30B0  
                        __ptext18 1BF8                          __ptext43 40AE  
                        __ptext35 3E8E                          __ptext27 3D74  
                        __ptext19 3F3A                          __ptext44 40C2  
                        __ptext36 3B16                          __ptext28 3F72  
                        __ptext37 3FE0                          __ptext29 4038  
                        __ptext38 3B92                          __ptext39 3EC8  
                __size_of_isupper 0038                  __size_of_sprintf 0052  
                __size_of_tolower 0060                        strcpy@dest 0001  
                __size_of_strncmp 00D6                     __size_of_atoi 0190  
                   __size_of_main 014A        __size_of_ADC_SelectChannel 0018  
                        efgtoa@fp 0055                          efgtoa@ne 007B  
                        efgtoa@pp 0077                          efgtoa@ou 0065  
                        _vfprintf 3C02                        _LCDPutChar 3FE0  
                      _INTCONbits 000FF2                          isdigit@c 0001  
                       sprintf@ap 00C1       __end_of_ADC_StartConversion 40F6  
                        isspace@c 0001           ?_PIN_MANAGER_Initialize 0001  
 __end_of_ADC_GetConversionResult 40D6                         strcpy@src 0003  
                        isupper@c 0001                         strncmp@_l 0001  
                       strncmp@_r 0003                  ??_ADC_Initialize 0001  
                     efgtoa@nmode 0083                       ??_vfpfcnvrt 005C  
                   _vfpfcnvrt$583 00A5                     _vfpfcnvrt$579 00A3  
                        sprintf@f 00C3                          tolower@c 0007  
                        sprintf@s 00B7            __size_of___fpclassifyf 00FE  
                        strncmp@l 0008                          strncmp@n 0005  
                        strncmp@r 000A                 __CFG_T3CMX$PORTC0 000000  
                   ___fladd@signs 000D    __end_of_PIN_MANAGER_Initialize 3E8E  
                    ___fladd@aexp 000E                      ___fladd@bexp 000F  
               __CFG_FOSC$INTIO67 000000           __size_of_LCDWriteNibble 002C  
