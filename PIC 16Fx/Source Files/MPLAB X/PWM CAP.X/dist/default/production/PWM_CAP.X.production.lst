

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon Aug 26 13:22:34 2019

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F690
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	dabs	1,0x7E,2
     8  0000                     
     9                           ; Version 1.41
    10                           ; Generated 25/01/2017 GMT
    11                           ; 
    12                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    13                           ; All rights reserved.
    14                           ; 
    15                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    16                           ; 
    17                           ; Redistribution and use in source and binary forms, with or without modification, are
    18                           ; permitted provided that the following conditions are met:
    19                           ; 
    20                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    21                           ;        conditions and the following disclaimer.
    22                           ; 
    23                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    24                           ;        of conditions and the following disclaimer in the documentation and/or other
    25                           ;        materials provided with the distribution.
    26                           ; 
    27                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    28                           ;        software without specific prior written permission.
    29                           ; 
    30                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    31                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    32                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    33                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    34                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    35                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    36                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    37                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    38                           ; 
    39                           ; 
    40                           ; Code-generator required, PIC16F690 Definitions
    41                           ; 
    42                           ; SFR Addresses
    43  0000                     	;# 
    44  0001                     	;# 
    45  0002                     	;# 
    46  0003                     	;# 
    47  0004                     	;# 
    48  0005                     	;# 
    49  0006                     	;# 
    50  0007                     	;# 
    51  000A                     	;# 
    52  000B                     	;# 
    53  000C                     	;# 
    54  000D                     	;# 
    55  000E                     	;# 
    56  000E                     	;# 
    57  000F                     	;# 
    58  0010                     	;# 
    59  0011                     	;# 
    60  0012                     	;# 
    61  0013                     	;# 
    62  0014                     	;# 
    63  0015                     	;# 
    64  0015                     	;# 
    65  0016                     	;# 
    66  0017                     	;# 
    67  0018                     	;# 
    68  0019                     	;# 
    69  001A                     	;# 
    70  001C                     	;# 
    71  001D                     	;# 
    72  001E                     	;# 
    73  001F                     	;# 
    74  0081                     	;# 
    75  0085                     	;# 
    76  0086                     	;# 
    77  0087                     	;# 
    78  008C                     	;# 
    79  008D                     	;# 
    80  008E                     	;# 
    81  008F                     	;# 
    82  0090                     	;# 
    83  0092                     	;# 
    84  0093                     	;# 
    85  0093                     	;# 
    86  0093                     	;# 
    87  0094                     	;# 
    88  0095                     	;# 
    89  0095                     	;# 
    90  0096                     	;# 
    91  0096                     	;# 
    92  0097                     	;# 
    93  0098                     	;# 
    94  0099                     	;# 
    95  009A                     	;# 
    96  009B                     	;# 
    97  009E                     	;# 
    98  009F                     	;# 
    99  010C                     	;# 
   100  010C                     	;# 
   101  010D                     	;# 
   102  010E                     	;# 
   103  010F                     	;# 
   104  0115                     	;# 
   105  0116                     	;# 
   106  0118                     	;# 
   107  0119                     	;# 
   108  011A                     	;# 
   109  011B                     	;# 
   110  011E                     	;# 
   111  011F                     	;# 
   112  018C                     	;# 
   113  018D                     	;# 
   114  019D                     	;# 
   115  019E                     	;# 
   116  0006                     _PORTBbits	set	6
   117  001E                     _ADRESH	set	30
   118  001F                     _ADCON0bits	set	31
   119  009E                     _ADRESL	set	158
   120  009F                     _ADCON1bits	set	159
   121  0086                     _TRISBbits	set	134
   122  0085                     _TRISAbits	set	133
   123  0087                     _TRISC	set	135
   124  0086                     _TRISB	set	134
   125  0085                     _TRISA	set	133
   126  011E                     _ANSELbits	set	286
   127  011F                     _ANSELH	set	287
   128  011E                     _ANSEL	set	286
   129                           
   130                           ; #config settings
   131  0000                     
   132                           	psect	cinit
   133  07FD                     start_initialization:	
   134  07FD                     __initialization:	
   135  07FD                     end_of_initialization:	
   136                           ;End of C runtime variable initialization code
   137                           
   138  07FD                     __end_of__initialization:	
   139  07FD  0183               	clrf	3
   140  07FE  118A  2FAA         	ljmp	_main	;jump to C main() function
   141                           
   142                           	psect	cstackCOMMON
   143  0070                     __pcstackCOMMON:	
   144  0070                     ??_main:	
   145  0070                     ?_main:	
   146                           ; 1 bytes @ 0x0
   147                           
   148                           
   149                           ; 2 bytes @ 0x0
   150  0070                     	ds	2
   151  0072                     main@result:	
   152                           
   153                           ; 2 bytes @ 0x2
   154  0072                     	ds	2
   155                           
   156                           	psect	maintext
   157  07AA                     __pmaintext:	
   158 ;;
   159 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   160 ;;
   161 ;; *************** function _main *****************
   162 ;; Defined at:
   163 ;;		line 8 in file "Mmain.c"
   164 ;; Parameters:    Size  Location     Type
   165 ;;		None
   166 ;; Auto vars:     Size  Location     Type
   167 ;;  result          2    2[COMMON] int 
   168 ;; Return value:  Size  Location     Type
   169 ;;                  2   30[None  ] int 
   170 ;; Registers used:
   171 ;;		wreg, status,2, status,0, btemp+1
   172 ;; Tracked objects:
   173 ;;		On entry : B00/0
   174 ;;		On exit  : 0/0
   175 ;;		Unchanged: 0/0
   176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   177 ;;      Params:         0       0       0       0
   178 ;;      Locals:         2       0       0       0
   179 ;;      Temps:          2       0       0       0
   180 ;;      Totals:         4       0       0       0
   181 ;;Total ram usage:        4 bytes
   182 ;; This function calls:
   183 ;;		Nothing
   184 ;; This function is called by:
   185 ;;		Startup code after reset
   186 ;; This function uses a non-reentrant model
   187 ;;
   188                           
   189                           
   190                           ;psect for function _main
   191  07AA                     _main:	
   192                           
   193                           ;Mmain.c: 10: int result;
   194                           ;Mmain.c: 12: TRISA = 0xFF;
   195                           
   196                           ;incstack = 0
   197                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1]
   198  07AA  30FF               	movlw	255
   199  07AB  1683               	bsf	3,5	;RP0=1, select bank1
   200  07AC  1303               	bcf	3,6	;RP1=0, select bank1
   201  07AD  0085               	movwf	5	;volatile
   202                           
   203                           ;Mmain.c: 13: TRISB = 0xFF;
   204  07AE  30FF               	movlw	255
   205  07AF  0086               	movwf	6	;volatile
   206                           
   207                           ;Mmain.c: 14: TRISC = 0xFF;
   208  07B0  30FF               	movlw	255
   209  07B1  0087               	movwf	7	;volatile
   210                           
   211                           ;Mmain.c: 16: ANSEL = 0x00;
   212  07B2  1283               	bcf	3,5	;RP0=0, select bank2
   213  07B3  1703               	bsf	3,6	;RP1=1, select bank2
   214  07B4  019E               	clrf	30	;volatile
   215                           
   216                           ;Mmain.c: 17: ANSELH = 0x00;
   217  07B5  019F               	clrf	31	;volatile
   218                           
   219                           ;Mmain.c: 19: TRISAbits.TRISA2 = 1;
   220  07B6  1683               	bsf	3,5	;RP0=1, select bank1
   221  07B7  1303               	bcf	3,6	;RP1=0, select bank1
   222  07B8  1505               	bsf	5,2	;volatile
   223                           
   224                           ;Mmain.c: 20: ANSELbits.ANS2 = 1;
   225  07B9  1283               	bcf	3,5	;RP0=0, select bank2
   226  07BA  1703               	bsf	3,6	;RP1=1, select bank2
   227  07BB  151E               	bsf	30,2	;volatile
   228                           
   229                           ;Mmain.c: 21: TRISBbits.TRISB4 = 0;
   230  07BC  1683               	bsf	3,5	;RP0=1, select bank1
   231  07BD  1303               	bcf	3,6	;RP1=0, select bank1
   232  07BE  1206               	bcf	6,4	;volatile
   233                           
   234                           ;Mmain.c: 27: ADCON0bits.ADFM = 1;
   235  07BF  1283               	bcf	3,5	;RP0=0, select bank0
   236  07C0  1303               	bcf	3,6	;RP1=0, select bank0
   237  07C1  179F               	bsf	31,7	;volatile
   238                           
   239                           ;Mmain.c: 28: ADCON0bits.VCFG = 0;
   240  07C2  131F               	bcf	31,6	;volatile
   241                           
   242                           ;Mmain.c: 29: ADCON1bits.ADCS = 0b001;
   243  07C3  1683               	bsf	3,5	;RP0=1, select bank1
   244  07C4  1303               	bcf	3,6	;RP1=0, select bank1
   245  07C5  081F               	movf	31,w	;volatile
   246  07C6  398F               	andlw	-113
   247  07C7  3810               	iorlw	16
   248  07C8  009F               	movwf	31	;volatile
   249                           
   250                           ;Mmain.c: 34: ADCON0bits.CHS = 2;
   251  07C9  1283               	bcf	3,5	;RP0=0, select bank0
   252  07CA  1303               	bcf	3,6	;RP1=0, select bank0
   253  07CB  081F               	movf	31,w	;volatile
   254  07CC  39C3               	andlw	-61
   255  07CD  3808               	iorlw	8
   256  07CE  009F               	movwf	31	;volatile
   257                           
   258                           ;Mmain.c: 35: ADCON0bits.ADON = 1;
   259  07CF  141F               	bsf	31,0	;volatile
   260  07D0                     l520:	
   261                           ;Mmain.c: 41: while(1)
   262                           
   263                           
   264                           ;Mmain.c: 42: {
   265                           ;Mmain.c: 46: ADCON0bits.GO = 1;
   266  07D0  149F               	bsf	31,1	;volatile
   267  07D1                     l32:	
   268                           ;Mmain.c: 47: while(ADCON0bits.GO==1){};
   269                           
   270  07D1  189F               	btfsc	31,1	;volatile
   271  07D2  2FD1               	goto	l32
   272                           
   273                           ;Mmain.c: 49: result = (ADRESH<<8)+ADRESL;
   274  07D3  081E               	movf	30,w	;volatile
   275  07D4  00F3               	movwf	main@result+1
   276  07D5  1683               	bsf	3,5	;RP0=1, select bank1
   277  07D6  1303               	bcf	3,6	;RP1=0, select bank1
   278  07D7  081E               	movf	30,w	;volatile
   279  07D8  00F2               	movwf	main@result
   280                           
   281                           ;Mmain.c: 53: if(result > 512)
   282  07D9  0873               	movf	main@result+1,w
   283  07DA  3A80               	xorlw	128
   284  07DB  00FF               	movwf	127
   285  07DC  3082               	movlw	130
   286  07DD  027F               	subwf	127,w
   287  07DE  1D03               	skipz
   288  07DF  2FE2               	goto	u25
   289  07E0  3001               	movlw	1
   290  07E1  0272               	subwf	main@result,w
   291  07E2                     u25:	
   292  07E2  1C03               	skipc
   293  07E3  2FED               	goto	l528
   294                           
   295                           ;Mmain.c: 55: _delay((unsigned long)((100)*(4000000/4000.0)));
   296  07E4  3082               	movlw	130
   297  07E5  00F1               	movwf	??_main+1
   298  07E6  30DD               	movlw	221
   299  07E7  00F0               	movwf	??_main
   300  07E8                     u37:	
   301  07E8  0BF0               	decfsz	??_main,f
   302  07E9  2FE8               	goto	u37
   303  07EA  0BF1               	decfsz	??_main+1,f
   304  07EB  2FE8               	goto	u37
   305  07EC  2FED               	nop2
   306  07ED                     l528:	
   307                           
   308                           ;Mmain.c: 56: PORTBbits.RB4 = 1;
   309  07ED  1283               	bcf	3,5	;RP0=0, select bank0
   310  07EE  1303               	bcf	3,6	;RP1=0, select bank0
   311  07EF  1606               	bsf	6,4	;volatile
   312                           
   313                           ;Mmain.c: 58: _delay((unsigned long)((100)*(4000000/4000.0)));
   314  07F0  3082               	movlw	130
   315  07F1  00F1               	movwf	??_main+1
   316  07F2  30DD               	movlw	221
   317  07F3  00F0               	movwf	??_main
   318  07F4                     u47:	
   319  07F4  0BF0               	decfsz	??_main,f
   320  07F5  2FF4               	goto	u47
   321  07F6  0BF1               	decfsz	??_main+1,f
   322  07F7  2FF4               	goto	u47
   323  07F8  2FF9               	nop2
   324                           
   325                           ;Mmain.c: 59: PORTBbits.RB4 = 0;
   326  07F9  1283               	bcf	3,5	;RP0=0, select bank0
   327  07FA  1303               	bcf	3,6	;RP1=0, select bank0
   328  07FB  1206               	bcf	6,4	;volatile
   329  07FC  2FD0               	goto	l520
   330  07FD                     __end_of_main:	
   331                           ;Mmain.c: 65: }
   332                           ;Mmain.c: 67: return 0;
   333                           ;	Return value of _main is never used
   334                           
   335  007E                     btemp	set	126	;btemp
   336  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      15
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon Aug 26 13:22:34 2019

            __CFG_CP$OFF 0000                       l32 07D1                       u25 07E2  
                     u37 07E8                       u47 07F4                      l520 07D0  
                    l528 07ED             __CFG_CPD$OFF 0000                     _main 07AA  
                   btemp 007E                     start 0000            __CFG_IESO$OFF 0000  
          __CFG_MCLRE$ON 0000                    ?_main 0070            __CFG_WDTE$OFF 0000  
                  _ANSEL 011E                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087           __CFG_FCMEN$OFF 0000           __CFG_BOREN$OFF 0000  
                  status 0003                    wtemp0 007E          __initialization 07FD  
           __end_of_main 07FD                   ??_main 0070                   _ADRESH 001E  
                 _ADRESL 009E                   _ANSELH 011F           __CFG_PWRTE$OFF 0000  
__end_of__initialization 07FD           __pcstackCOMMON 0070               __pmaintext 07AA  
              _ANSELbits 011E     end_of_initialization 07FD                _PORTBbits 0006  
              _TRISAbits 0085                _TRISBbits 0086               main@result 0072  
    start_initialization 07FD                ___latbits 0001               _ADCON0bits 001F  
             _ADCON1bits 009F            __size_of_main 0053        __CFG_FOSC$INTRCIO 0000  
