

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Aug 08 13:06:47 2019

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	intentry,global,class=CODE,delta=2
     9                           	dabs	1,0x7E,2
    10  0000                     
    11                           ; Version 1.41
    12                           ; Generated 25/01/2017 GMT
    13                           ; 
    14                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F877A Definitions
    43                           ; 
    44                           ; SFR Addresses
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  0006                     	;# 
    52  0007                     	;# 
    53  0008                     	;# 
    54  0009                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000D                     	;# 
    59  000E                     	;# 
    60  000E                     	;# 
    61  000F                     	;# 
    62  0010                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0014                     	;# 
    67  0015                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001B                     	;# 
    75  001B                     	;# 
    76  001C                     	;# 
    77  001D                     	;# 
    78  001E                     	;# 
    79  001F                     	;# 
    80  0081                     	;# 
    81  0085                     	;# 
    82  0086                     	;# 
    83  0087                     	;# 
    84  0088                     	;# 
    85  0089                     	;# 
    86  008C                     	;# 
    87  008D                     	;# 
    88  008E                     	;# 
    89  0091                     	;# 
    90  0092                     	;# 
    91  0093                     	;# 
    92  0094                     	;# 
    93  0098                     	;# 
    94  0099                     	;# 
    95  009C                     	;# 
    96  009D                     	;# 
    97  009E                     	;# 
    98  009F                     	;# 
    99  010C                     	;# 
   100  010D                     	;# 
   101  010E                     	;# 
   102  010F                     	;# 
   103  018C                     	;# 
   104  018D                     	;# 
   105  0006                     _PORTBbits	set	6
   106  000B                     _INTCONbits	set	11
   107  0086                     _TRISBbits	set	134
   108                           
   109                           	psect	cinit
   110  0015                     start_initialization:	
   111                           ; #config settings
   112                           
   113  0015                     __initialization:	
   114  0015                     end_of_initialization:	
   115                           ;End of C runtime variable initialization code
   116                           
   117  0015                     __end_of__initialization:	
   118  0015  0183               	clrf	3
   119  0016  120A  118A  282C   	ljmp	_main	;jump to C main() function
   120                           
   121                           	psect	cstackCOMMON
   122  0070                     __pcstackCOMMON:	
   123  0070                     ?_ISR:	
   124  0070                     ??_ISR:	
   125                           ; 1 bytes @ 0x0
   126                           
   127  0070                     ?_main:	
   128                           ; 1 bytes @ 0x0
   129                           
   130                           
   131                           ; 1 bytes @ 0x0
   132  0070                     	ds	4
   133  0074                     ??_main:	
   134                           
   135                           	psect	maintext
   136  002C                     __pmaintext:	
   137                           ; 1 bytes @ 0x4
   138 ;;
   139 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   140 ;;
   141 ;; *************** function _main *****************
   142 ;; Defined at:
   143 ;;		line 28 in file "newmain 877A.c"
   144 ;; Parameters:    Size  Location     Type
   145 ;;		None
   146 ;; Auto vars:     Size  Location     Type
   147 ;;		None
   148 ;; Return value:  Size  Location     Type
   149 ;;                  1    wreg      void 
   150 ;; Registers used:
   151 ;;		None
   152 ;; Tracked objects:
   153 ;;		On entry : B00/0
   154 ;;		On exit  : 0/0
   155 ;;		Unchanged: 0/0
   156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   157 ;;      Params:         0       0       0       0       0
   158 ;;      Locals:         0       0       0       0       0
   159 ;;      Temps:          0       0       0       0       0
   160 ;;      Totals:         0       0       0       0       0
   161 ;;Total ram usage:        0 bytes
   162 ;; Hardware stack levels required when called:    1
   163 ;; This function calls:
   164 ;;		Nothing
   165 ;; This function is called by:
   166 ;;		Startup code after reset
   167 ;; This function uses a non-reentrant model
   168 ;;
   169                           
   170                           
   171                           ;psect for function _main
   172  002C                     _main:	
   173                           
   174                           ;newmain 877A.c: 30: TRISBbits.TRISB0 = 1;
   175                           
   176                           ;incstack = 0
   177                           ; Regs used in _main: []
   178  002C  1683               	bsf	3,5	;RP0=1, select bank1
   179  002D  1303               	bcf	3,6	;RP1=0, select bank1
   180  002E  1406               	bsf	6,0	;volatile
   181                           
   182                           ;newmain 877A.c: 32: TRISBbits.TRISB1 = 0;
   183  002F  1086               	bcf	6,1	;volatile
   184                           
   185                           ;newmain 877A.c: 34: PORTBbits.RB1 = 1;
   186  0030  1283               	bcf	3,5	;RP0=0, select bank0
   187  0031  1303               	bcf	3,6	;RP1=0, select bank0
   188  0032  1486               	bsf	6,1	;volatile
   189                           
   190                           ;newmain 877A.c: 36: INTCONbits.GIE = 1;
   191  0033  178B               	bsf	11,7	;volatile
   192                           
   193                           ;newmain 877A.c: 38: INTCONbits.PEIE =1;
   194  0034  170B               	bsf	11,6	;volatile
   195                           
   196                           ;newmain 877A.c: 40: INTCONbits.INTE = 1;
   197  0035  160B               	bsf	11,4	;volatile
   198  0036                     l15:	
   199                           ;newmain 877A.c: 42: while(1);
   200                           
   201  0036  2836               	goto	l15
   202  0037                     __end_of_main:	
   203                           ;newmain 877A.c: 43: return;
   204                           
   205                           
   206                           	psect	text1
   207  0019                     __ptext1:	
   208 ;; *************** function _ISR *****************
   209 ;; Defined at:
   210 ;;		line 10 in file "newmain 877A.c"
   211 ;; Parameters:    Size  Location     Type
   212 ;;		None
   213 ;; Auto vars:     Size  Location     Type
   214 ;;		None
   215 ;; Return value:  Size  Location     Type
   216 ;;                  1    wreg      void 
   217 ;; Registers used:
   218 ;;		None
   219 ;; Tracked objects:
   220 ;;		On entry : 0/0
   221 ;;		On exit  : 0/0
   222 ;;		Unchanged: 0/0
   223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   224 ;;      Params:         0       0       0       0       0
   225 ;;      Locals:         0       0       0       0       0
   226 ;;      Temps:          4       0       0       0       0
   227 ;;      Totals:         4       0       0       0       0
   228 ;;Total ram usage:        4 bytes
   229 ;; Hardware stack levels used:    1
   230 ;; This function calls:
   231 ;;		Nothing
   232 ;; This function is called by:
   233 ;;		Interrupt level 1
   234 ;; This function uses a non-reentrant model
   235 ;;
   236                           
   237                           
   238                           ;psect for function _ISR
   239  0019                     _ISR:	
   240                           
   241                           ;newmain 877A.c: 13: if(INTCONbits.INTF == 1) {
   242  0019  1C8B               	btfss	11,1	;volatile
   243  001A  2821               	goto	i1l12
   244                           
   245                           ;newmain 877A.c: 15: INTCONbits.INTF = 0;
   246  001B  108B               	bcf	11,1	;volatile
   247                           
   248                           ;newmain 877A.c: 17: if(PORTBbits.RB1 == 1) {
   249  001C  1C86               	btfss	6,1	;volatile
   250  001D  2820               	goto	i1l10
   251                           
   252                           ;newmain 877A.c: 19: PORTBbits.RB1 = 0;
   253  001E  1086               	bcf	6,1	;volatile
   254                           
   255                           ;newmain 877A.c: 20: }
   256  001F  2821               	goto	i1l12
   257  0020                     i1l10:	
   258                           
   259                           ;newmain 877A.c: 22: else {
   260                           ;newmain 877A.c: 24: PORTBbits.RB1 = 1;
   261  0020  1486               	bsf	6,1	;volatile
   262  0021                     i1l12:	
   263  0021  0873               	movf	??_ISR+3,w
   264  0022  00FF               	movwf	127
   265  0023  0872               	movf	??_ISR+2,w
   266  0024  008A               	movwf	10
   267  0025  0871               	movf	??_ISR+1,w
   268  0026  0084               	movwf	4
   269  0027  0E70               	swapf	??_ISR^(0+-128),w
   270  0028  0083               	movwf	3
   271  0029  0EFE               	swapf	126,f
   272  002A  0E7E               	swapf	126,w
   273  002B  0009               	retfie
   274  002C                     __end_of_ISR:	
   275  007E                     btemp	set	126	;btemp
   276  007E                     wtemp0	set	126
   277                           
   278                           	psect	intentry
   279  0004                     __pintentry:	
   280                           ;incstack = 0
   281                           ; Regs used in _ISR: []
   282                           
   283  0004                     interrupt_function:	
   284  007E                     saved_w	set	btemp
   285  0004  00FE               	movwf	btemp
   286  0005  0E03               	swapf	3,w
   287  0006  00F0               	movwf	??_ISR
   288  0007  0804               	movf	4,w
   289  0008  00F1               	movwf	??_ISR+1
   290  0009  080A               	movf	10,w
   291  000A  00F2               	movwf	??_ISR+2
   292  000B  1283               	bcf	3,5	;RP0=0, select bank0
   293  000C  1303               	bcf	3,6	;RP1=0, select bank0
   294  000D  087F               	movf	btemp+1,w
   295  000E  00F3               	movwf	??_ISR+3
   296  000F  120A  118A  2819   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Aug 08 13:06:47 2019

                     l15 0036                      _ISR 0019                      fsr0 0004  
                   ?_ISR 0070                     i1l10 0020                     i1l12 0021  
                   _main 002C                     btemp 007E                     start 0012  
                  ??_ISR 0070                    ?_main 0070                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0015  
           __end_of_main 0037                   ??_main 0074                   saved_w 007E  
__end_of__initialization 0015           __pcstackCOMMON 0070               __pmaintext 002C  
             __pintentry 0004                  __ptext1 0019             __size_of_ISR 0013  
   end_of_initialization 0015                _PORTBbits 0006                _TRISBbits 0086  
    start_initialization 0015              __end_of_ISR 002C                ___latbits 0002  
      interrupt_function 0004            __size_of_main 000B               _INTCONbits 000B  
               intlevel1 0000  
