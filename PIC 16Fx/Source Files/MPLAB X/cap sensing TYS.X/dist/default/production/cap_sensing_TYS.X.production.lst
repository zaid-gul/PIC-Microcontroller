

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Sep 19 17:28:05 2019

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F690
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 1.41
    13                           ; Generated 25/01/2017 GMT
    14                           ; 
    15                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F690 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  000A                     	;# 
    55  000B                     	;# 
    56  000C                     	;# 
    57  000D                     	;# 
    58  000E                     	;# 
    59  000E                     	;# 
    60  000F                     	;# 
    61  0010                     	;# 
    62  0011                     	;# 
    63  0012                     	;# 
    64  0013                     	;# 
    65  0014                     	;# 
    66  0015                     	;# 
    67  0015                     	;# 
    68  0016                     	;# 
    69  0017                     	;# 
    70  0018                     	;# 
    71  0019                     	;# 
    72  001A                     	;# 
    73  001C                     	;# 
    74  001D                     	;# 
    75  001E                     	;# 
    76  001F                     	;# 
    77  0081                     	;# 
    78  0085                     	;# 
    79  0086                     	;# 
    80  0087                     	;# 
    81  008C                     	;# 
    82  008D                     	;# 
    83  008E                     	;# 
    84  008F                     	;# 
    85  0090                     	;# 
    86  0092                     	;# 
    87  0093                     	;# 
    88  0093                     	;# 
    89  0093                     	;# 
    90  0094                     	;# 
    91  0095                     	;# 
    92  0095                     	;# 
    93  0096                     	;# 
    94  0096                     	;# 
    95  0097                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009A                     	;# 
    99  009B                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  0115                     	;# 
   108  0116                     	;# 
   109  0118                     	;# 
   110  0119                     	;# 
   111  011A                     	;# 
   112  011B                     	;# 
   113  011E                     	;# 
   114  011F                     	;# 
   115  018C                     	;# 
   116  018D                     	;# 
   117  019D                     	;# 
   118  019E                     	;# 
   119  000E                     _TMR1	set	14
   120  000E                     _TMR1L	set	14
   121  000F                     _TMR1H	set	15
   122  0001                     _TMR0	set	1
   123  0007                     _PORTC	set	7
   124  0006                     _PORTB	set	6
   125  0005                     _PORTA	set	5
   126  0034                     _RB4	set	52
   127  0080                     _TMR1ON	set	128
   128  005F                     _GIE	set	95
   129  005D                     _T0IE	set	93
   130  005A                     _T0IF	set	90
   131  0095                     _WPUA	set	149
   132  0087                     _TRISC	set	135
   133  0086                     _TRISB	set	134
   134  0085                     _TRISA	set	133
   135  0081                     _OPTION_REG	set	129
   136  047A                     _HTS	set	1146
   137  040F                     _nRABPU	set	1039
   138  0115                     _WPUB	set	277
   139  011F                     _ANSELH	set	287
   140  011E                     _ANSEL	set	286
   141  011A                     _CM2CON0	set	282
   142  0119                     _CM1CON0	set	281
   143  0118                     _VRCON	set	280
   144  08D7                     _C2ON	set	2263
   145  08CF                     _C1ON	set	2255
   146  08C7                     _C1VREN	set	2247
   147  019E                     _SRCON	set	414
   148                           
   149                           	psect	cinit
   150  07FA                     start_initialization:	
   151                           ; #config settings
   152                           
   153  07FA                     __initialization:	
   154                           
   155                           ; Clear objects allocated to COMMON
   156  07FA  01F0               	clrf	__pbssCOMMON& (0+127)
   157  07FB  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   158  07FC  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   159  07FD                     end_of_initialization:	
   160                           ;End of C runtime variable initialization code
   161                           
   162  07FD                     __end_of__initialization:	
   163  07FD  0183               	clrf	3
   164  07FE  118A  2FAF         	ljmp	_main	;jump to C main() function
   165                           
   166                           	psect	bssCOMMON
   167  0070                     __pbssCOMMON:	
   168  0070                     _cap_rolling_avg:	
   169  0070                     	ds	2
   170  0072                     _counter:	
   171  0072                     	ds	1
   172                           
   173                           	psect	cstackCOMMON
   174  0073                     __pcstackCOMMON:	
   175  0073                     ?_putch:	
   176  0073                     ??_putch:	
   177                           ; 1 bytes @ 0x0
   178                           
   179  0073                     ?_capsensor_init:	
   180                           ; 1 bytes @ 0x0
   181                           
   182  0073                     ??_capsensor_init:	
   183                           ; 1 bytes @ 0x0
   184                           
   185  0073                     ?_main:	
   186                           ; 1 bytes @ 0x0
   187                           
   188  0073                     ??_main:	
   189                           ; 1 bytes @ 0x0
   190                           
   191  0073                     putch@c:	
   192                           ; 1 bytes @ 0x0
   193                           
   194                           
   195                           ; 1 bytes @ 0x0
   196  0073                     	ds	1
   197                           
   198                           	psect	maintext
   199  07AF                     __pmaintext:	
   200 ;;
   201 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   202 ;;
   203 ;; *************** function _main *****************
   204 ;; Defined at:
   205 ;;		line 39 in file "newmain.c"
   206 ;; Parameters:    Size  Location     Type
   207 ;;		None
   208 ;; Auto vars:     Size  Location     Type
   209 ;;		None
   210 ;; Return value:  Size  Location     Type
   211 ;;                  1    wreg      void 
   212 ;; Registers used:
   213 ;;		wreg, status,2, status,0, pclath, cstack
   214 ;; Tracked objects:
   215 ;;		On entry : B00/0
   216 ;;		On exit  : 0/0
   217 ;;		Unchanged: 0/0
   218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   219 ;;      Params:         0       0       0       0
   220 ;;      Locals:         0       0       0       0
   221 ;;      Temps:          0       0       0       0
   222 ;;      Totals:         0       0       0       0
   223 ;;Total ram usage:        0 bytes
   224 ;; Hardware stack levels required when called:    1
   225 ;; This function calls:
   226 ;;		_capsensor_init
   227 ;;		_putch
   228 ;; This function is called by:
   229 ;;		Startup code after reset
   230 ;; This function uses a non-reentrant model
   231 ;;
   232                           
   233                           
   234                           ;psect for function _main
   235  07AF                     _main:	
   236                           
   237                           ;newmain.c: 41: TRISA = 0b11011100;
   238                           
   239                           ;incstack = 0
   240                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   241  07AF  30DC               	movlw	220
   242  07B0  1683               	bsf	3,5	;RP0=1, select bank1
   243  07B1  1303               	bcf	3,6	;RP1=0, select bank1
   244  07B2  0085               	movwf	5	;volatile
   245                           
   246                           ;newmain.c: 50: TRISB = 0b00101111;
   247  07B3  302F               	movlw	47
   248  07B4  0086               	movwf	6	;volatile
   249                           
   250                           ;newmain.c: 57: TRISC = 0b00001010;
   251  07B5  300A               	movlw	10
   252  07B6  0087               	movwf	7	;volatile
   253                           
   254                           ;newmain.c: 68: ANSEL = 0b00000000;
   255  07B7  1283               	bcf	3,5	;RP0=0, select bank2
   256  07B8  1703               	bsf	3,6	;RP1=1, select bank2
   257  07B9  019E               	clrf	30	;volatile
   258                           
   259                           ;newmain.c: 69: ANSELH = 0b00000000;
   260  07BA  019F               	clrf	31	;volatile
   261                           
   262                           ;newmain.c: 72: WPUA = 0b00000000;
   263  07BB  1683               	bsf	3,5	;RP0=1, select bank1
   264  07BC  1303               	bcf	3,6	;RP1=0, select bank1
   265  07BD  0195               	clrf	21	;volatile
   266                           
   267                           ;newmain.c: 80: WPUB = 0b00100000;
   268  07BE  3020               	movlw	32
   269  07BF  1283               	bcf	3,5	;RP0=0, select bank2
   270  07C0  1703               	bsf	3,6	;RP1=1, select bank2
   271  07C1  0095               	movwf	21	;volatile
   272                           
   273                           ;newmain.c: 87: nRABPU = 0;
   274  07C2  1683               	bsf	3,5	;RP0=1, select bank1
   275  07C3  1303               	bcf	3,6	;RP1=0, select bank1
   276  07C4  1381               	bcf	1,7	;volatile
   277                           
   278                           ;newmain.c: 90: PORTA = 0b00000000;
   279  07C5  1283               	bcf	3,5	;RP0=0, select bank0
   280  07C6  1303               	bcf	3,6	;RP1=0, select bank0
   281  07C7  0185               	clrf	5	;volatile
   282                           
   283                           ;newmain.c: 91: PORTB = 0b00000000;
   284  07C8  0186               	clrf	6	;volatile
   285                           
   286                           ;newmain.c: 92: PORTC = 0b00000000;
   287  07C9  0187               	clrf	7	;volatile
   288  07CA                     l70:	
   289                           ;newmain.c: 96: while (HTS == 0) ;
   290                           
   291  07CA  1683               	bsf	3,5	;RP0=1, select bank1
   292  07CB  1303               	bcf	3,6	;RP1=0, select bank1
   293  07CC  1D0F               	btfss	15,2	;volatile
   294  07CD  2FCA               	goto	l70
   295                           
   296                           ;newmain.c: 98: capsensor_init();
   297  07CE  118A  2795  118A   	fcall	_capsensor_init
   298                           
   299                           ;newmain.c: 100: TMR1 = 128; T0IF = 0; T0IE = 1; GIE = 1; C1VREN = 1; C1ON = 1; C2ON = 1
      +                          ; TMR0 = 0; TMR1ON = 1;;
   300  07D1  3000               	movlw	0
   301  07D2  1283               	bcf	3,5	;RP0=0, select bank0
   302  07D3  1303               	bcf	3,6	;RP1=0, select bank0
   303  07D4  008F               	movwf	15	;volatile
   304  07D5  3080               	movlw	128
   305  07D6  008E               	movwf	14	;volatile
   306  07D7  110B               	bcf	11,2	;volatile
   307  07D8  168B               	bsf	11,5	;volatile
   308  07D9  178B               	bsf	11,7	;volatile
   309  07DA  1283               	bcf	3,5	;RP0=0, select bank2
   310  07DB  1703               	bsf	3,6	;RP1=1, select bank2
   311  07DC  1798               	bsf	24,7	;volatile
   312  07DD  1799               	bsf	25,7	;volatile
   313  07DE  179A               	bsf	26,7	;volatile
   314  07DF  1283               	bcf	3,5	;RP0=0, select bank0
   315  07E0  1303               	bcf	3,6	;RP1=0, select bank0
   316  07E1  0181               	clrf	1	;volatile
   317  07E2                     L1:	
   318  07E2  1410               	bsf	16,0	;volatile
   319                           
   320                           ;newmain.c: 102: {
   321                           ;newmain.c: 103: if(TMR1H >= 0x50)
   322                           
   323                           ;newmain.c: 101: while(1)
   324  07E3  3050               	movlw	80
   325  07E4  020F               	subwf	15,w	;volatile
   326  07E5  1C03               	skipc
   327  07E6  2FE9               	goto	l74
   328                           
   329                           ;newmain.c: 104: RB4=1;
   330  07E7  1606               	bsf	6,4	;volatile
   331  07E8  2FEA               	goto	l585
   332  07E9                     l74:	
   333                           
   334                           ;newmain.c: 105: else
   335                           ;newmain.c: 106: RB4=0;
   336  07E9  1206               	bcf	6,4	;volatile
   337  07EA                     l585:	
   338                           
   339                           ;newmain.c: 108: putch(TMR1H);putch(TMR1L);
   340  07EA  080F               	movf	15,w	;volatile
   341  07EB  118A  2794  118A   	fcall	_putch
   342  07EE  1283               	bcf	3,5	;RP0=0, select bank0
   343  07EF  1303               	bcf	3,6	;RP1=0, select bank0
   344  07F0  080E               	movf	14,w	;volatile
   345  07F1  118A  2794  118A   	fcall	_putch
   346                           
   347                           ;newmain.c: 110: T0IF = 0;
   348  07F4  110B               	bcf	11,2	;volatile
   349                           
   350                           ;newmain.c: 111: TMR1 = 0;
   351  07F5  1283               	bcf	3,5	;RP0=0, select bank0
   352  07F6  1303               	bcf	3,6	;RP1=0, select bank0
   353  07F7  018E               	clrf	14	;volatile
   354  07F8  018F               	clrf	15	;volatile
   355  07F9  2FE2               	goto	L1
   356  07FA                     __end_of_main:	
   357                           ;newmain.c: 112: TMR1ON = 1;
   358                           
   359                           
   360                           	psect	text1
   361  0794                     __ptext1:	
   362 ;; *************** function _putch *****************
   363 ;; Defined at:
   364 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\putch.c"
   365 ;; Parameters:    Size  Location     Type
   366 ;;  c               1    wreg     unsigned char 
   367 ;; Auto vars:     Size  Location     Type
   368 ;;  c               1    0[COMMON] unsigned char 
   369 ;; Return value:  Size  Location     Type
   370 ;;                  1    wreg      void 
   371 ;; Registers used:
   372 ;;		wreg
   373 ;; Tracked objects:
   374 ;;		On entry : 0/0
   375 ;;		On exit  : 0/0
   376 ;;		Unchanged: 0/0
   377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   378 ;;      Params:         0       0       0       0
   379 ;;      Locals:         0       0       0       0
   380 ;;      Temps:          0       0       0       0
   381 ;;      Totals:         0       0       0       0
   382 ;;Total ram usage:        0 bytes
   383 ;; Hardware stack levels used:    1
   384 ;; This function calls:
   385 ;;		Nothing
   386 ;; This function is called by:
   387 ;;		_main
   388 ;; This function uses a non-reentrant model
   389 ;;
   390                           
   391                           
   392                           ;psect for function _putch
   393  0794                     _putch:	
   394                           
   395                           ;incstack = 0
   396                           ; Regs used in _putch: [wreg]
   397  0794  0008               	return
   398  0795                     __end_of_putch:	
   399                           
   400                           	psect	text2
   401  0795                     __ptext2:	
   402 ;; *************** function _capsensor_init *****************
   403 ;; Defined at:
   404 ;;		line 24 in file "newmain.c"
   405 ;; Parameters:    Size  Location     Type
   406 ;;		None
   407 ;; Auto vars:     Size  Location     Type
   408 ;;		None
   409 ;; Return value:  Size  Location     Type
   410 ;;                  1    wreg      void 
   411 ;; Registers used:
   412 ;;		wreg, status,2
   413 ;; Tracked objects:
   414 ;;		On entry : 0/0
   415 ;;		On exit  : 0/0
   416 ;;		Unchanged: 0/0
   417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   418 ;;      Params:         0       0       0       0
   419 ;;      Locals:         0       0       0       0
   420 ;;      Temps:          0       0       0       0
   421 ;;      Totals:         0       0       0       0
   422 ;;Total ram usage:        0 bytes
   423 ;; Hardware stack levels used:    1
   424 ;; This function calls:
   425 ;;		Nothing
   426 ;; This function is called by:
   427 ;;		_main
   428 ;; This function uses a non-reentrant model
   429 ;;
   430                           
   431                           
   432                           ;psect for function _capsensor_init
   433  0795                     _capsensor_init:	
   434                           
   435                           ;newmain.c: 26: VRCON = 0b00011100;
   436                           
   437                           ;incstack = 0
   438                           ; Regs used in _capsensor_init: [wreg+status,2]
   439  0795  301C               	movlw	28
   440  0796  1283               	bcf	3,5	;RP0=0, select bank2
   441  0797  1703               	bsf	3,6	;RP1=1, select bank2
   442  0798  0098               	movwf	24	;volatile
   443                           
   444                           ;newmain.c: 27: SRCON = 0b10110000;
   445  0799  30B0               	movlw	176
   446  079A  1683               	bsf	3,5	;RP0=1, select bank3
   447  079B  1703               	bsf	3,6	;RP1=1, select bank3
   448  079C  009E               	movwf	30	;volatile
   449                           
   450                           ;newmain.c: 29: TRISA=0xFF;
   451  079D  30FF               	movlw	255
   452  079E  1683               	bsf	3,5	;RP0=1, select bank1
   453  079F  1303               	bcf	3,6	;RP1=0, select bank1
   454  07A0  0085               	movwf	5	;volatile
   455                           
   456                           ;newmain.c: 30: TRISB=0x00;
   457  07A1  0186               	clrf	6	;volatile
   458                           
   459                           ;newmain.c: 32: CM1CON0 = 0b00010101;
   460  07A2  3015               	movlw	21
   461  07A3  1283               	bcf	3,5	;RP0=0, select bank2
   462  07A4  1703               	bsf	3,6	;RP1=1, select bank2
   463  07A5  0099               	movwf	25	;volatile
   464                           
   465                           ;newmain.c: 33: CM2CON0 = 0b00100101;
   466  07A6  3025               	movlw	37
   467  07A7  009A               	movwf	26	;volatile
   468                           
   469                           ;newmain.c: 34: OPTION_REG = 0b00000111 | (OPTION_REG & 0b11110000U);
   470  07A8  1683               	bsf	3,5	;RP0=1, select bank1
   471  07A9  1303               	bcf	3,6	;RP1=0, select bank1
   472  07AA  0801               	movf	1,w	;volatile
   473  07AB  39F0               	andlw	240
   474  07AC  3807               	iorlw	7
   475  07AD  0081               	movwf	1	;volatile
   476  07AE  0008               	return
   477  07AF                     __end_of_capsensor_init:	
   478  007E                     btemp	set	126	;btemp
   479  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      0       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                     _capsensor_init
                              _putch
 ---------------------------------------------------------------------------------
 (1) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _capsensor_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _capsensor_init
   _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      0       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       3       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0       3      10        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Sep 19 17:28:05 2019

                     l70 07CA                       l74 07E9                      l585 07EA  
                    _GIE 005F                      _RB4 0034                      _HTS 047A  
__size_of_capsensor_init 001A                     _C1ON 08CF                     _C2ON 08D7  
                   _T0IE 005D                     _T0IF 005A                     _TMR0 0001  
                   _TMR1 000E                     _WPUA 0095                     _WPUB 0115  
                   _main 07AF                     btemp 007E                     start 0000  
                  ?_main 0073                    _ANSEL 011E                    _TMR1H 000F  
                  _TMR1L 000E                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _SRCON 019E                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _VRCON 0118  
                  _putch 0794                    status 0003                    wtemp0 007E  
        __initialization 07FA             __end_of_main 07FA                   ??_main 0073  
                 _C1VREN 08C7                   ?_putch 0073                   _ANSELH 011F  
                 _TMR1ON 0080                   _nRABPU 040F                   putch@c 0073  
         _capsensor_init 0795  __end_of__initialization 07FD           __pcstackCOMMON 0073  
          __end_of_putch 0795   __end_of_capsensor_init 07AF                  ??_putch 0073  
             __pmaintext 07AF                  _CM1CON0 0119                  _CM2CON0 011A  
        ?_capsensor_init 0073                  __ptext1 0794                  __ptext2 0795  
                _counter 0072     end_of_initialization 07FD      start_initialization 07FA  
       ??_capsensor_init 0073              __pbssCOMMON 0070                ___latbits 0001  
         __size_of_putch 0001            __size_of_main 004B               _OPTION_REG 0081  
        _cap_rolling_avg 0070  
